{"version":3,"file":"js/347.379eb7cb.js","mappings":"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","sources":["webpack://gene-curator/./src/stores/curationsStore.js","webpack://gene-curator/./src/stores/precurationsStore.js","webpack://gene-curator/./src/components/CurationModal.vue","webpack://gene-curator/./src/components/PrecurationForm.vue","webpack://gene-curator/./src/components/PrecurationForm.vue?14fe","webpack://gene-curator/./src/components/CurationForm.vue","webpack://gene-curator/./src/components/CurationForm.vue?096c","webpack://gene-curator/./src/components/CurationModal.vue?9e6d","webpack://gene-curator/./src/components/DataDisplayTable.vue","webpack://gene-curator/./src/components/DataDisplayTable.vue?2290","webpack://gene-curator/./src/components/ErrorDialog.vue","webpack://gene-curator/./src/components/ErrorDialog.vue?aa44","webpack://gene-curator/./src/components/GeneDetailCard.vue","webpack://gene-curator/./src/components/GeneDetailCard.vue?712e"],"sourcesContent":["// stores/curationsStore.js\nimport { collection, getDocs, getDoc, addDoc, doc, updateDoc, deleteDoc, Timestamp, query, where } from 'firebase/firestore';\nimport { db } from '@/firebase';\n\n\n/**\n * Fetches all curation documents from the Firestore 'curations' collection.\n * @returns {Promise<Object>} A promise that resolves to an object mapping document IDs to curation data.\n */\nexport const getCurations = async () => {\n  const querySnapshot = await getDocs(collection(db, 'curations'));\n  let curations = {};\n\n  querySnapshot.forEach((docSnapshot) => {\n    if (docSnapshot.exists()) {\n      // Include the document ID in the returned object\n      curations[docSnapshot.id] = { id: docSnapshot.id, ...docSnapshot.data() };\n    } else {\n      throw new Error(\"Curation document not found\");\n    }\n  });\n\n  return curations;\n};\n\n\n/**\n * Checks if the provided curation data is valid according to the provided configuration.\n * @param {Object} curationData - The data to validate.\n * @param {Object} config - The configuration object against which to validate.\n * @returns {Array} An array of error messages, empty if no errors.\n */\nconst validateCurationData = (curationData, config) => {\n  const errors = [];\n  for (const [key, field] of Object.entries(config)) {\n    if (field.required && !curationData[key]) {\n      errors.push(`The field \"${field.label}\" is required.`);\n    }\n  }\n  return errors;\n};\n\n\n/**\n * Creates a new curation document in the Firestore 'curations' collection with the provided data.\n * @param {Object} curationData - The data to create a new curation document.\n * @param {Object} config - The configuration object against which to validate.\n * @returns {Promise<string>} A promise that resolves to the new document's ID.\n */\nexport const createCuration = async (curationData, config) => {\n  const errors = validateCurationData(curationData, config);\n  if (errors.length > 0) {\n    throw new Error(`Validation failed: ${errors.join(' ')}`);\n  }\n\n  const docRef = await addDoc(collection(db, 'curations'), {\n    ...curationData,\n    createdAt: Timestamp.fromDate(new Date()),\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n\n  return docRef.id;\n};\n\n\n/**\n * Retrieves a specific curation document from Firestore using the document ID.\n * @param {string} docId - The document ID of the curation to retrieve.\n * @returns {Promise<Object>} A promise that resolves to an object containing the curation data, if found.\n * @throws {Error} If the document does not exist.\n */\nexport const getCuration = async (docId) => {\n  const curationRef = doc(db, 'curations', docId);\n  const docSnap = await getDoc(curationRef);\n\n  if (docSnap.exists()) {\n    return { id: docSnap.id, ...docSnap.data() };\n  } else {\n    throw new Error(\"Curation document not found\");\n  }\n};\n\n\n/**\n * Updates a specific curation document in Firestore with the provided data.\n * @param {string} docId - The document ID of the curation to update.\n * @param {Object} updatedData - An object containing the updated data for the curation.\n * @param {Object} config - The configuration object against which to validate.\n * @returns {Promise<void>} A promise that resolves once the update is complete.\n */\nexport const updateCuration = async (docId, updatedData, config) => {\n  const errors = validateCurationData(updatedData, config);\n  if (errors.length > 0) {\n    throw new Error(`Validation failed: ${errors.join(' ')}`);\n  }\n\n  const curationRef = doc(db, 'curations', docId);\n  await updateDoc(curationRef, {\n    ...updatedData,\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n};\n\n\n/**\n * Deletes a specific curation document from Firestore using the document ID.\n * @param {string} docId - The document ID of the curation to delete.\n * @returns {Promise<void>} A promise that resolves once the document is deleted.\n * @throws {Error} If the document does not exist or cannot be deleted.\n */\nexport const deleteCuration = async (docId) => {\n  const curationRef = doc(db, 'curations', docId);\n  await deleteDoc(curationRef);\n};\n\n\n/**\n * Retrieves a curation document from Firestore by either the approved symbol or HGNC ID.\n * @param {string} identifier - The approved symbol or HGNC ID to search for.\n * @returns {Promise<Object|null>} A promise that resolves to an object containing the curation data if found, otherwise null.\n */\nexport const getCurationByHGNCIdOrSymbol = async (identifier) => {\n    const curationsRef = collection(db, 'curations');\n    const symbolQuery = query(curationsRef, where(\"approved_symbol\", \"==\", identifier));\n    const hgncQuery = query(curationsRef, where(\"hgnc_id\", \"==\", identifier));\n  \n    const symbolSnapshot = await getDocs(symbolQuery);\n    let curationData = null;\n  \n    symbolSnapshot.forEach((doc) => {\n      if (doc.exists()) {\n        curationData = { id: doc.id, ...doc.data() };\n      }\n    });\n  \n    if (!curationData) {\n      const hgncSnapshot = await getDocs(hgncQuery);\n      hgncSnapshot.forEach((doc) => {\n        if (doc.exists()) {\n          curationData = { id: doc.id, ...doc.data() };\n        }\n      });\n    }\n  \n    return curationData;\n  };","// stores/precurationsStore.js\nimport { collection, getDocs, getDoc, addDoc, doc, updateDoc, deleteDoc, Timestamp, query, where } from 'firebase/firestore';\nimport { db } from '@/firebase';\n\n\n/**\n * Validates the given precuration data against the precuration details configuration.\n * @param {Object} precurationData - The data to validate.\n * @returns {Array} An array of error messages, empty if no errors.\n */\nconst validatePrecurationData = (precurationData, config) => {\n  const errors = [];\n  for (const [key, field] of Object.entries(config)) {\n    if (field.required && (precurationData[key] === undefined || precurationData[key] === '')) {\n      errors.push(`The field \"${field.label}\" is required.`);\n    }\n  }\n  return errors;\n};\n\n\n/**\n * Fetches all precuration documents from the Firestore collection.\n * @returns {Promise<Object>} An object mapping document IDs to precuration data.\n */\nexport const getPrecurations = async () => {\n  const querySnapshot = await getDocs(collection(db, 'precurations'));\n  let precurations = {};\n\n  querySnapshot.forEach((docSnapshot) => {\n    if (docSnapshot.exists()) {\n      // Include the document ID in the returned object\n      precurations[docSnapshot.id] = { id: docSnapshot.id, ...docSnapshot.data() };\n    } else {\n      throw new Error(\"Precuration document not found\");\n    }\n  });\n\n  return precurations;\n};\n\n\n/**\n * Creates a new precuration document in Firestore with the given data.\n * @param {Object} precurationData - The data for the new precuration.\n * @returns {Promise<string>} The ID of the newly created document.\n */\nexport const createPrecuration = async (precurationData, config) => {\n  const validationErrors = validatePrecurationData(precurationData, config);\n  if (validationErrors.length > 0) {\n    throw new Error(`Validation failed: ${validationErrors.join(' ')}`);\n  }\n\n  const docRef = await addDoc(collection(db, 'precurations'), {\n    ...precurationData,\n    createdAt: Timestamp.fromDate(new Date()),\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n\n  return docRef.id;\n};\n\n\n/**\n * Retrieves a specific precuration document from Firestore by its document ID.\n * @param {string} docId - The document ID of the precuration to retrieve.\n * @returns {Promise<Object>} An object containing the precuration data.\n * @throws {Error} If the document is not found.\n */\nexport const getPrecuration = async (docId) => {\n  const precurationRef = doc(db, 'precurations', docId);\n  const docSnap = await getDoc(precurationRef);\n\n  if (docSnap.exists()) {\n    return { id: docSnap.id, ...docSnap.data() };\n  } else {\n    throw new Error(\"Precuration document not found\");\n  }\n};\n\n\n/**\n * Retrieves a specific precuration document from Firestore by either the approved symbol or HGNC ID.\n * @param {string} identifier - The approved symbol or HGNC ID to search for.\n * @returns {Promise<Object|null>} An object containing the precuration data if found, otherwise null.\n */\nexport const getPrecurationByHGNCIdOrSymbol = async (identifier) => {\n  const precurationsRef = collection(db, 'precurations');\n  const symbolQuery = query(precurationsRef, where(\"approved_symbol\", \"==\", identifier));\n  const hgncQuery = query(precurationsRef, where(\"hgnc_id\", \"==\", identifier));\n\n  const symbolSnapshot = await getDocs(symbolQuery);\n  const hgncSnapshot = await getDocs(hgncQuery);\n\n  let precurationData = null;\n  symbolSnapshot.forEach((doc) => {\n    if (doc.exists()) {\n      precurationData = { id: doc.id, ...doc.data() };\n    }\n  });\n\n  if (!precurationData) {\n    hgncSnapshot.forEach((doc) => {\n      if (doc.exists()) {\n        precurationData = { id: doc.id, ...doc.data() };\n      }\n    });\n  }\n\n  return precurationData;\n};\n\n\n/**\n * Updates a precuration document in Firestore with the given data.\n * @param {string} docId - The document ID of the precuration to update.\n * @param {Object} updatedData - An object containing the updated data.\n * @returns {Promise<void>}\n */\nexport const updatePrecuration = async (docId, updatedData, config) => {\n  const validationErrors = validatePrecurationData(updatedData, config);\n  if (validationErrors.length > 0) {\n    throw new Error(`Validation failed: ${validationErrors.join(' ')}`);\n  }\n\n  const precurationRef = doc(db, 'precurations', docId);\n  await updateDoc(precurationRef, {\n    ...updatedData,\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n};\n\n\n/**\n * Deletes a specific precuration document from Firestore by its document ID.\n * @param {string} docId - The document ID of the precuration to delete.\n * @returns {Promise<void>}\n * @throws {Error} If the document is not found or cannot be deleted.\n */\nexport const deletePrecuration = async (docId) => {\n  const precurationRef = doc(db, 'precurations', docId);\n  await deleteDoc(precurationRef);\n};\n","<!-- components/CurationModal.vue -->\n<template>\n  <v-dialog v-model=\"isOpen\" persistent max-width=\"1200px\">\n    <v-card>\n      <div class=\"d-flex justify-space-between align-center\">\n        <v-card-title>\n          {{ title }} - {{ editedItem.approved_symbol }} - HGNC:{{ editedItem.hgnc_id }}\n        </v-card-title>\n        <v-btn icon @click=\"close\">\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n      </div>\n      <v-card-text>\n        <v-tabs v-model=\"tab\" grow>\n          <v-tab v-if=\"showPreCurationTab\">Pre-Curation</v-tab>\n          <v-tab v-if=\"showCurationTab\">Curation</v-tab>\n        </v-tabs>\n\n         <v-window v-model=\"tab\" style=\"min-height: 300px;\">\n          <v-window-item>\n            <!-- Gene Detail Card Component -->\n            <GeneDetailCard\n               v-if=\"showGeneDetailCard\"\n              :id=\"editedItem.hgnc_id\"\n              visibilityScope=\"curationView\"\n              :showTitle=\"false\"\n            />\n\n            <!-- Precuration Form Component -->\n            <PrecurationForm\n              :approvedSymbol=\"editedItem.approved_symbol\"\n              :hgncId=\"editedItem.hgnc_id\"\n              @precuration-accepted=\"handlePrecurationAccepted\"\n            />\n          </v-window-item>\n\n          <v-window-item v-if=\"showCurationTab\">\n            <!-- CurationForm Component -->\n            <CurationForm\n              :approvedSymbol=\"editedItem.approved_symbol\"\n              :hgncId=\"editedItem.hgnc_id\"\n            />\n          </v-window-item>\n        </v-window>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"blue darken-1\" text @click=\"close\">Cancel</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n\n<v-snackbar\n  v-model=\"snackbarVisible\"\n  :color=\"snackbarColor\"\n  :timeout=\"6000\"\n>\n  {{ snackbarMessage }}\n</v-snackbar>\n\n</template>\n\n\n<script>\nimport { ref, watchEffect, watch, computed } from 'vue';\nimport GeneDetailCard from './GeneDetailCard.vue';\nimport PrecurationForm from './PrecurationForm.vue';\nimport CurationForm from './CurationForm.vue'; // Import the CurationForm component\nimport { getPrecurationByHGNCIdOrSymbol } from '@/stores/precurationsStore';\n\nexport default {\n  components: {\n    GeneDetailCard,\n    PrecurationForm,\n    CurationForm\n  },\n  props: {\n    item: {\n      type: Object,\n      required: true,\n    },\n    open: {\n      type: Boolean,\n      required: true,\n    },\n    context: {\n      type: String,\n      default: 'gene' // Default context, can be 'gene', 'precuration', or 'curation'\n    },\n  },\n  emits: ['close'],\n  setup(props, { emit }) {\n    const isOpen = ref(props.open);\n    const editedItem = ref({ ...props.item });\n    const showGeneDetailCard = ref(true); // Controls the visibility of the gene detail card\n    const showPreCurationTab = ref(true); // Controls the visibility of the precuration tab\n    const showCurationTab = ref(false); // Controls the visibility of the curation tab\n    const tab = ref(0); // Controls the active tab\n\n    const snackbarVisible = ref(false);\n    const snackbarMessage = ref('');\n    const snackbarColor = ref('success'); // Default color\n\n    const showSnackbar = (message, color = 'success') => {\n      snackbarMessage.value = message;\n      snackbarColor.value = color;\n      snackbarVisible.value = true;\n    };\n\n    watchEffect(() => {\n      isOpen.value = props.open;\n      editedItem.value = { ...props.item };\n    });\n\n    const handlePrecurationAccepted = () => {\n      if (props.context === 'precuration') {\n        // If the context is 'precuration', just close the modal\n        close();\n      } else {\n        // Otherwise, switch to the curation tab\n        showCurationTab.value = true;\n        tab.value = 1;\n      }\n    };\n\n    const close = () => emit('close');\n\n    const checkExistingCuration = async () => {\n      try {\n        const existingCuration = await getPrecurationByHGNCIdOrSymbol(editedItem.value.hgnc_id || editedItem.value.approved_symbol);\n        if (existingCuration) {\n          showCurationTab.value = true;\n          tab.value = 1; // Open Curation tab if curation exists\n        } else {\n          showCurationTab.value = false;\n          tab.value = 0; // Open Precuration tab if curation does not exist\n        }\n      } catch (error) {\n        showSnackbar(\"Error checking existing curation: \" + error.message, 'error');\n      }\n    };\n\n    // Computed property to determine the title of the modal\n    const title = computed(() => {\n      return props.context === 'curation' ? 'Curation' \n        : props.context === 'precuration' ? 'Precuration' \n        : 'Gene Curation';\n    });\n\n    // Watch for changes to the 'open' prop\n    watch(() => props.open, async (newVal) => {\n      if (newVal) { // If the modal is being opened\n        await initializeModal();\n      }\n    });\n\n    // Adjust the initial tab and content based on the context and existing curation\n    const initializeModal = async () => {\n      if (props.context === 'precuration') {\n        showGeneDetailCard.value = false;\n        showPreCurationTab.value = true;\n        showCurationTab.value = false;\n        tab.value = 0;\n      } else if (props.context === 'curation') {\n        showGeneDetailCard.value = false;\n        showPreCurationTab.value = false;\n        await checkExistingCuration(); // Check if there's an existing curation\n        // Set tab based on the existence of curation\n        tab.value = showCurationTab.value ? 1 : 0;\n      } else {\n        // For 'gene' context or other cases\n        await checkExistingCuration();\n      }\n    };\n\n    // Call initializeModal when the modal is opened\n    watch(() => props.open, (newVal) => {\n      if (newVal) {\n        initializeModal();\n      }\n    });\n\n    return {\n      initializeModal,\n      isOpen,\n      editedItem,\n      close,\n      handlePrecurationAccepted,\n      showGeneDetailCard,\n      showPreCurationTab,\n      showCurationTab,\n      tab,\n      snackbarVisible,\n      snackbarMessage,\n      snackbarColor,\n      showSnackbar,\n      title\n    };\n  },\n};\n</script>\n\n\n<style scoped>\n/* Add styles if needed */\n</style>\n","<!-- components/PrecurationForm.vue -->\n<template>\n  <v-card class=\"elevation-2\">\n    <v-card-title>Precuration</v-card-title>\n    <v-card-text>\n      <v-container>\n        <!-- Group the fields by the group attribute -->\n        <template v-for=\"(group, groupName) in groupedFields\" :key=\"groupName\">\n          <v-row v-if=\"groupHasVisibleFields(group)\">\n            <v-col cols=\"12\">\n              <h2>{{ groupName }}</h2>\n            </v-col>\n            <!-- Loop over fields within the same group and place them in columns -->\n            <v-col \n              v-for=\"(field, index) in group\" \n              :key=\"index\" \n              :cols=\"12 / group.length\"\n            >\n              <template v-if=\"field.format === 'boolean' && field.visibility.curationView\">\n                <v-switch\n                  v-model=\"precurationData[field.key]\"\n                  :label=\"field.label\"\n                  :false-value=\"false\"\n                  :true-value=\"true\"\n                  :color=\"field.style.curationView === 'switch' ? field.style.color : ''\"\n                  :class=\"{ 'inactive-switch': !precurationData[field.key] && field.style.curationView === 'switch' }\"\n                ></v-switch>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <template v-else-if=\"field.style && field.style.curationView === 'text-field' && field.visibility.curationView\">\n                <v-text-field\n                  v-model=\"precurationData[field.key]\"\n                  :label=\"field.label\"\n                  :class=\"field.style.curationView === 'text-field' ? 'custom-text-field' : ''\"\n                ></v-text-field>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <template v-else-if=\"field.style && field.style.curationView === 'select' && field.visibility.curationView\">\n                <v-select\n                  v-model=\"precurationData[field.key]\"\n                  :items=\"field.options\"\n                  :label=\"field.label\"\n                ></v-select>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <!-- Add other field types as needed -->\n            </v-col>\n          </v-row>\n        </template>\n        <v-row>\n          <v-col cols=\"12\" class=\"text-right\">\n            <v-btn color=\"primary\" @click=\"submitPrecuration\">Accept</v-btn>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-card-text>\n  </v-card>\n\n  <!-- Error Dialog Component -->\n  <error-dialog\n    v-model=\"error\"\n    :error=\"errorVal\"\n    @value=\"error = $event\"\n  ></error-dialog>\n</template>\n\n\n<script>\nimport { precurationDetailsConfig } from '@/config/workflows/KidneyGeneticsGeneCuration/precurationDetailsConfig';\nimport {\n  getPrecurationByHGNCIdOrSymbol,\n  createPrecuration,\n  updatePrecuration\n} from \"@/stores/precurationsStore\";\nimport ErrorDialog from \"@/components/ErrorDialog\";\n\nexport default {\n  name: 'PrecurationForm',\n  props: {\n    approvedSymbol: String,\n    hgncId: String,\n  },\n  components: {\n    ErrorDialog,\n  },\n  data() {\n    return {\n      precurationData: this.initializePrecurationData(),\n      existingPrecurationId: null,\n      error: false,\n      errorVal: {},\n    };\n  },\n  computed: {\n    groupedFields() {\n      const fields = this.precurationFields;\n      const groups = {};\n\n      // Group fields by their 'group.name'\n      fields.forEach(field => {\n        if (!groups[field.group.name]) {\n          groups[field.group.name] = [];\n        }\n        groups[field.group.name].push(field);\n      });\n\n      // Sort groups by 'group.order'\n      Object.values(groups).forEach(group => {\n        group.sort((a, b) => a.group.order - b.group.order);\n      });\n\n      return groups;\n    },\n    precurationFields() {\n      let fields = Object.entries(precurationDetailsConfig)\n        .map(([key, config]) => ({ ...config, key }));\n      return fields;\n    },\n  },\n  methods: {\n    groupHasVisibleFields(group) {\n      // This will check if there's at least one field in the group that should be visible\n      return group.some(field => field.visibility.curationView);\n    },\n    initializePrecurationData() {\n      const data = {};\n      Object.keys(precurationDetailsConfig).forEach(key => {\n        data[key] = ''; // Initialize with default value\n      });\n      return data;\n    },\n    validatePrecurationData(precurationData) {\n      const errors = [];\n      for (const [key, field] of Object.entries(precurationDetailsConfig)) {\n        if (field.required && (precurationData[key] === undefined || precurationData[key] === '')) {\n          errors.push(`The field \"${field.label}\" is required.`);\n        }\n      }\n      return errors;\n    },\n    async submitPrecuration() {\n      // Reset error state\n      this.error = false;\n      this.errorVal = {};\n\n      try {\n        // Validate the precuration data\n        const validationErrors = this.validatePrecurationData(this.precurationData, precurationDetailsConfig);\n        if (validationErrors.length > 0) {\n          throw new Error(`Validation failed: ${validationErrors.join(' ')}`);\n        }\n\n        // Add timestamps for creation or update\n        const currentTime = new Date().toISOString();\n        if (!this.existingPrecurationId) {\n          // If creating a new precuration\n          this.precurationData.createdAt = currentTime;\n          const newId = await createPrecuration(this.precurationData, precurationDetailsConfig);\n          console.log('New precuration created with ID:', newId);\n        } else {\n          // If updating an existing precuration\n          this.precurationData.updatedAt = currentTime;\n          await updatePrecuration(this.existingPrecurationId, this.precurationData, precurationDetailsConfig);\n          console.log('Precuration updated:', this.existingPrecurationId);\n        }\n\n        // Emit an event to indicate successful submission\n        this.$emit('precuration-accepted', this.precurationData);\n      } catch (error) {\n        // Set error state and display error dialog\n        this.error = true;\n        this.errorVal = {\n          title: \"Submission Error\",\n          message: error.message || \"There was an error submitting the precuration. Please check the required fields.\"\n        };\n        console.error('Error during precuration submission:', error.message);\n      }\n    },\n    displaySwitchValue(value) {\n      return value ? 'Yes' : 'No';\n    },\n  },\n  async created() {\n    try {\n      const precuration = await getPrecurationByHGNCIdOrSymbol(this.approvedSymbol || this.hgncId);\n      if (precuration) {\n        this.existingPrecurationId = precuration.id;\n        Object.assign(this.precurationData, precuration);\n      }\n    } catch (error) {\n      console.error('Error fetching precuration:', error.message);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.text-center {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.inactive-switch {\n  --v-theme-switch-on-background: var(--v-theme-inactive-color);\n}\n/* Additional styles can be added here if needed */\n</style>\n","import { render } from \"./PrecurationForm.vue?vue&type=template&id=663149df&scoped=true\"\nimport script from \"./PrecurationForm.vue?vue&type=script&lang=js\"\nexport * from \"./PrecurationForm.vue?vue&type=script&lang=js\"\n\nimport \"./PrecurationForm.vue?vue&type=style&index=0&id=663149df&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-663149df\"]])\n\nexport default __exports__","<!-- components/CurationForm.vue -->\n<template>\n  <v-card class=\"elevation-2\">\n    <v-card-title>\n      Curation\n      <v-btn icon class=\"add-curation-btn\" @click=\"addCurationEntity\">\n        <v-icon>mdi-plus</v-icon>\n      </v-btn>\n    </v-card-title>\n\n    <!-- Expansion Panels for multiple curation entities -->\n    <v-expansion-panels multiple>\n      <v-expansion-panel v-for=\"(curationData, index) in curationDataArray\" :key=\"`curation-${index}`\" :title=\"`Curation Entity ${ index + 1 }`\">\n          <v-expansion-panel-text>\n            <!-- Dynamic Field Rendering Based on Configuration -->\n            <template v-for=\"(group, groupName) in groupedFields\" :key=\"groupName\">\n              <v-row v-if=\"groupHasVisibleFields(group)\">\n                <v-col cols=\"12\">\n                  <h2>{{ groupName }}</h2>\n                </v-col>\n                <v-col\n                  v-for=\"(field, fieldIndex) in group\"\n                  :key=\"`field-${index}-${fieldIndex}`\"\n                  :cols=\"12 / group.length\"\n                >\n\n                  <!-- Handle Different Field Types -->\n                  <template v-if=\"field.format === 'text' && field.style && field.style.curationView === 'text-field'\">\n                    <v-text-field\n                      v-model=\"curationData[field.key]\"\n                      :label=\"field.label\"\n                      outlined\n                      dense\n                    ></v-text-field>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <template v-else-if=\"field.format === 'boolean'\">\n                    <v-checkbox\n                      v-model=\"curationData[field.key]\"\n                      :label=\"field.label\"\n                    ></v-checkbox>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <template v-else-if=\"field.format === 'number'\">\n                    <v-text-field\n                      v-model=\"curationData[field.key]\"\n                      :label=\"field.label\"\n                      :min=\"field.min\"\n                      :max=\"field.max\"\n                      type=\"number\"\n                      outlined\n                      dense\n                    ></v-text-field>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <template v-else-if=\"field.format === 'array' && field.style && field.style.curationView === 'select'\">\n                    <v-select\n                      v-model=\"curationData[field.key]\"\n                      :items=\"field.options\"\n                      :label=\"field.label\"\n                      multiple\n                      outlined\n                      dense\n                    ></v-select>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <template v-else-if=\"field.format === 'text' && field.style && field.style.curationView === 'select'\">\n                    <v-select\n                      v-model=\"curationData[field.key]\"\n                      :items=\"field.options\"\n                      :label=\"field.label\"\n                      outlined\n                      dense\n                    ></v-select>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <!-- Add other field types as needed -->\n                </v-col>\n              </v-row>\n            </template>\n          </v-expansion-panel-text>\n      </v-expansion-panel>\n    </v-expansion-panels>\n\n    <v-card-actions>\n      <v-spacer></v-spacer>\n      <v-btn color=\"primary\" @click=\"saveCuration\">Save All</v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n\n<script>\nimport { curationDetailsConfig } from '@/config/workflows/KidneyGeneticsGeneCuration/curationDetailsConfig';\nimport {\n  createCuration,\n  updateCuration,\n  getCurationByHGNCIdOrSymbol\n} from \"@/stores/curationsStore\";\n\nexport default {\n  name: 'CurationForm',\n  props: {\n    approvedSymbol: String,\n    hgncId: String,\n  },\n  data() {\n    return {\n      curationDataArray: [this.initializeCurationData()],\n      existingCurationId: null,\n    };\n  },\n  async created() {\n    if (this.hgncId || this.approvedSymbol) {\n      try {\n        const curation = await getCurationByHGNCIdOrSymbol(this.hgncId || this.approvedSymbol);\n        if (curation) {\n          this.existingCurationId = curation.id;\n          Object.assign(this.curationData, curation);\n        }\n      } catch (error) {\n        console.error('Error fetching curation:', error.message);\n      }\n    }\n  },\n  computed: {\n    groupedFields() {\n      const fields = Object.entries(curationDetailsConfig)\n        .map(([key, config]) => ({ ...config, key }));\n      \n      const groups = {};\n      fields.forEach(field => {\n        if (!groups[field.group.name]) {\n          groups[field.group.name] = [];\n        }\n        groups[field.group.name].push(field);\n      });\n\n      Object.values(groups).forEach(group => {\n        group.sort((a, b) => a.group.order - b.group.order);\n      });\n\n      return groups;\n    },\n  },\n  methods: {\n    groupHasVisibleFields(group) {\n      // This will check if there's at least one field in the group that should be visible\n      return group.some(field => field.visibility.curationView);\n    },\n    addCurationEntity() {\n      this.curationDataArray.push(this.initializeCurationData());\n    },\n    initializeCurationData() {\n      const data = {};\n      Object.keys(curationDetailsConfig).forEach(key => {\n        const field = curationDetailsConfig[key];\n        if (field.format === 'boolean') {\n          data[key] = false;\n        } else if (field.format === 'number') {\n          data[key] = field.min || 0; // Use min value if defined, otherwise default to 0\n        } else if (field.format === 'array' && field.style && field.style.curationView === 'select') {\n          data[key] = [];\n        } else if (field.format === 'text' && field.style && field.style.curationView === 'select') {\n          data[key] = null;\n        } else {\n          data[key] = '';\n        }\n      });\n      return data;\n    },\n    validateCurationData(curationData) {\n      const errors = [];\n      for (const [key, field] of Object.entries(curationDetailsConfig)) {\n        if (field.required && !curationData[key]) {\n          errors.push(`The field \"${field.label}\" is required.`);\n        }\n      }\n      return errors;\n    },\n    async saveCuration() {\n      try {\n        for (const curationData of this.curationDataArray) {\n          if (curationData.id) {\n            // Update existing curation\n            await updateCuration(curationData.id, curationData, curationDetailsConfig);\n            console.log('Curation updated:', curationData.id);\n          } else {\n            // Create new curation\n            const newId = await createCuration(curationData, curationDetailsConfig);\n            console.log('New curation created with ID:', newId);\n            curationData.id = newId; // Update the ID in the curation data array\n          }\n        }\n      } catch (error) {\n        console.error('Error saving curation:', error.message);\n      }\n    },\n  },\n};\n</script>\n\n\n<style scoped>\nh2 {\n  font-size: 1.5em;\n  margin-bottom: 0.5em;\n}\n.add-curation-btn {\n  margin-left: auto; /* pushes the button to the right */\n}\n</style>\n","import { render } from \"./CurationForm.vue?vue&type=template&id=f19e2e3e&scoped=true\"\nimport script from \"./CurationForm.vue?vue&type=script&lang=js\"\nexport * from \"./CurationForm.vue?vue&type=script&lang=js\"\n\nimport \"./CurationForm.vue?vue&type=style&index=0&id=f19e2e3e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f19e2e3e\"]])\n\nexport default __exports__","import { render } from \"./CurationModal.vue?vue&type=template&id=f05fa8b2&scoped=true\"\nimport script from \"./CurationModal.vue?vue&type=script&lang=js\"\nexport * from \"./CurationModal.vue?vue&type=script&lang=js\"\n\nimport \"./CurationModal.vue?vue&type=style&index=0&id=f05fa8b2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f05fa8b2\"]])\n\nexport default __exports__","<!-- components/DataDisplayTable.vue -->\n<template>\n  <v-container>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"items\"\n      v-model:items-per-page=\"itemsPerPage\"\n      :server-items-length=\"totalItems\"\n      :loading=\"loading\"\n      class=\"elevation-1\"\n      density=\"compact\"\n    >\n      <!-- Header slot -->\n      <template v-for=\"h in headers\" v-slot:[`header.${h.value}`]=\"{ header }\" :key=\"h.value\">\n            <span>{{h.title}}</span>\n            <v-tooltip\n              v-bind:header=\"header\"\n              v-if=\"h.description\"\n              activator=\"parent\"\n              location=\"top\"\n            >\n              {{ h.description }}\n            </v-tooltip>\n      </template>\n\n      <!-- Default slot for items -->\n      <template v-for=\"column in config.columns\" v-slot:[`item.${column.name}`]=\"{ item }\" :key=\"column.name\">\n        <!-- Handle text formatting -->\n        <div v-if=\"column.type === 'text'\">\n          {{ item[column.name] }}\n        </div>\n        <!-- Handle date formatting -->\n        <div v-else-if=\"column.type === 'date'\">\n          {{ formatTimestamp(item[column.name]) }}\n        </div>\n        <!-- Handle boolean formatting -->\n        <router-link v-else-if=\"column.type === 'link'\" :to=\"column.to(item)\">\n          {{ item[column.name] }}\n        </router-link>\n        <!-- Handle boolean formatting -->\n        <template v-else-if=\"column.type === 'slot'\">\n          <slot :name=\"column.slotName\" :item=\"item\"></slot>\n        </template>\n      </template>\n    </v-data-table>\n    \n    <!-- Modal slot -->\n    <slot name=\"modal\"></slot>\n\n    <!-- Pagination controls -->\n    <v-pagination\n      v-model=\"page\"\n      :length=\"totalPages\"\n      @update:page=\"$emit('update-page', page)\"\n    ></v-pagination>\n  </v-container>\n</template>\n\n<script>\nimport { ref, computed, watch } from 'vue';\n\n/**\n * A generic data table component for displaying items with configurable columns\n * and pagination.\n */\nexport default {\n  props: {\n    headers: Array, // The headers for the table\n    items: Array, // The items to display in the table\n    config: Object, // Configuration for the columns\n    totalItems: Number, // Total number of items for pagination\n    loading: Boolean, // Loading state\n  },\n  setup(props, { emit }) {\n    const page = ref(1); // Current page number\n    const itemsPerPage = ref(10); // Number of items per page\n\n    // Compute the total number of pages\n    const totalPages = computed(() => Math.ceil(props.totalItems / itemsPerPage.value));\n\n    // Method to format Firestore Timestamp\n    const formatTimestamp = (timestamp) => {\n      if (!timestamp) return '';\n      const date = new Date(timestamp.seconds * 1000);\n      return date.toLocaleDateString(); // Adjust format as needed\n    };\n\n    // Watch for changes in page and itemsPerPage and emit events\n    watch(page, () => {\n      emit('page-changed', page.value);\n    });\n\n    watch(itemsPerPage, () => {\n      emit('items-per-page-changed', itemsPerPage.value);\n    });\n\n    return {\n      page,\n      itemsPerPage,\n      totalPages,\n      formatTimestamp\n    };\n  },\n};\n</script>\n","import { render } from \"./DataDisplayTable.vue?vue&type=template&id=7f99aeb9\"\nimport script from \"./DataDisplayTable.vue?vue&type=script&lang=js\"\nexport * from \"./DataDisplayTable.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-dialog width=\"470\">\n    <v-card style=\"padding: 10px 0\">\n      <v-card-title\n        style=\"font-family: google-sans, sans-serif; font-size: 24px\"\n      >\n        {{ error.title }}\n      </v-card-title>\n      <v-card-text>\n        {{ error.message }}\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer />\n        <v-btn color=\"primary\" elevation=\"0\" @click=\"$emit('value', false)\"\n          >Ok</v-btn\n        >\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  name: \"ErrorDialog\",\n\n  props: {\n    error: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n};\n</script>\n","import { render } from \"./ErrorDialog.vue?vue&type=template&id=ccef2fcc\"\nimport script from \"./ErrorDialog.vue?vue&type=script&lang=js\"\nexport * from \"./ErrorDialog.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- components/GeneDetailCard.vue -->\n<template>\n  <v-container>\n    <v-card v-if=\"gene\" class=\"mx-auto my-4\" max-width=\"800\">\n      <v-card-title v-if=\"showTitle\" class=\"headline\">{{ gene.approved_symbol }}</v-card-title>\n      <v-card-text>\n        <v-table dense>\n          <tbody>\n            <template v-for=\"(value, key) in filteredGeneDetails\" :key=\"key\">\n              <tr>\n                <td>\n                  <strong>\n                    <span class=\"label-hover\" :title=\"value.description\">{{ value.label }}</span>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"start\"\n                    >\n                      {{ value.description }}\n                    </v-tooltip>\n                  </strong>\n                </td>\n                <td v-html=\"value.formattedValue\"></td>\n              </tr>\n            </template>\n          </tbody>\n        </v-table>\n      </v-card-text>\n    </v-card>\n    <v-alert v-else type=\"error\">\n      Gene not found or failed to load.\n    </v-alert>\n  </v-container>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport { getGeneByHGNCIdOrSymbol } from '@/stores/geneStore';\nimport { geneDetailsConfig } from '@/config/workflows/KidneyGeneticsGeneCuration/workflowConfig';\n\nexport default {\n  props: {\n    id: String,\n    visibilityScope: {\n      type: String,\n      default: 'standardView', // or 'curationView'\n    },\n    showTitle: { // New prop for showing the card title\n      type: Boolean,\n      default: true,\n    },\n  },\n  setup(props) {\n    const gene = ref(null);\n\n    onMounted(async () => {\n      if (props.id) {\n        gene.value = await getGeneByHGNCIdOrSymbol(props.id).catch(error => {\n          console.error(error.message);\n        });\n      }\n    });\n\n    const filteredGeneDetails = computed(() => {\n      if (!gene.value) return [];\n\n      return Object.entries(geneDetailsConfig)\n        .filter(([, fieldConfig]) => fieldConfig.visibility[props.visibilityScope])\n        .map(([key, fieldConfig]) => {\n          const value = gene.value[key];\n          return {\n            label: fieldConfig.label,\n            description: fieldConfig.description || '',\n            formattedValue: formatValue(value, fieldConfig),\n          };\n        });\n    });\n\n    // for now objects and arrays are formatted into a readable string format\n    // TODO: add support for formatting objects and arrays into a table\n    function formatValue(value, fieldConfig) {\n      if (value == null) return 'N/A'; // Handle null and undefined values\n\n      switch (fieldConfig.format) {\n        case 'date':\n          return new Date(value.seconds * 1000).toLocaleDateString();\n        case 'number':\n          return parseFloat(value).toFixed(2);\n        case 'array':\n          return value.join(', ');\n        case 'map':\n          return Object.entries(value).map(([k, v]) => `${k}: ${v}`).join(', ');\n        case 'text':\n          return value;\n        default:\n          return JSON.stringify(value);\n      }\n    }\n\n    return { gene, filteredGeneDetails };\n  },\n};\n</script>\n\n<style scoped>\n.label-hover {\n  cursor: help;\n}\n\n.v-simple-table {\n  max-height: 300px;\n  overflow-y: auto;\n}\n</style>\n","import { render } from \"./GeneDetailCard.vue?vue&type=template&id=ea7ae29e&scoped=true\"\nimport script from \"./GeneDetailCard.vue?vue&type=script&lang=js\"\nexport * from \"./GeneDetailCard.vue?vue&type=script&lang=js\"\n\nimport \"./GeneDetailCard.vue?vue&type=style&index=0&id=ea7ae29e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ea7ae29e\"]])\n\nexport default __exports__"],"names":["getCurations","async","querySnapshot","getDocs","collection","db","curations","forEach","docSnapshot","exists","Error","id","data","validateCurationData","curationData","config","errors","key","field","Object","entries","required","push","label","createCuration","length","join","docRef","addDoc","createdAt","Timestamp","fromDate","Date","updatedAt","updateCuration","docId","updatedData","curationRef","doc","updateDoc","deleteCuration","deleteDoc","getCurationByHGNCIdOrSymbol","curationsRef","symbolQuery","query","where","identifier","hgncQuery","symbolSnapshot","hgncSnapshot","validatePrecurationData","precurationData","undefined","getPrecurations","precurations","createPrecuration","validationErrors","getPrecurationByHGNCIdOrSymbol","precurationsRef","updatePrecuration","precurationRef","deletePrecuration","class","_createVNode","_component_v_dialog","$setup","isOpen","$event","persistent","_component_v_card","_createElementVNode","_hoisted_1","_component_v_card_title","title","_toDisplayString","editedItem","approved_symbol","hgnc_id","_component_v_btn","icon","onClick","close","_component_v_icon","_component_v_card_text","_component_v_tabs","tab","grow","showPreCurationTab","_createBlock","_component_v_tab","showCurationTab","_component_v_window","style","_component_v_window_item","showGeneDetailCard","_component_GeneDetailCard","visibilityScope","showTitle","_component_PrecurationForm","approvedSymbol","hgncId","onPrecurationAccepted","handlePrecurationAccepted","_component_CurationForm","_component_v_card_actions","_component_v_spacer","color","text","_component_v_snackbar","snackbarVisible","snackbarColor","timeout","snackbarMessage","_component_v_container","_createElementBlock","_Fragment","_renderList","$options","groupedFields","group","groupName","groupHasVisibleFields","_component_v_row","_component_v_col","cols","index","format","visibility","curationView","_component_v_switch","$data","_normalizeClass","_component_v_tooltip","activator","location","description","_component_v_text_field","_component_v_select","items","options","submitPrecuration","_component_error_dialog","error","errorVal","onValue","_cache","name","props","String","components","ErrorDialog","this","initializePrecurationData","existingPrecurationId","computed","fields","precurationFields","groups","values","sort","a","b","order","precurationDetailsConfig","map","methods","some","keys","currentTime","toISOString","console","log","newId","$emit","message","displaySwitchValue","value","created","precuration","assign","__exports__","addCurationEntity","_component_v_expansion_panels","multiple","curationDataArray","_component_v_expansion_panel","_component_v_expansion_panel_text","fieldIndex","outlined","dense","_component_v_checkbox","min","max","type","saveCuration","initializeCurationData","existingCurationId","curation","curationDetailsConfig","GeneDetailCard","PrecurationForm","CurationForm","item","open","Boolean","context","default","emits","setup","emit","ref","showSnackbar","watchEffect","checkExistingCuration","existingCuration","watch","newVal","initializeModal","render","_component_v_data_table","headers","$props","itemsPerPage","totalItems","loading","density","h","header","columns","column","_hoisted_2","formatTimestamp","_component_router_link","to","_renderSlot","_ctx","$slots","slotName","_component_v_pagination","page","totalPages","Array","Number","Math","ceil","timestamp","date","seconds","toLocaleDateString","width","elevation","gene","_component_v_table","filteredGeneDetails","innerHTML","formattedValue","_component_v_alert","onMounted","getGeneByHGNCIdOrSymbol","catch","geneDetailsConfig","filter","fieldConfig","formatValue","parseFloat","toFixed","k","v","JSON","stringify"],"sourceRoot":""}