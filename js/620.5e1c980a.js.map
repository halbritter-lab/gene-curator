{"version":3,"file":"js/620.5e1c980a.js","mappings":"uRASO,MAAMA,EAAeC,UAC1B,MAAMC,QAAsBC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,cACnD,IAAIC,EAAY,CAAC,EAWjB,OATAJ,EAAcK,SAASC,IACrB,IAAIA,EAAYC,SAId,MAAM,IAAIC,MAAM,+BAFhBJ,EAAUE,EAAYG,IAAM,CAAEA,GAAIH,EAAYG,MAAOH,EAAYI,OAGnE,IAGKN,CAAS,EAUZO,EAAuBA,CAACC,EAAcC,KAC1C,MAAMC,EAAS,GAEf,IAAK,MAAOC,EAAKC,KAAUC,OAAOC,QAAQL,GAAS,CACjD,MAAMM,EAAQP,EAAaG,GAGvBC,EAAMI,WAAaD,GACrBL,EAAOO,KAAM,cAAaL,EAAMM,uBAIb,WAAjBN,EAAMO,cACUC,IAAdR,EAAMS,KAAqBN,EAAQH,EAAMS,KAC3CX,EAAOO,KAAM,kBAAiBL,EAAMM,kCAAkCN,EAAMS,aAE5DD,IAAdR,EAAMU,KAAqBP,EAAQH,EAAMU,KAC3CZ,EAAOO,KAAM,kBAAiBL,EAAMM,4BAA4BN,EAAMU,QAG5E,CAEA,OAAOZ,CAAM,EAYFa,EAAiB5B,MAAOa,EAAcgB,EAAQf,KACzD,MAAMC,EAASH,EAAqBC,EAAcC,GAClD,GAAIC,EAAOe,OAAS,EAClB,MAAM,IAAIrB,MAAO,sBAAqBM,EAAOgB,KAAK,QAGpD,MAAMC,QAAeC,EAAAA,EAAAA,KAAO9B,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,aAAc,IACpDS,EACHqB,MAAO,CAACL,GACRM,UAAWC,EAAAA,GAAUC,SAAS,IAAIC,MAClCC,UAAWH,EAAAA,GAAUC,SAAS,IAAIC,QAGpC,OAAON,EAAOtB,EAAE,EA8BL8B,EAAiBxC,MAAOyC,EAAOC,EAAab,EAAQf,KAC/D,MAAMC,EAASH,EAAqB8B,EAAa5B,GACjD,GAAIC,EAAOe,OAAS,EAClB,MAAM,IAAIrB,MAAO,sBAAqBM,EAAOgB,KAAK,QAGpD,MAAMY,GAAcC,EAAAA,EAAAA,IAAIxC,EAAAA,GAAI,YAAaqC,GACnCI,QAAgBC,EAAAA,EAAAA,IAAOH,GAE7B,IAAKE,EAAQrC,SACX,MAAM,IAAIC,MAAM,+BAGlB,MAAMsC,EAAeF,EAAQlC,OACvBqC,EAAeC,EAAiBF,EAAab,OAAS,GAAIL,SAE1DqB,EAAAA,EAAAA,IAAUP,EAAa,IACxBD,EACHR,MAAOc,EACPT,UAAWH,EAAAA,GAAUC,SAAS,IAAIC,OAClC,EAUSa,EAAiBnD,UAC5B,MAAM2C,GAAcC,EAAAA,EAAAA,IAAIxC,EAAAA,GAAI,YAAaqC,SACnCW,EAAAA,EAAAA,IAAUT,EAAY,EAyCjBU,EAA+BrD,UAC1C,MAAMsD,GAAenD,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,aAC9BmD,GAAcC,EAAAA,EAAAA,IAAMF,GAAcG,EAAAA,EAAAA,IAAM,kBAAmB,KAAMC,IACjEC,GAAYH,EAAAA,EAAAA,IAAMF,GAAcG,EAAAA,EAAAA,IAAM,UAAW,KAAMC,IAE7D,IAAIE,EAAoB,GAExB,MAAMC,EAA0BtD,IAC1BA,EAAYC,UACdoD,EAAkBtC,KAAK,CAAEZ,GAAIH,EAAYG,MAAOH,EAAYI,QAC9D,EAGImD,QAAuB5D,EAAAA,EAAAA,IAAQqD,GAGrC,GAFAO,EAAexD,QAAQuD,GAEU,IAA7BD,EAAkB9B,OAAc,CAClC,MAAMiC,QAAqB7D,EAAAA,EAAAA,IAAQyD,GACnCI,EAAazD,QAAQuD,EACvB,CAEA,OAAOD,CAAiB,EAUpBX,EAAmBA,CAACe,EAAYnC,KACpC,MAAMoC,EAAgBD,EAAWE,QAAOxD,GAAMA,IAAOmB,IAErD,OADAoC,EAAc3C,KAAKO,GACZoC,CAAa,C,uLC9MtB,MAAME,EAA0BA,CAACC,EAAiBtD,KAChD,MAAMC,EAAS,GACf,IAAK,MAAOC,EAAKC,KAAUC,OAAOC,QAAQL,GAAS,CACjD,MAAMM,EAAQgD,EAAgBpD,IAG1BC,EAAMI,eAAuBI,IAAVL,GAAiC,KAAVA,GAC5CL,EAAOO,KAAM,cAAaL,EAAMM,uBAIb,WAAjBN,EAAMO,cACUC,IAAdR,EAAMS,KAAqBN,EAAQH,EAAMS,KAC3CX,EAAOO,KAAM,kBAAiBL,EAAMM,kCAAkCN,EAAMS,aAE5DD,IAAdR,EAAMU,KAAqBP,EAAQH,EAAMU,KAC3CZ,EAAOO,KAAM,kBAAiBL,EAAMM,4BAA4BN,EAAMU,QAG5E,CAEA,OAAOZ,CAAM,EAQFsD,EAAkBrE,UAC7B,MAAMC,QAAsBC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,iBACnD,IAAIkE,EAAe,CAAC,EAWpB,OATArE,EAAcK,SAASC,IACrB,IAAIA,EAAYC,SAId,MAAM,IAAIC,MAAM,kCAFhB6D,EAAa/D,EAAYG,IAAM,CAAEA,GAAIH,EAAYG,MAAOH,EAAYI,OAGtE,IAGK2D,CAAY,EAWRC,EAAoBvE,MAAOoE,EAAiBvC,EAAQf,KAC/D,MAAM0D,EAAmBL,EAAwBC,EAAiBtD,GAClE,GAAI0D,EAAiB1C,OAAS,EAC5B,MAAM,IAAIrB,MAAO,sBAAqB+D,EAAiBzC,KAAK,QAG9D,MAAMC,QAAeC,EAAAA,EAAAA,KAAO9B,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,gBAAiB,IACvDgE,EACHlC,MAAO,CAACL,GACRM,UAAWC,EAAAA,GAAUC,SAAS,IAAIC,MAClCC,UAAWH,EAAAA,GAAUC,SAAS,IAAIC,QAGpC,OAAON,EAAOtB,EAAE,EA2BL+D,EAAiCzE,UAC5C,MAAM0E,GAAkBvE,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,gBACjCmD,GAAcC,EAAAA,EAAAA,IAAMkB,GAAiBjB,EAAAA,EAAAA,IAAM,kBAAmB,KAAMC,IACpEC,GAAYH,EAAAA,EAAAA,IAAMkB,GAAiBjB,EAAAA,EAAAA,IAAM,UAAW,KAAMC,IAE1DI,QAAuB5D,EAAAA,EAAAA,IAAQqD,GAC/BQ,QAAqB7D,EAAAA,EAAAA,IAAQyD,GAEnC,IAAIS,EAAkB,KAetB,OAdAN,EAAexD,SAASsC,IAClBA,EAAIpC,WACN4D,EAAkB,CAAE1D,GAAIkC,EAAIlC,MAAOkC,EAAIjC,QACzC,IAGGyD,GACHL,EAAazD,SAASsC,IAChBA,EAAIpC,WACN4D,EAAkB,CAAE1D,GAAIkC,EAAIlC,MAAOkC,EAAIjC,QACzC,IAIGyD,CAAe,EAYXO,EAAoB3E,MAAOyC,EAAOC,EAAab,EAAQf,KAClE,MAAM0D,EAAmBL,EAAwBzB,EAAa5B,GAC9D,GAAI0D,EAAiB1C,OAAS,EAC5B,MAAM,IAAIrB,MAAO,sBAAqB+D,EAAiBzC,KAAK,QAG9D,MAAM6C,GAAiBhC,EAAAA,EAAAA,IAAIxC,EAAAA,GAAI,eAAgBqC,GACzCI,QAAgBC,EAAAA,EAAAA,IAAO8B,GAE7B,IAAK/B,EAAQrC,SACX,MAAM,IAAIC,MAAM,kCAGlB,MAAMsC,EAAeF,EAAQlC,OACvBqC,EAAeC,EAAiBF,EAAab,OAAS,GAAIL,SAE1DqB,EAAAA,EAAAA,IAAU0B,EAAgB,IAC3BlC,EACHR,MAAOc,EACPT,UAAWH,EAAAA,GAAUC,SAAS,IAAIC,OAClC,EAUSuC,EAAoB7E,UAC/B,MAAM4E,GAAiBhC,EAAAA,EAAAA,IAAIxC,EAAAA,GAAI,eAAgBqC,SACzCW,EAAAA,EAAAA,IAAUwB,EAAe,EAU3B3B,EAAmBA,CAACe,EAAYnC,KACpC,MAAMoC,EAAgBD,EAAWE,QAAOxD,GAAMA,IAAOmB,IAErD,OADAoC,EAAc3C,KAAKO,GACZoC,CAAa,C,wFCnLXa,MAAM,6C,8eAFfC,EAAAA,EAAAA,IAsDWC,EAAA,C,WAtDQC,EAAAC,O,qCAAAD,EAAAC,OAAMC,GAAEC,WAAA,GAAW,YAAU,U,mBAC9C,IAoDS,EApDTL,EAAAA,EAAAA,IAoDSM,EAAA,M,kBAnDP,IAYM,EAZNC,EAAAA,EAAAA,GAYM,MAZNC,EAYM,EAXJR,EAAAA,EAAAA,IAOeS,EAAA,M,kBANb,IAAW,mBAARP,EAAAQ,OAAQ,OAAGC,EAAAA,EAAAA,IAAGT,EAAAU,WAAWC,iBAAkB,YAAQF,EAAAA,EAAAA,IAAGT,EAAAU,WAAWE,SAAU,IAC9E,IAAAd,EAAAA,EAAAA,IAIEe,EAAA,CAHC,UAASb,EAAAU,WAAWE,QACpB,cAAaZ,EAAAU,WAAWC,gBACxB,gBAAe,CAAC,UAAW,QAAS,gB,4CAGzCb,EAAAA,EAAAA,IAEQgB,EAAA,CAFDC,KAAA,GAAMC,QAAOhB,EAAAiB,O,mBAClB,IAA0B,EAA1BnB,EAAAA,EAAAA,IAA0BoB,EAAA,M,kBAAlB,IAAS,UAAT,gB,gCAGZpB,EAAAA,EAAAA,IAiCcqB,EAAA,M,kBAhCZ,IAGS,EAHTrB,EAAAA,EAAAA,IAGSsB,EAAA,C,WAHQpB,EAAAqB,I,qCAAArB,EAAAqB,IAAGnB,GAAEoB,KAAA,I,mBACpB,IAAqD,CAAxCtB,EAAAuB,qBAAkB,WAA/BC,EAAAA,EAAAA,IAAqDC,EAAA,CAAA1F,IAAA,I,kBAApB,IAAY,UAAZ,mB,uBACpBiE,EAAA0B,kBAAe,WAA5BF,EAAAA,EAAAA,IAA8CC,EAAA,CAAA1F,IAAA,I,kBAAhB,IAAQ,UAAR,e,kDAG/B+D,EAAAA,EAAAA,IA0BU6B,EAAA,C,WA1BS3B,EAAAqB,I,qCAAArB,EAAAqB,IAAGnB,GAAE0B,MAAA,wB,mBACvB,IAgBgB,EAhBhB9B,EAAAA,EAAAA,IAgBgB+B,EAAA,M,kBAdd,IAME,CALO7B,EAAA8B,qBAAkB,WAD3BN,EAAAA,EAAAA,IAMEO,EAAA,C,MAJCtG,GAAIuE,EAAAU,WAAWE,QAChBoB,gBAAgB,eACfC,WAAW,EACXC,iBAAkBlC,EAAAmC,sB,oDAIrBrC,EAAAA,EAAAA,IAIEsC,EAAA,CAHCC,eAAgBrC,EAAAU,WAAWC,gBAC3B2B,OAAQtC,EAAAU,WAAWE,QACnB2B,sBAAsBvC,EAAAwC,2B,qEAINxC,EAAA0B,kBAAe,WAApCF,EAAAA,EAAAA,IAMgBK,EAAA,CAAA9F,IAAA,I,kBAJd,IAGE,EAHF+D,EAAAA,EAAAA,IAGE2C,EAAA,CAFCJ,eAAgBrC,EAAAU,WAAWC,gBAC3B2B,OAAQtC,EAAAU,WAAWE,S,kGAK5Bd,EAAAA,EAAAA,IAGiB4C,EAAA,M,kBAFf,IAAqB,EAArB5C,EAAAA,EAAAA,IAAqB6C,IACrB7C,EAAAA,EAAAA,IAA+DgB,EAAA,CAAxD8B,MAAM,gBAAgBC,KAAA,GAAM7B,QAAOhB,EAAAiB,O,mBAAO,IAAM,UAAN,a,iEAKvDnB,EAAAA,EAAAA,IAKEgD,EAAA,C,WAJS9C,EAAA+C,gB,qCAAA/C,EAAA+C,gBAAe7C,GACvBM,MAAOR,EAAAgD,cACPC,QAASjD,EAAAkD,gBACTN,MAAO5C,EAAAmD,e,ibC5DVrD,EAAAA,EAAAA,IAyESM,EAAA,CAzEDP,MAAM,eAAa,C,kBACzB,IAAwC,EAAxCC,EAAAA,EAAAA,IAAwCS,EAAA,M,kBAA1B,IAAW,UAAX,kB,OACdT,EAAAA,EAAAA,IAsEcqB,EAAA,M,kBArEZ,IAoEc,EApEdrB,EAAAA,EAAAA,IAoEcsD,EAAA,M,kBAlEF,IAA2C,gBAArDC,EAAAA,EAAAA,IA4DWC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IA5D4BC,EAAAC,eAAa,CAAlCC,EAAOC,M,6BAAmCA,GAAS,CACtDH,EAAAI,sBAAsBF,KAAK,WAAxClC,EAAAA,EAAAA,IA0DQqC,EAAA,CAAA9H,IAAA,I,kBAzDN,IAEQ,EAFR+D,EAAAA,EAAAA,IAEQgE,EAAA,CAFDC,KAAK,MAAI,C,kBACd,IAAwB,EAAxB1D,EAAAA,EAAAA,GAAwB,WAAAI,EAAAA,EAAAA,IAAjBkD,GAAS,M,0BAGlBN,EAAAA,EAAAA,IAoDQC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAnDmBG,GAAK,CAAtB1H,EAAOgI,M,WADjBxC,EAAAA,EAAAA,IAoDQsC,EAAA,CAlDL/H,IAAKiI,EACLD,KAAI,GAAOL,EAAM7G,Q,mBAElB,IAeW,CAfsB,YAAjBb,EAAMO,QAAwBP,EAAMiI,WAAWC,eAAY,WAA3Eb,EAAAA,EAAAA,IAeWC,EAAAA,GAAA,CAAAvH,IAAA,KAdT+D,EAAAA,EAAAA,IAOYqE,EAAA,C,WANDC,EAAAjF,gBAAgBnD,EAAMD,K,yBAAtBqI,EAAAjF,gBAAgBnD,EAAMD,KAAGmE,EACjC5D,MAAON,EAAMM,MACb,eAAa,EACb,cAAY,EACZsG,MAAoC,WAA7B5G,EAAM4F,MAAMsC,aAA4BlI,EAAM4F,MAAMgB,MAAQ,GACnE/C,OAAKwE,EAAAA,EAAAA,IAAA,oBAAwBD,EAAAjF,gBAAgBnD,EAAMD,MAAqC,WAA7BC,EAAM4F,MAAMsC,gB,sEAE1EpE,EAAAA,EAAAA,IAKYwE,EAAA,CAJVC,UAAU,SACVC,SAAS,O,mBAET,IAAuB,mBAApBxI,EAAMyI,aAAW,M,iBAGHzI,EAAM4F,OAAsC,eAA7B5F,EAAM4F,MAAMsC,cAAiClI,EAAMiI,WAAWC,eAAY,WAA9Gb,EAAAA,EAAAA,IAYWC,EAAAA,GAAA,CAAAvH,IAAA,KAXT+D,EAAAA,EAAAA,IAIgB4E,EAAA,C,WAHLN,EAAAjF,gBAAgBnD,EAAMD,K,yBAAtBqI,EAAAjF,gBAAgBnD,EAAMD,KAAGmE,EACjC5D,MAAON,EAAMM,MACbuD,OAAKwE,EAAAA,EAAAA,IAA+B,eAA7BrI,EAAM4F,MAAMsC,aAAgC,oBAAsB,K,8DAE5EpE,EAAAA,EAAAA,IAKYwE,EAAA,CAJVC,UAAU,SACVC,SAAS,O,mBAET,IAAuB,mBAApBxI,EAAMyI,aAAW,M,iBAGHzI,EAAM4F,OAAsC,WAA7B5F,EAAM4F,MAAMsC,cAA6BlI,EAAMiI,WAAWC,eAAY,WAA1Gb,EAAAA,EAAAA,IAgBWC,EAAAA,GAAA,CAAAvH,IAAA,KAfT+D,EAAAA,EAAAA,IAQY6E,EAAA,C,WAPDP,EAAAjF,gBAAgBnD,EAAMD,K,yBAAtBqI,EAAAjF,gBAAgBnD,EAAMD,KAAGmE,EACjC0E,MAAO5I,EAAM6I,QACbvI,MAAON,EAAMM,MACbuD,OAAKwE,EAAAA,EAAAA,IAAA,C,kBAA2CD,EAAAU,mBAA8B,aAAT9I,EAAMD,I,yBAAkEqI,EAAAW,yBAAoC,aAAT/I,EAAMD,O,sEAKjL+D,EAAAA,EAAAA,IAKYwE,EAAA,CAJVC,UAAU,SACVC,SAAS,O,mBAET,IAAuB,mBAApBxI,EAAMyI,aAAW,M,+GAO9B3E,EAAAA,EAAAA,IAIQ+D,EAAA,M,kBAHN,IAEQ,EAFR/D,EAAAA,EAAAA,IAEQgE,EAAA,CAFDC,KAAK,KAAKlE,MAAM,c,mBACrB,IAAgE,EAAhEC,EAAAA,EAAAA,IAAgEgB,EAAA,CAAzD8B,MAAM,UAAW5B,QAAOwC,EAAAwB,mB,mBAAmB,IAAM,UAAN,a,kEAQ5DlF,EAAAA,EAAAA,IAKEgD,EAAA,C,WAJSsB,EAAArB,gB,qCAAAqB,EAAArB,gBAAe7C,GACvBM,MAAO4D,EAAApB,cACPC,QAASmB,EAAAlB,gBACTN,MAAOwB,EAAAjB,e,qFAaZ,GACE8B,KAAM,kBACNC,MAAO,CACL7C,eAAgB8C,OAChB7C,OAAQ6C,QAEVC,MAAO,CAAC,wBACRC,WAAY,CACZ,EACA3J,IAAAA,GACE,MAAO,CACLyD,gBAAiBmG,KAAKC,4BACtBC,sBAAuB,KACvBV,mBAAmB,EACnBC,yBAAyB,EACzBhC,iBAAiB,EACjBG,gBAAiB,GACjBF,cAAe,GACfG,cAAe,UAEnB,EACAsC,SAAU,CACRhC,aAAAA,GACE,MAAMiC,EAASJ,KAAKK,kBACdC,EAAS,CAAC,EAehB,OAZAF,EAAOrK,SAAQW,IACR4J,EAAO5J,EAAM0H,MAAMuB,QACtBW,EAAO5J,EAAM0H,MAAMuB,MAAQ,IAE7BW,EAAO5J,EAAM0H,MAAMuB,MAAM5I,KAAKL,EAAM,IAItCC,OAAO4J,OAAOD,GAAQvK,SAAQqI,IAC5BA,EAAMoC,MAAK,CAACC,EAAGC,IAAMD,EAAErC,MAAMuC,MAAQD,EAAEtC,MAAMuC,OAAM,IAG9CL,CACT,EACAD,iBAAAA,GACE,IAAID,EAASzJ,OAAOC,QAAQgK,EAAAA,IACzBC,KAAI,EAAEpK,EAAKF,MAAY,IAAMA,EAAQE,UACxC,OAAO2J,CACT,GAEFU,MAAO,CACLjH,gBAAiB,CACfkH,MAAM,EACNC,OAAAA,GACEhB,KAAKiB,oBACP,GAEF,2BAA4B,oBAE9BC,QAAS,CACPC,YAAAA,CAAajG,EAAOyC,EAASL,EAAQ,WACnC0C,KAAKtC,cAAgBxC,EACrB8E,KAAKpC,gBAAkBD,EACvBqC,KAAKnC,cAAgBP,EACrB0C,KAAKvC,iBAAkB,CACzB,EACAwD,kBAAAA,GACE,MAAMG,EAAeC,EAAAA,GAAeC,OAAOC,YAAYC,cAAc,GACrE,IAAIC,EAAYL,EAAaM,WAAWC,QAAO,CAACC,EAAOC,IACrD7B,KAAKnG,gBAAgBgI,GAAaD,EAAQ,EAAIA,GAAO,GAEnDH,GAAaL,EAAaU,UAExB9B,KAAKnG,gBAAgBkI,WAAaX,EAAaW,UAAa/B,KAAKnG,gBAAgBkI,WACnF/B,KAAKnG,gBAAgBkI,SAAWX,EAAaW,SAC7C/B,KAAKR,mBAAoB,EACzBQ,KAAKP,yBAA0B,GAI7BO,KAAKR,oBACPQ,KAAKR,mBAAoB,EAG/B,EACAwC,gBAAAA,CAAiBC,GACf,MAAMb,EAAeC,EAAAA,GAAeC,OAAOC,YAAYC,cAAc,GACrE,IAAIC,EAAYL,EAAaM,WAAWC,QAAO,CAACC,EAAOC,IACrD7B,KAAKnG,gBAAgBgI,GAAaD,EAAQ,EAAIA,GAAO,GAEvD,MAAMM,EAAmBT,GAAaL,EAAaU,UAAYV,EAAaW,SAAW,GAEvF/B,KAAKP,wBAA0BwC,IAAaC,EAExClC,KAAKP,wBACPO,KAAKmC,mBAAmB,iCAExBnC,KAAKoC,uBAET,EACAD,kBAAAA,CAAmBE,GACZrC,KAAKnG,gBAAgByI,QAAQC,SAASF,KACzCrC,KAAKnG,gBAAgByI,UAAYtC,KAAKnG,gBAAgByI,QAAU,IAAM,IAAMD,EAEhF,EACAD,qBAAAA,GACE,MAAMC,EAAkB,gCACpBrC,KAAKnG,gBAAgByI,QAAQC,SAASF,KACxCrC,KAAKnG,gBAAgByI,QAAUtC,KAAKnG,gBAAgByI,QAAQE,QAAQH,EAAiB,IAAII,OAE7F,EACAnE,qBAAAA,CAAsBF,GAEpB,OAAOA,EAAMsE,MAAKhM,GAASA,EAAMiI,WAAWC,cAC9C,EACAqB,yBAAAA,GACE,MAAM7J,EAAO,CAAC,EAkBd,OAjBAO,OAAOgM,KAAK/B,EAAAA,IAA0B7K,SAAQU,IAEC,YAAzCmK,EAAAA,GAAyBnK,GAAKQ,OAC9Bb,EAAKK,IAAO,EAGZL,EAAKK,GAAO,GAIJ,oBAARA,GAA6BuJ,KAAKjD,iBACpC3G,EAAKK,GAAOuJ,KAAKjD,gBAEP,YAARtG,GAAqBuJ,KAAKhD,SAC5B5G,EAAKK,GAAOuJ,KAAKhD,OACnB,IAEK5G,CACT,EACAwD,uBAAAA,CAAwBC,GACtB,MAAMrD,EAAS,GACf,IAAK,MAAOC,EAAKC,KAAUC,OAAOC,QAAQgK,EAAAA,KACpClK,EAAMI,eAAsCI,IAAzB2C,EAAgBpD,IAA+C,KAAzBoD,EAAgBpD,IAC3ED,EAAOO,KAAM,cAAaL,EAAMM,uBAGpC,OAAOR,CACT,EACA,uBAAMkJ,GACJ,MAAMkD,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,SAASC,IAE/D,IAEE,MAAMhJ,EAAmB+F,KAAKpG,wBAAwBoG,KAAKnG,gBAAiB+G,EAAAA,IAC5E,GAAI3G,EAAiB1C,OAAS,EAC5B,MAAM,IAAIrB,MAAO,sBAAqB+D,EAAiBzC,KAAK,QAI9D,MAAM0L,GAAc,IAAInL,MAAOoL,cAC/B,GAAKnD,KAAKE,sBAWRF,KAAKnG,gBAAgB7B,UAAYkL,QAC3B9I,EAAAA,EAAAA,IAAkB4F,KAAKE,sBAAuBF,KAAKnG,gBAAiB+I,EAAehC,EAAAA,IACzFZ,KAAKmB,aAAa,UAAW,sBAAwBnB,KAAKE,sBAAuB,eAblD,CAE/BF,KAAKnG,gBAAgBjC,UAAYsL,EAEjClD,KAAKnG,gBAAgBuJ,0BAA4BC,EAAAA,GACjDrD,KAAKnG,gBAAgByJ,uBAAyBC,EAAAA,GAE9C,MAAMC,QAAcxJ,EAAAA,EAAAA,IAAkBgG,KAAKnG,gBAAiB+I,EAAehC,EAAAA,IAC3EZ,KAAKmB,aAAa,UAAW,mCAAqCqC,EAAO,UAC3E,CAQAxD,KAAKyD,MAAM,uBAAwBzD,KAAKnG,gBAC1C,CAAE,MAAO6J,GACP1D,KAAKmB,aAAa,QAASuC,EAAM/F,SAAW,gDAAiD,QAC/F,CACF,EACAgG,kBAAAA,CAAmB9M,GACjB,OAAOA,EAAQ,MAAQ,IACzB,GAEF,aAAM+M,GACJ,IACE,MAAMrC,QAAoBrH,EAAAA,EAAAA,IAA+B8F,KAAKjD,gBAAkBiD,KAAKhD,QACjFuE,IACFvB,KAAKE,sBAAwBqB,EAAYpL,GACzCQ,OAAOkN,OAAO7D,KAAKnG,gBAAiB0H,GAExC,CAAE,MAAOmC,GACP1D,KAAKmB,aAAa,QAAS,+BAAiCuC,EAAM/F,QAAS,QAC7E,CACF,G,QCtRF,MAAMmG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,geCPEtJ,EAAAA,EAAAA,IAgHSM,EAAA,CAhHDP,MAAM,eAAa,C,kBACzB,IAKe,EALfC,EAAAA,EAAAA,IAKeS,EAAA,M,kBALD,IAEZ,UAFY,eAEZT,EAAAA,EAAAA,IAEQgB,EAAA,CAFDC,KAAA,GAAKlB,MAAM,mBAAoBmB,QAAOwC,EAAA6F,mB,mBAC3C,IAAyB,EAAzBvJ,EAAAA,EAAAA,IAAyBoB,EAAA,M,kBAAjB,IAAQ,UAAR,e,uCAKZpB,EAAAA,EAAAA,IAiGqBwJ,EAAA,CAjGDC,SAAA,IAAQ,C,kBACP,IAAkD,gBAArElG,EAAAA,EAAAA,IA+FoBC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IA/F+Ba,EAAAzF,mBAAiB,CAAzC/C,EAAcoI,M,WAAzCxC,EAAAA,EAAAA,IA+FoBgI,EAAA,CA/FmDzN,IAAG,YAAciI,IAAUxD,MAAK,mBAAsBwD,EAAQ,K,mBACjI,IA6FyB,EA7FzBlE,EAAAA,EAAAA,IA6FyB2J,EAAA,M,kBA3Fb,IAA2C,gBAArDpG,EAAAA,EAAAA,IA0FWC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IA1F4BC,EAAAC,eAAa,CAAlCC,EAAOC,M,6BAAmCA,GAAS,CACtDH,EAAAI,sBAAsBF,KAAK,WAAxClC,EAAAA,EAAAA,IAwFQqC,EAAA,CAAA9H,IAAA,I,kBAvFN,IAEQ,EAFR+D,EAAAA,EAAAA,IAEQgE,EAAA,CAFDC,KAAK,MAAI,C,kBACd,IAAwB,EAAxB1D,EAAAA,EAAAA,GAAwB,WAAAI,EAAAA,EAAAA,IAAjBkD,GAAS,M,0BAElBN,EAAAA,EAAAA,IAmFQC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAlFwBG,GAAK,CAA3B1H,EAAO0N,M,WADjBlI,EAAAA,EAAAA,IAmFQsC,EAAA,CAjFL/H,IAAG,SAAWiI,KAAS0F,IACvB3F,KAAI,GAAOL,EAAM7G,Q,mBAIlB,IAaW,CAbsB,SAAjBb,EAAMO,QAAqBP,EAAM4F,OAAsC,eAA7B5F,EAAM4F,MAAMsC,eAAY,WAAlFb,EAAAA,EAAAA,IAaWC,EAAAA,GAAA,CAAAvH,IAAA,KAZT+D,EAAAA,EAAAA,IAKgB4E,EAAA,C,WAJL9I,EAAaI,EAAMD,K,yBAAnBH,EAAaI,EAAMD,KAAGmE,EAC9B5D,MAAON,EAAMM,MACdqN,SAAA,GACAC,MAAA,I,sDAEF9J,EAAAA,EAAAA,IAKYwE,EAAA,CAJVC,UAAU,SACVC,SAAS,O,mBAET,IAAuB,mBAApBxI,EAAMyI,aAAW,M,iBAGc,YAAjBzI,EAAMO,SAAM,WAAjC8G,EAAAA,EAAAA,IAWWC,EAAAA,GAAA,CAAAvH,IAAA,KAVT+D,EAAAA,EAAAA,IAGc+J,EAAA,C,WAFHjO,EAAaI,EAAMD,K,yBAAnBH,EAAaI,EAAMD,KAAGmE,EAC9B5D,MAAON,EAAMM,O,sDAEhBwD,EAAAA,EAAAA,IAKYwE,EAAA,CAJVC,UAAU,SACVC,SAAS,O,mBAET,IAAuB,mBAApBxI,EAAMyI,aAAW,M,iBAGc,WAAjBzI,EAAMO,SAAM,WAAjC8G,EAAAA,EAAAA,IAiBWC,EAAAA,GAAA,CAAAvH,IAAA,KAhBT+D,EAAAA,EAAAA,IASgB4E,EAAA,C,WARL9I,EAAaI,EAAMD,K,yBAAnBH,EAAaI,EAAMD,KAAGmE,EAC9B5D,MAAON,EAAMM,MACbG,IAAKT,EAAMS,IACXC,IAAKV,EAAMU,IACXoN,KAAM9N,EAAM8N,MAAQ,EACrBC,KAAK,SACLJ,SAAA,GACAC,MAAA,I,yEAEF9J,EAAAA,EAAAA,IAKYwE,EAAA,CAJVC,UAAU,SACVC,SAAS,O,mBAET,IAAuB,mBAApBxI,EAAMyI,aAAW,M,iBAGc,UAAjBzI,EAAMO,QAAsBP,EAAM4F,OAAsC,WAA7B5F,EAAM4F,MAAMsC,eAAY,WAAxFb,EAAAA,EAAAA,IAeWC,EAAAA,GAAA,CAAAvH,IAAA,KAdT+D,EAAAA,EAAAA,IAOY6E,EAAA,C,WAND/I,EAAaI,EAAMD,K,yBAAnBH,EAAaI,EAAMD,KAAGmE,EAC9B0E,MAAO5I,EAAM6I,QACbvI,MAAON,EAAMM,MACdiN,SAAA,GACAI,SAAA,GACAC,MAAA,I,8DAEF9J,EAAAA,EAAAA,IAKYwE,EAAA,CAJVC,UAAU,SACVC,SAAS,O,mBAET,IAAuB,mBAApBxI,EAAMyI,aAAW,M,iBAGc,SAAjBzI,EAAMO,QAAqBP,EAAM4F,OAAsC,WAA7B5F,EAAM4F,MAAMsC,eAAY,WAAvFb,EAAAA,EAAAA,IAcWC,EAAAA,GAAA,CAAAvH,IAAA,KAbT+D,EAAAA,EAAAA,IAMY6E,EAAA,C,WALD/I,EAAaI,EAAMD,K,yBAAnBH,EAAaI,EAAMD,KAAGmE,EAC9B0E,MAAO5I,EAAM6I,QACbvI,MAAON,EAAMM,MACdqN,SAAA,GACAC,MAAA,I,8DAEF9J,EAAAA,EAAAA,IAKYwE,EAAA,CAJVC,UAAU,SACVC,SAAS,O,mBAET,IAAuB,mBAApBxI,EAAMyI,aAAW,M,uKAWtC3E,EAAAA,EAAAA,IAGiB4C,EAAA,M,kBAFf,IAAqB,EAArB5C,EAAAA,EAAAA,IAAqB6C,IACrB7C,EAAAA,EAAAA,IAA6DgB,EAAA,CAAtD8B,MAAM,UAAW5B,QAAOwC,EAAAwG,c,mBAAc,IAAQ,UAAR,e,uCAKjDlK,EAAAA,EAAAA,IAKEgD,EAAA,C,WAJSsB,EAAArB,gB,qCAAAqB,EAAArB,gBAAe7C,GACvBM,MAAO4D,EAAApB,cACPC,QAASmB,EAAAlB,gBACTN,MAAOwB,EAAAjB,e,8EAcZ,GACE8B,KAAM,eACNC,MAAO,CACL7C,eAAgB8C,OAChB7C,OAAQ6C,QAEVzJ,IAAAA,GACE,MAAO,CACLiD,kBAAmB,CAAC2G,KAAK2E,0BACzBC,mBAAoB,KACpBnH,iBAAiB,EACjBG,gBAAiB,GACjBF,cAAe,GACfG,cAAe,UAEnB,EACA,aAAM+F,GACJ,GAAI5D,KAAKhD,QAAUgD,KAAKjD,eACtB,IACE,MAAMjH,QAAkBgD,EAAAA,EAAAA,IAA6BkH,KAAKhD,QAAUgD,KAAKjD,gBACrEjH,EAAUyB,OAAS,EACrByI,KAAK3G,kBAAoBvD,EAAU+K,KAAIgE,GAAYlO,OAAOkN,OAAO7D,KAAK2E,yBAA0BE,KAEhG7E,KAAK3G,kBAAoB,CAAC2G,KAAK2E,yBAEnC,CAAE,MAAOjB,GACP1D,KAAKmB,aAAa,QAAU,6BAA4BuC,EAAM/F,UAAW,QAC3E,MAEAqC,KAAK3G,kBAAoB,CAAC2G,KAAK2E,yBAEnC,EACAxE,SAAU,CACRhC,aAAAA,GACE,MAAMiC,EAASzJ,OAAOC,QAAQkO,EAAAA,GAC3BjE,KAAI,EAAEpK,EAAKF,MAAY,IAAMA,EAAQE,UAElC6J,EAAS,CAAC,EAYhB,OAXAF,EAAOrK,SAAQW,IACR4J,EAAO5J,EAAM0H,MAAMuB,QACtBW,EAAO5J,EAAM0H,MAAMuB,MAAQ,IAE7BW,EAAO5J,EAAM0H,MAAMuB,MAAM5I,KAAKL,EAAM,IAGtCC,OAAO4J,OAAOD,GAAQvK,SAAQqI,IAC5BA,EAAMoC,MAAK,CAACC,EAAGC,IAAMD,EAAErC,MAAMuC,MAAQD,EAAEtC,MAAMuC,OAAM,IAG9CL,CACT,GAEFY,QAAS,CACPC,YAAAA,CAAajG,EAAOyC,EAASL,EAAQ,WACnC0C,KAAKtC,cAAgBxC,EACrB8E,KAAKpC,gBAAkBD,EACvBqC,KAAKnC,cAAgBP,EACrB0C,KAAKvC,iBAAkB,CACzB,EACAa,qBAAAA,CAAsBF,GAEpB,OAAOA,EAAMsE,MAAKhM,GAASA,EAAMiI,WAAWC,cAC9C,EACAmF,iBAAAA,GACE/D,KAAK3G,kBAAkBtC,KAAKiJ,KAAK2E,yBACnC,EACAA,sBAAAA,GACE,MAAMvO,EAAO,CAAC,EAuBd,OAtBAO,OAAOgM,KAAKmC,EAAAA,GAAuB/O,SAAQU,IACzC,MAAMC,EAAQoO,EAAAA,EAAsBrO,GACf,YAAjBC,EAAMO,OACRb,EAAKK,IAAO,EACc,WAAjBC,EAAMO,OACfb,EAAKK,GAAOC,EAAMS,KAAO,EACC,UAAjBT,EAAMO,QAAsBP,EAAM4F,OAAsC,WAA7B5F,EAAM4F,MAAMsC,aAChExI,EAAKK,GAAO,GACc,SAAjBC,EAAMO,QAAqBP,EAAM4F,OAAsC,WAA7B5F,EAAM4F,MAAMsC,aAC/DxI,EAAKK,GAAO,KAEZL,EAAKK,GAAO,GAIF,oBAARA,GAA6BuJ,KAAKjD,iBACpC3G,EAAKK,GAAOuJ,KAAKjD,gBAEP,YAARtG,GAAqBuJ,KAAKhD,SAC5B5G,EAAKK,GAAOuJ,KAAKhD,OACnB,IAEK5G,CACT,EACAC,oBAAAA,CAAqBC,GACnB,MAAME,EAAS,GACf,IAAK,MAAOC,EAAKC,KAAUC,OAAOC,QAAQkO,EAAAA,GACpCpO,EAAMI,WAAaR,EAAaG,IAClCD,EAAOO,KAAM,cAAaL,EAAMM,uBAGpC,OAAOR,CACT,EACA,kBAAMkO,GACN,MAAM9B,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,SAASC,IAE7D,IACE,IAAK,MAAM3M,KAAgB0J,KAAK3G,kBAK9B,GAHA/C,EAAa8M,0BAA4BC,EAAAA,GACzC/M,EAAagN,uBAAyBC,EAAAA,GAElCjN,EAAaH,SAET8B,EAAAA,EAAAA,IAAe3B,EAAaH,GAAIG,EAAcsM,EAAekC,EAAAA,GACnE9E,KAAKmB,aAAa,UAAY,qBAAoB7K,EAAaH,KAAM,eAChE,CAEL,MAAMqN,QAAcnM,EAAAA,EAAAA,IAAef,EAAcsM,EAAekC,EAAAA,GAChE9E,KAAKmB,aAAa,UAAY,iCAAgCqC,IAAS,WACvElN,EAAaH,GAAKqN,CACpB,CAEJ,CAAE,MAAOE,GACP1D,KAAKmB,aAAa,QAAU,0BAAyBuC,EAAM/F,UAAW,QACxE,CACF,IC5PJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,SCPOpD,MAAM,c,qEAAXwD,EAAAA,EAAAA,IASM,MATN/C,EASM,gBARJ+C,EAAAA,EAAAA,IAOSC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IANU8G,EAAAC,aAARC,K,WADX/I,EAAAA,EAAAA,IAOSgJ,EAAA,CALJzO,IAAKwO,EAAKtF,KACVjE,QAAKd,GAAEmK,EAAAI,SAASF,EAAKG,KACtBC,KAAK,S,mBAEP,IAAe,mBAAZJ,EAAKtF,MAAI,M,kCAYlB,OAAe2F,EAAAA,EAAAA,IAAgB,CAC7B3F,KAAM,gBACNC,MAAO,CACL5C,OAAQ,CACNyH,KAAM5E,OACN0F,QAAS,MAEXC,WAAY,CACVf,KAAM5E,OACN0F,QAAS,MAEXE,OAAQ,CACNhB,KAAM5E,OACN0F,QAAS,MAEXG,YAAa,CACXjB,KAAMkB,MACNJ,QAASA,IAAM,KAGnBK,KAAAA,CAAMhG,GAQJ,MAAMiG,EAAWA,CAAC1P,EAAIsO,EAAMqB,KAC1B,IAAK3P,EAAI,OAAO,KAChB,MAAM4P,EAAkB,SAATtB,EAAkB,QAAmB,SAATA,EAAkB,QAAU,GACvE,OAAIqB,IAAkB3P,EAAG6P,WAAWD,GAC1B,GAAEA,IAAS5P,KACT2P,GAAiB3P,EAAG6P,WAAWD,GAClC5P,EAAGqM,QAAQuD,EAAQ,IAErB5P,CAAE,EAML8P,EAAa,CACjBC,QAASA,KACP,MAAMC,EAAcN,EAASjG,EAAM5C,OAAQ,QAAQ,GACnD,OAAOmJ,EAAe,8CAA6CA,IAAgB,IAAI,EAEzFC,MAAOA,KACL,MAAMD,EAAcN,EAASjG,EAAM5C,OAAQ,QAAQ,GACnD,OAAOmJ,EAAe,qCAAoCA,IAAgB,IAAI,EAEhFE,KAAMA,KACJ,MAAMF,EAAcN,EAASjG,EAAM6F,OAAQ,QAAQ,GACnD,OAAOU,EAAe,8BAA6BA,IAAgB,IAAI,EAEzEG,YAAaA,IAAM1G,EAAM4F,WAAc,uGAAsG5F,EAAM4F,aAAe,MAM9JR,GAAc7E,EAAAA,EAAAA,KAAS,IACpBP,EAAM8F,YAAY7E,KAAI0F,IAC3B,MAAMnB,EAAMa,EAAWM,GAAWN,EAAWM,KAAa,KAC1D,MAAO,CACL5G,KAAM4G,EACNnB,IAAKA,EACN,IACAzL,QAAOsL,GAAQA,EAAKG,QAOnBD,EAAYC,IACZA,GAAKoB,OAAOC,KAAKrB,EAAK,SAAS,EAGrC,MAAO,CACLJ,cACAG,WAEJ,ICjGF,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,QNmEA,GACEpF,WAAY,CACV2G,eAAc,IACdC,gBAAe,EACfC,aAAY,EACZC,cAAaA,GAEfjH,MAAO,CACLkH,KAAM,CACJrC,KAAM9N,OACNG,UAAU,GAEZ2P,KAAM,CACJhC,KAAMsC,QACNjQ,UAAU,GAEZkQ,QAAS,CACPvC,KAAM5E,OACN0F,QAAS,SAGbzF,MAAO,CAAC,SACR8F,KAAAA,CAAMhG,GAAO,KAAEqH,IACb,MAAMtM,GAASuM,EAAAA,EAAAA,IAAItH,EAAM6G,MACnBrL,GAAa8L,EAAAA,EAAAA,IAAI,IAAKtH,EAAMkH,OAC5BtK,GAAqB0K,EAAAA,EAAAA,KAAI,GACzBjL,GAAqBiL,EAAAA,EAAAA,KAAI,GACzB9K,GAAkB8K,EAAAA,EAAAA,KAAI,GACtBnL,GAAMmL,EAAAA,EAAAA,IAAI,GAEVzJ,GAAkByJ,EAAAA,EAAAA,KAAI,GACtBtJ,GAAkBsJ,EAAAA,EAAAA,IAAI,IACtBxJ,GAAgBwJ,EAAAA,EAAAA,IAAI,IACpBrJ,GAAgBqJ,EAAAA,EAAAA,IAAI,WAEpB/F,EAAeA,CAACjG,EAAOyC,EAASL,EAAQ,aAC5CI,EAAc7G,MAAQqE,EACtB0C,EAAgB/G,MAAQ8G,EACxBE,EAAchH,MAAQyG,EACtBG,EAAgB5G,OAAQ,CAAI,GAG9BsQ,EAAAA,EAAAA,KAAY,KACVxM,EAAO9D,MAAQ+I,EAAM6G,KACrBrL,EAAWvE,MAAQ,IAAK+I,EAAMkH,KAAM,IAGtC,MAAM5J,EAA4BA,KACV,gBAAlB0C,EAAMoH,QAERrL,KAGAS,EAAgBvF,OAAQ,EACxBkF,EAAIlF,MAAQ,EACd,EAGI8E,EAAQA,IAAMsL,EAAK,SAEnBG,EAAwB3R,UAC5B,IACE,MAAM4R,QAAyBnN,EAAAA,EAAAA,IAA+BkB,EAAWvE,MAAMyE,SAAWF,EAAWvE,MAAMwE,iBACvGgM,GACFjL,EAAgBvF,OAAQ,EACxBkF,EAAIlF,MAAQ,IAEZuF,EAAgBvF,OAAQ,EACxBkF,EAAIlF,MAAQ,EAEhB,CAAE,MAAO6M,GACPvC,EAAa,qCAAuCuC,EAAM/F,QAAS,QACrE,GAII2J,GAAWJ,EAAAA,EAAAA,IAAI,MAEfrK,EAAwBzG,IAC5BkR,EAASzQ,MAAQT,CAAI,EAMjB8E,GAAQiF,EAAAA,EAAAA,KAAS,IACI,aAAlBP,EAAMoH,QAAyB,WAChB,gBAAlBpH,EAAMoH,QAA4B,cAClC,mBAINlG,EAAAA,EAAAA,KAAM,IAAMlB,EAAM6G,OAAMhR,UAClB8R,SACIC,GACR,IAIF,MAAMA,EAAkB/R,UACA,gBAAlBmK,EAAMoH,SACRxK,EAAmB3F,OAAQ,EAC3BoF,EAAmBpF,OAAQ,EAC3BuF,EAAgBvF,OAAQ,EACxBkF,EAAIlF,MAAQ,GACe,aAAlB+I,EAAMoH,SACfxK,EAAmB3F,OAAQ,EAC3BoF,EAAmBpF,OAAQ,QACrBuQ,IAENrL,EAAIlF,MAAQuF,EAAgBvF,MAAQ,EAAI,SAGlCuQ,GACR,EAUF,OANAtG,EAAAA,EAAAA,KAAM,IAAMlB,EAAM6G,OAAOc,IACnBA,GACFC,GACF,IAGK,CACLA,kBACA7M,SACAS,aACAO,QACAuB,4BACAV,qBACAP,qBACAG,kBACAL,MACAoF,eACA1D,kBACAG,kBACAF,gBACAG,gBACA3C,QACA2B,uBACAyK,WAEJ,GOpNF,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASG,GAAQ,CAAC,YAAY,qBAEzF,O,2RCPEvL,EAAAA,EAAAA,IAqDc4B,EAAA,M,kBApDZ,IAyCe,EAzCftD,EAAAA,EAAAA,IAyCekN,EAAA,CAxCZC,QAASC,EAAAD,QACTrI,MAAOsI,EAAAtI,MACA,iBAAgB5E,EAAAmN,a,uCAAAnN,EAAAmN,aAAYjN,GACnC,sBAAqBgN,EAAAE,WACrBC,QAASH,EAAAG,QACVxN,MAAM,cACNyN,QAAQ,Y,wBAGcJ,EAAAD,SAALM,I,gBAA+BA,EAAEpR,Q,aAC5C,EADyDqR,YAAM,EAC/DnN,EAAAA,EAAAA,GAAwB,aAAAI,EAAAA,EAAAA,IAAhB8M,EAAE/M,OAAK,GAGP+M,EAAE9I,cAAW,WAFrBjD,EAAAA,EAAAA,IAOY8C,EAAA,C,MANHkJ,OAAQA,EAEfjJ,UAAU,SACVC,SAAS,O,mBAET,IAAmB,mBAAhB+I,EAAE9I,aAAW,M,uDAKGyI,EAAArR,OAAO4R,SAAjBC,I,cAAyCA,EAAOzI,O,aAE/D,EAF2EmH,UAAI,CAEpD,SAAhBsB,EAAO3D,OAAI,WAAtB1G,EAAAA,EAAAA,IAEM,MAAA/C,GAAAG,EAAAA,EAAAA,IADD2L,EAAKsB,EAAOzI,OAAI,IAGW,SAAhByI,EAAO3D,OAAI,WAA3B1G,EAAAA,EAAAA,IAEM,MAAAsK,GAAAlN,EAAAA,EAAAA,IADDT,EAAA4N,gBAAgBxB,EAAKsB,EAAOzI,QAAI,IAGG,SAAhByI,EAAO3D,OAAI,WAAnCvI,EAAAA,EAAAA,IAEcqM,EAAA,C,MAFmCC,GAAIJ,EAAOI,GAAG1B,I,mBAC7D,IAAuB,mBAApBA,EAAKsB,EAAOzI,OAAI,M,mBAGgB,SAAhByI,EAAO3D,MAC1BgE,EAAAA,EAAAA,IAAkD1D,EAAA2D,OAArCN,EAAOO,SAAQ,C,MAAG7B,KAAMA,K,oGAM3C2B,EAAAA,EAAAA,IAA0B1D,EAAA2D,OAAA,UAG1BlO,EAAAA,EAAAA,IAIgBoO,EAAA,C,WAHLlO,EAAAmO,K,qCAAAnO,EAAAmO,KAAIjO,GACZrD,OAAQmD,EAAAoO,WACR,gBAAWC,EAAA,KAAAA,EAAA,GAAAnO,GAAEmK,EAAAtB,MAAM,cAAe/I,EAAAmO,Q,uDAYzC,GACEjJ,MAAO,CACL+H,QAAShC,MACTrG,MAAOqG,MACPpP,OAAQI,OACRmR,WAAYkB,OACZjB,QAAShB,SAEXnB,KAAAA,CAAMhG,GAAO,KAAEqH,IACb,MAAM4B,GAAO3B,EAAAA,EAAAA,IAAI,GACXW,GAAeX,EAAAA,EAAAA,IAAI,IAGnB4B,GAAa3I,EAAAA,EAAAA,KAAS,IAAM8I,KAAKC,KAAKtJ,EAAMkI,WAAaD,EAAahR,SAGtEyR,EAAmBa,IACvB,IAAKA,EAAW,MAAO,GACvB,MAAMC,EAAO,IAAIrR,KAAyB,IAApBoR,EAAUE,SAChC,OAAOD,EAAKE,oBAAoB,EAYlC,OARAxI,EAAAA,EAAAA,IAAM+H,GAAM,KACV5B,EAAK,eAAgB4B,EAAKhS,MAAM,KAGlCiK,EAAAA,EAAAA,IAAM+G,GAAc,KAClBZ,EAAK,yBAA0BY,EAAahR,MAAM,IAG7C,CACLgS,OACAhB,eACAiB,aACAR,kBAEJ,G,QCjGF,MAAMxE,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS2D,KAEpE,O,yUCLEvL,EAAAA,EAAAA,IA6Bc4B,EAAA,M,kBA5BZ,IAwBS,CAxBKpD,EAAA6O,OAAI,WAAlBrN,EAAAA,EAAAA,IAwBSpB,EAAA,C,MAxBWP,MAAM,eAAe,YAAU,O,mBACjD,IAAyF,CAArEqN,EAAAjL,YAAS,WAA7BT,EAAAA,EAAAA,IAAyFjB,EAAA,C,MAA1DV,MAAM,Y,mBAAW,IAA0B,mBAAvBG,EAAA6O,KAAKlO,iBAAe,M,wBACvEb,EAAAA,EAAAA,IAqBcqB,EAAA,M,kBApBZ,IAmBU,EAnBVrB,EAAAA,EAAAA,IAmBUgP,EAAA,CAnBDlF,MAAA,IAAK,C,kBACZ,IAiBQ,EAjBRvJ,EAAAA,EAAAA,GAiBQ,6BAhBNgD,EAAAA,EAAAA,IAeWC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAfsBvD,EAAA+O,qBAAmB,CAAlC5S,EAAOJ,M,WACvBsH,EAAAA,EAAAA,IAaK,MAAAtH,IAdqDA,GAAG,EAE3DsE,EAAAA,EAAAA,GAUK,YATHA,EAAAA,EAAAA,GAQS,gBAPPA,EAAAA,EAAAA,GAA6E,QAAvER,MAAM,cAAeW,MAAOrE,EAAMsI,c,QAAgBtI,EAAMG,OAAK,EAAAgE,IACnER,EAAAA,EAAAA,IAKYwE,EAAA,CAJVC,UAAU,SACVC,SAAS,S,mBAET,IAAuB,mBAApBrI,EAAMsI,aAAW,M,gBAI1BpE,EAAAA,EAAAA,GAAuC,MAAnC2O,UAAQ7S,EAAM8S,gB,gEAO9BzN,EAAAA,EAAAA,IAEU0N,EAAA,C,MAFMnF,KAAK,S,mBAAQ,IAE7B,UAF6B,0C,kDAWjC,GACE7E,MAAO,CACLzJ,GAAI0J,OACJnD,gBAAiB,CACf+H,KAAM5E,OACN0F,QAAS,gBAEX5I,UAAW,CACT8H,KAAMsC,QACNxB,SAAS,IAGbK,KAAAA,CAAMhG,GAAO,KAAEqH,IACb,MAAMsC,GAAOrC,EAAAA,EAAAA,IAAI,OAEjB2C,EAAAA,EAAAA,KAAUpU,UACR,GAAImK,EAAMzJ,GACR,IACE,MAAM2T,QAAoBC,EAAAA,EAAAA,IAAwBnK,EAAMzJ,IACxDoT,EAAK1S,MAAQiT,EACb7C,EAAK,mBAAoB6C,EAC3B,CAAE,MAAOpG,GACPsG,QAAQtG,MAAM,uBAAwBA,EAAM/F,QAC9C,CACF,IAGF,MAAM8L,GAAsBtJ,EAAAA,EAAAA,KAAS,IAC9BoJ,EAAK1S,MAEHF,OAAOC,QAAQqT,EAAAA,IACnBtQ,QAAO,EAAE,CAAEuQ,KAAiBA,EAAYvL,WAAWiB,EAAMlD,mBACzDmE,KAAI,EAAEpK,EAAKyT,MACV,MAAMrT,EAAQ0S,EAAK1S,MAAMJ,GACzB,MAAO,CACLO,MAAOkT,EAAYlT,MACnBmI,YAAa+K,EAAY/K,aAAe,GACxCwK,eAAgBQ,EAAYtT,EAAOqT,GACpC,IAVmB,KAgB1B,SAASC,EAAYtT,EAAOqT,GAC1B,GAAa,MAATrT,EAAe,MAAO,MAE1B,OAAQqT,EAAYjT,QAClB,IAAK,OACH,OAAO,IAAIc,KAAqB,IAAhBlB,EAAMwS,SAAgBC,qBACxC,IAAK,SACH,OAAOc,WAAWvT,GAAOwT,QAAQ,GACnC,IAAK,QACH,OAAOxT,EAAMW,KAAK,MACpB,IAAK,MACH,OAAOb,OAAOC,QAAQC,GAAOgK,KAAI,EAAEyJ,EAAGC,KAAQ,GAAED,MAAMC,MAAK/S,KAAK,MAClE,IAAK,OACH,OAAOX,EACT,QACE,OAAOgM,KAAK2H,UAAU3T,GAE5B,CAEA,MAAO,CAAE0S,OAAME,sBACjB,G,QChGF,MAAM3F,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS2D,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://gene-curator/./src/stores/curationsStore.js","webpack://gene-curator/./src/stores/precurationsStore.js","webpack://gene-curator/./src/components/CurationModal.vue","webpack://gene-curator/./src/components/PrecurationForm.vue","webpack://gene-curator/./src/components/PrecurationForm.vue?14fe","webpack://gene-curator/./src/components/CurationForm.vue","webpack://gene-curator/./src/components/CurationForm.vue?096c","webpack://gene-curator/./src/components/GeneLinkChips.vue","webpack://gene-curator/./src/components/GeneLinkChips.vue?8f28","webpack://gene-curator/./src/components/CurationModal.vue?9e6d","webpack://gene-curator/./src/components/DataDisplayTable.vue","webpack://gene-curator/./src/components/DataDisplayTable.vue?2290","webpack://gene-curator/./src/components/GeneDetailCard.vue","webpack://gene-curator/./src/components/GeneDetailCard.vue?712e"],"sourcesContent":["// stores/curationsStore.js\nimport { collection, getDocs, getDoc, addDoc, doc, updateDoc, deleteDoc, Timestamp, query, where } from 'firebase/firestore';\nimport { db } from '@/firebase';\n\n\n/**\n * Fetches all curation documents from the Firestore 'curations' collection.\n * @returns {Promise<Object>} A promise that resolves to an object mapping document IDs to curation data.\n */\nexport const getCurations = async () => {\n  const querySnapshot = await getDocs(collection(db, 'curations'));\n  let curations = {};\n\n  querySnapshot.forEach((docSnapshot) => {\n    if (docSnapshot.exists()) {\n      // Include the document ID in the returned object\n      curations[docSnapshot.id] = { id: docSnapshot.id, ...docSnapshot.data() };\n    } else {\n      throw new Error(\"Curation document not found\");\n    }\n  });\n\n  return curations;\n};\n\n\n/**\n * Checks if the provided curation data is valid according to the provided configuration.\n * @param {Object} curationData - The data to validate.\n * @param {Object} config - The configuration object against which to validate.\n * @returns {Array} An array of error messages, empty if no errors.\n */\nconst validateCurationData = (curationData, config) => {\n  const errors = [];\n\n  for (const [key, field] of Object.entries(config)) {\n    const value = curationData[key];\n    \n    // Check for required fields\n    if (field.required && !value) {\n      errors.push(`The field \"${field.label}\" is required.`);\n    }\n\n    // Check for number fields with min and max values\n    if (field.format === 'number') {\n      if (field.min !== undefined && value < field.min) {\n        errors.push(`The value for \"${field.label}\" should not be less than ${field.min}.`);\n      }\n      if (field.max !== undefined && value > field.max) {\n        errors.push(`The value for \"${field.label}\" should not exceed ${field.max}.`);\n      }\n    }\n  }\n\n  return errors;\n};\n\n\n/**\n * Creates a new curation document in the Firestore 'curations' collection with the provided data.\n * @param {Object} curationData - The data to create a new curation document.\n * @param {Object} config - The configuration object against which to validate.\n * @param {string} userId - The user ID of the user creating the curation.\n * @param {Object} config - The configuration object against which to validate.\n * @returns {Promise<string>} A promise that resolves to the new document's ID.\n */\nexport const createCuration = async (curationData, userId, config) => {\n  const errors = validateCurationData(curationData, config);\n  if (errors.length > 0) {\n    throw new Error(`Validation failed: ${errors.join(' ')}`);\n  }\n\n  const docRef = await addDoc(collection(db, 'curations'), {\n    ...curationData,\n    users: [userId], // Initialize with the creating user\n    createdAt: Timestamp.fromDate(new Date()),\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n\n  return docRef.id;\n};\n\n\n/**\n * Retrieves a specific curation document from Firestore using the document ID.\n * @param {string} docId - The document ID of the curation to retrieve.\n * @returns {Promise<Object>} A promise that resolves to an object containing the curation data, if found.\n * @throws {Error} If the document does not exist.\n */\nexport const getCuration = async (docId) => {\n  const curationRef = doc(db, 'curations', docId);\n  const docSnap = await getDoc(curationRef);\n\n  if (docSnap.exists()) {\n    return { id: docSnap.id, ...docSnap.data() };\n  } else {\n    throw new Error(\"Curation document not found\");\n  }\n};\n\n\n/**\n * Updates a specific curation document in Firestore with the provided data.\n * @param {string} docId - The document ID of the curation to update.\n * @param {Object} updatedData - An object containing the updated data for the curation.\n * @param {string} userId - The user ID of the user performing the update.\n * @param {Object} config - The configuration object against which to validate.\n * @returns {Promise<void>} A promise that resolves once the update is complete.\n */\nexport const updateCuration = async (docId, updatedData, userId, config) => {\n  const errors = validateCurationData(updatedData, config);\n  if (errors.length > 0) {\n    throw new Error(`Validation failed: ${errors.join(' ')}`);\n  }\n\n  const curationRef = doc(db, 'curations', docId);\n  const docSnap = await getDoc(curationRef);\n\n  if (!docSnap.exists()) {\n    throw new Error(\"Curation document not found\");\n  }\n\n  const existingData = docSnap.data();\n  const updatedUsers = updateUsersArray(existingData.users || [], userId);\n\n  await updateDoc(curationRef, {\n    ...updatedData,\n    users: updatedUsers,\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n};\n\n\n/**\n * Deletes a specific curation document from Firestore using the document ID.\n * @param {string} docId - The document ID of the curation to delete.\n * @returns {Promise<void>} A promise that resolves once the document is deleted.\n * @throws {Error} If the document does not exist or cannot be deleted.\n */\nexport const deleteCuration = async (docId) => {\n  const curationRef = doc(db, 'curations', docId);\n  await deleteDoc(curationRef);\n};\n\n\n/**\n * Retrieves a curation document from Firestore by either the approved symbol or HGNC ID.\n * @param {string} identifier - The approved symbol or HGNC ID to search for.\n * @returns {Promise<Object|null>} A promise that resolves to an object containing the curation data if found, otherwise null.\n */\nexport const getCurationByHGNCIdOrSymbol = async (identifier) => {\n    const curationsRef = collection(db, 'curations');\n    const symbolQuery = query(curationsRef, where(\"approved_symbol\", \"==\", identifier));\n    const hgncQuery = query(curationsRef, where(\"hgnc_id\", \"==\", identifier));\n  \n    const symbolSnapshot = await getDocs(symbolQuery);\n    let curationData = null;\n  \n    symbolSnapshot.forEach((doc) => {\n      if (doc.exists()) {\n        curationData = { id: doc.id, ...doc.data() };\n      }\n    });\n  \n    if (!curationData) {\n      const hgncSnapshot = await getDocs(hgncQuery);\n      hgncSnapshot.forEach((doc) => {\n        if (doc.exists()) {\n          curationData = { id: doc.id, ...doc.data() };\n        }\n      });\n    }\n  \n    return curationData;\n  };\n\n  \n  /**\n * Retrieves all curation documents from Firestore by either the approved symbol or HGNC ID.\n * @param {string} identifier - The approved symbol or HGNC ID to search for.\n * @returns {Promise<Array>} A promise that resolves to an array of objects containing the curation data if found, otherwise an empty array.\n */\nexport const getCurationsByHGNCIdOrSymbol = async (identifier) => {\n  const curationsRef = collection(db, 'curations');\n  const symbolQuery = query(curationsRef, where(\"approved_symbol\", \"==\", identifier));\n  const hgncQuery = query(curationsRef, where(\"hgnc_id\", \"==\", identifier));\n\n  let curationDataArray = [];\n\n  const addToCurationDataArray = (docSnapshot) => {\n    if (docSnapshot.exists()) {\n      curationDataArray.push({ id: docSnapshot.id, ...docSnapshot.data() });\n    }\n  };\n\n  const symbolSnapshot = await getDocs(symbolQuery);\n  symbolSnapshot.forEach(addToCurationDataArray);\n\n  if (curationDataArray.length === 0) {\n    const hgncSnapshot = await getDocs(hgncQuery);\n    hgncSnapshot.forEach(addToCurationDataArray);\n  }\n\n  return curationDataArray;\n};\n\n\n/**\n * Updates the users array with the given userId, maintaining order and uniqueness.\n * @param {Array} usersArray - The current array of user IDs.\n * @param {string} userId - The ID of the user to add or move in the array.\n * @returns {Array} The updated array of user IDs.\n */\nconst updateUsersArray = (usersArray, userId) => {\n  const newUsersArray = usersArray.filter(id => id !== userId);\n  newUsersArray.push(userId); // Add the userId at the end\n  return newUsersArray;\n};\n","// stores/precurationsStore.js\nimport { collection, getDocs, getDoc, addDoc, doc, updateDoc, deleteDoc, Timestamp, query, where } from 'firebase/firestore';\nimport { db } from '@/firebase';\n\n\n/**\n * Validates the given precuration data against the precuration details configuration.\n * @param {Object} precurationData - The data to validate.\n * @returns {Array} An array of error messages, empty if no errors.\n */\nconst validatePrecurationData = (precurationData, config) => {\n  const errors = [];\n  for (const [key, field] of Object.entries(config)) {\n    const value = precurationData[key];\n    \n    // Check for required fields\n    if (field.required && (value === undefined || value === '')) {\n      errors.push(`The field \"${field.label}\" is required.`);\n    }\n\n    // Check for number fields with min and max values\n    if (field.format === 'number') {\n      if (field.min !== undefined && value < field.min) {\n        errors.push(`The value for \"${field.label}\" should not be less than ${field.min}.`);\n      }\n      if (field.max !== undefined && value > field.max) {\n        errors.push(`The value for \"${field.label}\" should not exceed ${field.max}.`);\n      }\n    }\n  }\n\n  return errors;\n};\n\n\n/**\n * Fetches all precuration documents from the Firestore collection.\n * @returns {Promise<Object>} An object mapping document IDs to precuration data.\n */\nexport const getPrecurations = async () => {\n  const querySnapshot = await getDocs(collection(db, 'precurations'));\n  let precurations = {};\n\n  querySnapshot.forEach((docSnapshot) => {\n    if (docSnapshot.exists()) {\n      // Include the document ID in the returned object\n      precurations[docSnapshot.id] = { id: docSnapshot.id, ...docSnapshot.data() };\n    } else {\n      throw new Error(\"Precuration document not found\");\n    }\n  });\n\n  return precurations;\n};\n\n\n/**\n * Creates a new precuration document in Firestore with the given data.\n * @param {Object} precurationData - The data for the new precuration.\n * @param {string} userId - The ID of the user creating the precuration.\n * @param {Object} config - The precuration details configuration.\n * @returns {Promise<string>} The ID of the newly created document.\n */\nexport const createPrecuration = async (precurationData, userId, config) => {\n  const validationErrors = validatePrecurationData(precurationData, config);\n  if (validationErrors.length > 0) {\n    throw new Error(`Validation failed: ${validationErrors.join(' ')}`);\n  }\n\n  const docRef = await addDoc(collection(db, 'precurations'), {\n    ...precurationData,\n    users: [userId], // Initialize with the creating user\n    createdAt: Timestamp.fromDate(new Date()),\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n\n  return docRef.id;\n};\n\n\n/**\n * Retrieves a specific precuration document from Firestore by its document ID.\n * @param {string} docId - The document ID of the precuration to retrieve.\n * @returns {Promise<Object>} An object containing the precuration data.\n * @throws {Error} If the document is not found.\n */\nexport const getPrecuration = async (docId) => {\n  const precurationRef = doc(db, 'precurations', docId);\n  const docSnap = await getDoc(precurationRef);\n\n  if (docSnap.exists()) {\n    return { id: docSnap.id, ...docSnap.data() };\n  } else {\n    throw new Error(\"Precuration document not found\");\n  }\n};\n\n\n/**\n * Retrieves a specific precuration document from Firestore by either the approved symbol or HGNC ID.\n * @param {string} identifier - The approved symbol or HGNC ID to search for.\n * @returns {Promise<Object|null>} An object containing the precuration data if found, otherwise null.\n */\nexport const getPrecurationByHGNCIdOrSymbol = async (identifier) => {\n  const precurationsRef = collection(db, 'precurations');\n  const symbolQuery = query(precurationsRef, where(\"approved_symbol\", \"==\", identifier));\n  const hgncQuery = query(precurationsRef, where(\"hgnc_id\", \"==\", identifier));\n\n  const symbolSnapshot = await getDocs(symbolQuery);\n  const hgncSnapshot = await getDocs(hgncQuery);\n\n  let precurationData = null;\n  symbolSnapshot.forEach((doc) => {\n    if (doc.exists()) {\n      precurationData = { id: doc.id, ...doc.data() };\n    }\n  });\n\n  if (!precurationData) {\n    hgncSnapshot.forEach((doc) => {\n      if (doc.exists()) {\n        precurationData = { id: doc.id, ...doc.data() };\n      }\n    });\n  }\n\n  return precurationData;\n};\n\n\n/**\n * Updates a precuration document in Firestore with the given data.\n * @param {string} docId - The document ID of the precuration to update.\n * @param {Object} updatedData - An object containing the updated data.\n * @param {string} userId - The ID of the user updating the precuration.\n * @param {Object} config - The precuration details configuration.\n * @returns {Promise<void>}\n */\nexport const updatePrecuration = async (docId, updatedData, userId, config) => {\n  const validationErrors = validatePrecurationData(updatedData, config);\n  if (validationErrors.length > 0) {\n    throw new Error(`Validation failed: ${validationErrors.join(' ')}`);\n  }\n\n  const precurationRef = doc(db, 'precurations', docId);\n  const docSnap = await getDoc(precurationRef);\n\n  if (!docSnap.exists()) {\n    throw new Error(\"Precuration document not found\");\n  }\n\n  const existingData = docSnap.data();\n  const updatedUsers = updateUsersArray(existingData.users || [], userId);\n\n  await updateDoc(precurationRef, {\n    ...updatedData,\n    users: updatedUsers,\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n};\n\n\n/**\n * Deletes a specific precuration document from Firestore by its document ID.\n * @param {string} docId - The document ID of the precuration to delete.\n * @returns {Promise<void>}\n * @throws {Error} If the document is not found or cannot be deleted.\n */\nexport const deletePrecuration = async (docId) => {\n  const precurationRef = doc(db, 'precurations', docId);\n  await deleteDoc(precurationRef);\n};\n\n\n/**\n * Updates the users array with the given userId, maintaining order and uniqueness.\n * @param {Array} usersArray - The current array of user IDs.\n * @param {string} userId - The ID of the user to add or move in the array.\n * @returns {Array} The updated array of user IDs.\n */\nconst updateUsersArray = (usersArray, userId) => {\n  const newUsersArray = usersArray.filter(id => id !== userId);\n  newUsersArray.push(userId); // Add the userId at the end\n  return newUsersArray;\n};","<!-- components/CurationModal.vue -->\n<template>\n  <v-dialog v-model=\"isOpen\" persistent max-width=\"1200px\">\n    <v-card>\n      <div class=\"d-flex justify-space-between align-center\">\n        <v-card-title>\n          {{ title }} - {{ editedItem.approved_symbol }} - HGNC:{{ editedItem.hgnc_id }}\n          <GeneLinkChips\n            :hgnc-id=\"editedItem.hgnc_id\"\n            :gene-symbol=\"editedItem.approved_symbol\"\n            :links-to-show=\"['clingen', 'gencc', 'search_omim']\"\n          />\n        </v-card-title>\n        <v-btn icon @click=\"close\">\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n      </div>\n      <v-card-text>\n        <v-tabs v-model=\"tab\" grow>\n          <v-tab v-if=\"showPreCurationTab\">Pre-Curation</v-tab>\n          <v-tab v-if=\"showCurationTab\">Curation</v-tab>\n        </v-tabs>\n\n         <v-window v-model=\"tab\" style=\"min-height: 300px;\">\n          <v-window-item>\n            <!-- Gene Detail Card Component -->\n            <GeneDetailCard\n               v-if=\"showGeneDetailCard\"\n              :id=\"editedItem.hgnc_id\"\n              visibilityScope=\"curationView\"\n              :showTitle=\"false\"\n              @gene-data-loaded=\"handleGeneDataLoaded\"\n            />\n\n            <!-- Precuration Form Component -->\n            <PrecurationForm\n              :approvedSymbol=\"editedItem.approved_symbol\"\n              :hgncId=\"editedItem.hgnc_id\"\n              @precuration-accepted=\"handlePrecurationAccepted\"\n            />\n          </v-window-item>\n\n          <v-window-item v-if=\"showCurationTab\">\n            <!-- CurationForm Component -->\n            <CurationForm\n              :approvedSymbol=\"editedItem.approved_symbol\"\n              :hgncId=\"editedItem.hgnc_id\"\n            />\n          </v-window-item>\n        </v-window>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"blue darken-1\" text @click=\"close\">Cancel</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n\n  <MessageSnackbar\n    v-model=\"snackbarVisible\"\n    :title=\"snackbarTitle\"\n    :message=\"snackbarMessage\"\n    :color=\"snackbarColor\"\n  />\n\n</template>\n\n\n<script>\nimport { ref, watchEffect, watch, computed } from 'vue';\nimport GeneDetailCard from './GeneDetailCard.vue';\nimport PrecurationForm from './PrecurationForm.vue';\nimport CurationForm from './CurationForm.vue'; // Import the CurationForm component\nimport { getPrecurationByHGNCIdOrSymbol } from '@/stores/precurationsStore';\nimport GeneLinkChips from './GeneLinkChips.vue'; // Import the GeneLinkChips component\n\nexport default {\n  components: {\n    GeneDetailCard,\n    PrecurationForm,\n    CurationForm,\n    GeneLinkChips\n  },\n  props: {\n    item: {\n      type: Object,\n      required: true,\n    },\n    open: {\n      type: Boolean,\n      required: true,\n    },\n    context: {\n      type: String,\n      default: 'gene' // Default context, can be 'gene', 'precuration', or 'curation'\n    },\n  },\n  emits: ['close'],\n  setup(props, { emit }) {\n    const isOpen = ref(props.open);\n    const editedItem = ref({ ...props.item });\n    const showGeneDetailCard = ref(true); // Controls the visibility of the gene detail card\n    const showPreCurationTab = ref(true); // Controls the visibility of the precuration tab\n    const showCurationTab = ref(false); // Controls the visibility of the curation tab\n    const tab = ref(0); // Controls the active tab\n\n    const snackbarVisible = ref(false);\n    const snackbarMessage = ref('');\n    const snackbarTitle = ref(''); // Add title state\n    const snackbarColor = ref('success');\n\n    const showSnackbar = (title, message, color = 'success') => {\n      snackbarTitle.value = title; // Set title\n      snackbarMessage.value = message;\n      snackbarColor.value = color;\n      snackbarVisible.value = true;\n    };\n\n    watchEffect(() => {\n      isOpen.value = props.open;\n      editedItem.value = { ...props.item };\n    });\n\n    const handlePrecurationAccepted = () => {\n      if (props.context === 'precuration') {\n        // If the context is 'precuration', just close the modal\n        close();\n      } else {\n        // Otherwise, switch to the curation tab\n        showCurationTab.value = true;\n        tab.value = 1;\n      }\n    };\n\n    const close = () => emit('close');\n\n    const checkExistingCuration = async () => {\n      try {\n        const existingCuration = await getPrecurationByHGNCIdOrSymbol(editedItem.value.hgnc_id || editedItem.value.approved_symbol);\n        if (existingCuration) {\n          showCurationTab.value = true;\n          tab.value = 1; // Open Curation tab if curation exists\n        } else {\n          showCurationTab.value = false;\n          tab.value = 0; // Open Precuration tab if curation does not exist\n        }\n      } catch (error) {\n        showSnackbar(\"Error checking existing curation: \" + error.message, 'error');\n      }\n    };\n\n    // State to store fetched gene data\n    const geneData = ref(null); // State to store fetched gene data\n\n    const handleGeneDataLoaded = (data) => {\n      geneData.value = data; // Store the fetched gene data\n      // Pass the gene data to other components as needed\n      // For example, you can now pass this data to PrecurationForm and CurationForm\n    };\n\n    // Computed property to determine the title of the modal\n    const title = computed(() => {\n      return props.context === 'curation' ? 'Curation' \n        : props.context === 'precuration' ? 'Precuration' \n        : 'Gene Curation';\n    });\n\n    // Watch for changes to the 'open' prop\n    watch(() => props.open, async (newVal) => {\n      if (newVal) { // If the modal is being opened\n        await initializeModal();\n      }\n    });\n\n    // Adjust the initial tab and content based on the context and existing curation\n    const initializeModal = async () => {\n      if (props.context === 'precuration') {\n        showGeneDetailCard.value = false;\n        showPreCurationTab.value = true;\n        showCurationTab.value = false;\n        tab.value = 0;\n      } else if (props.context === 'curation') {\n        showGeneDetailCard.value = false;\n        showPreCurationTab.value = false;\n        await checkExistingCuration(); // Check if there's an existing curation\n        // Set tab based on the existence of curation\n        tab.value = showCurationTab.value ? 1 : 0;\n      } else {\n        // For 'gene' context or other cases\n        await checkExistingCuration();\n      }\n    };\n\n    // Call initializeModal when the modal is opened\n    watch(() => props.open, (newVal) => {\n      if (newVal) {\n        initializeModal();\n      }\n    });\n\n    return {\n      initializeModal,\n      isOpen,\n      editedItem,\n      close,\n      handlePrecurationAccepted,\n      showGeneDetailCard,\n      showPreCurationTab,\n      showCurationTab,\n      tab,\n      showSnackbar,\n      snackbarVisible,\n      snackbarMessage,\n      snackbarTitle,\n      snackbarColor,\n      title,\n      handleGeneDataLoaded,\n      geneData\n    };\n  },\n};\n</script>\n\n\n<style scoped>\n/* Add styles if needed */\n</style>\n","<!-- components/PrecurationForm.vue -->\n<template>\n  <v-card class=\"elevation-2\">\n    <v-card-title>Precuration</v-card-title>\n    <v-card-text>\n      <v-container>\n        <!-- Group the fields by the group attribute -->\n        <template v-for=\"(group, groupName) in groupedFields\" :key=\"groupName\">\n          <v-row v-if=\"groupHasVisibleFields(group)\">\n            <v-col cols=\"12\">\n              <h2>{{ groupName }}</h2>\n            </v-col>\n            <!-- Loop over fields within the same group and place them in columns -->\n            <v-col \n              v-for=\"(field, index) in group\" \n              :key=\"index\" \n              :cols=\"12 / group.length\"\n            >\n              <template v-if=\"field.format === 'boolean' && field.visibility.curationView\">\n                <v-switch\n                  v-model=\"precurationData[field.key]\"\n                  :label=\"field.label\"\n                  :false-value=\"false\"\n                  :true-value=\"true\"\n                  :color=\"field.style.curationView === 'switch' ? field.style.color : ''\"\n                  :class=\"{ 'inactive-switch': !precurationData[field.key] && field.style.curationView === 'switch' }\"\n                ></v-switch>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <template v-else-if=\"field.style && field.style.curationView === 'text-field' && field.visibility.curationView\">\n                <v-text-field\n                  v-model=\"precurationData[field.key]\"\n                  :label=\"field.label\"\n                  :class=\"field.style.curationView === 'text-field' ? 'custom-text-field' : ''\"\n                ></v-text-field>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <template v-else-if=\"field.style && field.style.curationView === 'select' && field.visibility.curationView\">\n                <v-select\n                  v-model=\"precurationData[field.key]\"\n                  :items=\"field.options\"\n                  :label=\"field.label\"\n                  :class=\"{\n                    'prefilled-field': decisionPrefilled && field.key === 'decision',\n                    'manually-changed-field': decisionManuallyChanged && field.key === 'decision'\n                  }\"\n                ></v-select>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <!-- Add other field types as needed -->\n            </v-col>\n          </v-row>\n        </template>\n        <v-row>\n          <v-col cols=\"12\" class=\"text-right\">\n            <v-btn color=\"primary\" @click=\"submitPrecuration\">Accept</v-btn>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-card-text>\n  </v-card>\n\n  <!-- message snackbar component -->\n  <MessageSnackbar\n    v-model=\"snackbarVisible\"\n    :title=\"snackbarTitle\"\n    :message=\"snackbarMessage\"\n    :color=\"snackbarColor\"\n  />\n</template>\n\n\n<script>\nimport { precurationDetailsConfig, workflowConfig, workflowConfigVersion, workflowConfigName } from '@/config/workflows/KidneyGeneticsGeneCuration/workflowConfig';\nimport {\n  getPrecurationByHGNCIdOrSymbol,\n  createPrecuration,\n  updatePrecuration\n} from \"@/stores/precurationsStore\";\n\nexport default {\n  name: 'PrecurationForm',\n  props: {\n    approvedSymbol: String,\n    hgncId: String,\n  },\n  emits: ['precuration-accepted'],\n  components: {\n  },\n  data() {\n    return {\n      precurationData: this.initializePrecurationData(),\n      existingPrecurationId: null,\n      decisionPrefilled: false,\n      decisionManuallyChanged: false,\n      snackbarVisible: false,\n      snackbarMessage: '',\n      snackbarTitle: '',\n      snackbarColor: 'success',\n    };\n  },\n  computed: {\n    groupedFields() {\n      const fields = this.precurationFields;\n      const groups = {};\n\n      // Group fields by their 'group.name'\n      fields.forEach(field => {\n        if (!groups[field.group.name]) {\n          groups[field.group.name] = [];\n        }\n        groups[field.group.name].push(field);\n      });\n\n      // Sort groups by 'group.order'\n      Object.values(groups).forEach(group => {\n        group.sort((a, b) => a.group.order - b.group.order);\n      });\n\n      return groups;\n    },\n    precurationFields() {\n      let fields = Object.entries(precurationDetailsConfig)\n        .map(([key, config]) => ({ ...config, key }));\n      return fields;\n    },\n  },\n  watch: {\n    precurationData: {\n      deep: true,\n      handler() {\n        this.applyDecisionRules();\n      }\n    },\n    'precurationData.decision': 'onDecisionChange',\n  },\n  methods: {\n    showSnackbar(title, message, color = 'success') {\n      this.snackbarTitle = title;\n      this.snackbarMessage = message;\n      this.snackbarColor = color;\n      this.snackbarVisible = true;\n    },\n    applyDecisionRules() {\n      const decisionRule = workflowConfig.stages.precuration.decisionRules[0];\n      let trueCount = decisionRule.conditions.reduce((count, condition) => \n        this.precurationData[condition] ? count + 1 : count, 0);\n\n      if (trueCount >= decisionRule.threshold) {\n        // Apply prefilled decision only if the current decision matches the computed decision or is empty\n        if (this.precurationData.decision === decisionRule.decision || !this.precurationData.decision) {\n          this.precurationData.decision = decisionRule.decision;\n          this.decisionPrefilled = true;\n          this.decisionManuallyChanged = false;\n        }\n      } else {\n        // If conditions are not met and the decision was prefilled, reset the decision prefilled status\n        if (this.decisionPrefilled) {\n          this.decisionPrefilled = false;\n        }\n      }\n    },\n    onDecisionChange(newValue) {\n      const decisionRule = workflowConfig.stages.precuration.decisionRules[0];\n      let trueCount = decisionRule.conditions.reduce((count, condition) => \n        this.precurationData[condition] ? count + 1 : count, 0);\n\n      const computedDecision = trueCount >= decisionRule.threshold ? decisionRule.decision : '';\n\n      this.decisionManuallyChanged = newValue !== computedDecision;\n\n      if (this.decisionManuallyChanged) {\n        this.updateCommentField(\"Decision manually overridden.\");\n      } else {\n        this.removeCommentOverride();\n      }\n    },\n    updateCommentField(overrideMessage) {\n      if (!this.precurationData.comment.includes(overrideMessage)) {\n        this.precurationData.comment += (this.precurationData.comment ? \" \" : \"\") + overrideMessage;\n      }\n    },\n    removeCommentOverride() {\n      const overrideMessage = \"Decision manually overridden.\";\n      if (this.precurationData.comment.includes(overrideMessage)) {\n        this.precurationData.comment = this.precurationData.comment.replace(overrideMessage, \"\").trim();\n      }\n    },\n    groupHasVisibleFields(group) {\n      // This will check if there's at least one field in the group that should be visible\n      return group.some(field => field.visibility.curationView);\n    },\n    initializePrecurationData() {\n      const data = {};\n      Object.keys(precurationDetailsConfig).forEach(key => {\n        // Set the default value for each field\n        if (precurationDetailsConfig[key].format === 'boolean') {\n            data[key] = false;\n        } else {\n            // For other types, initialize with an empty string or respective default\n            data[key] = '';\n        }\n\n        // If the props for approvedSymbol or hgncId are passed, use them to prefill the respective fields\n        if (key === 'approved_symbol' && this.approvedSymbol) {\n          data[key] = this.approvedSymbol;\n        }\n        if (key === 'hgnc_id' && this.hgncId) {\n          data[key] = this.hgncId;\n        }\n      });\n      return data;\n    },\n    validatePrecurationData(precurationData) {\n      const errors = [];\n      for (const [key, field] of Object.entries(precurationDetailsConfig)) {\n        if (field.required && (precurationData[key] === undefined || precurationData[key] === '')) {\n          errors.push(`The field \"${field.label}\" is required.`);\n        }\n      }\n      return errors;\n    },\n    async submitPrecuration() {\n      const currentUserId = JSON.parse(localStorage.getItem('user')).uid;\n\n      try {\n        // Validate the precuration data\n        const validationErrors = this.validatePrecurationData(this.precurationData, precurationDetailsConfig);\n        if (validationErrors.length > 0) {\n          throw new Error(`Validation failed: ${validationErrors.join(' ')}`);\n        }\n\n        // Add timestamps for creation or update\n        const currentTime = new Date().toISOString();\n        if (!this.existingPrecurationId) {\n          // If creating a new precuration\n          this.precurationData.createdAt = currentTime;\n          // Include the workflow configuration version and name used to create the precuration\n          this.precurationData.workflowConfigVersionUsed = workflowConfigVersion;\n          this.precurationData.workflowConfigNameUsed = workflowConfigName;\n          // Create the new precuration\n          const newId = await createPrecuration(this.precurationData, currentUserId, precurationDetailsConfig);\n          this.showSnackbar('Success', 'New precuration created with ID:' + newId, 'success');\n        } else {\n          // If updating an existing precuration\n          this.precurationData.updatedAt = currentTime;\n          await updatePrecuration(this.existingPrecurationId, this.precurationData, currentUserId, precurationDetailsConfig);\n          this.showSnackbar('Success', 'Precuration updated' + this.existingPrecurationId, 'success');\n        }\n\n        // Emit an event to indicate successful submission\n        this.$emit('precuration-accepted', this.precurationData);\n      } catch (error) {\n        this.showSnackbar('Error', error.message || \"There was an error submitting the precuration\", 'error');\n      }\n    },\n    displaySwitchValue(value) {\n      return value ? 'Yes' : 'No';\n    },\n  },\n  async created() {\n    try {\n      const precuration = await getPrecurationByHGNCIdOrSymbol(this.approvedSymbol || this.hgncId);\n      if (precuration) {\n        this.existingPrecurationId = precuration.id;\n        Object.assign(this.precurationData, precuration);\n      }\n    } catch (error) {\n      this.showSnackbar('Error', 'Error fetching precuration: ' + error.message, 'error');\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Custom styles for text fields */\n.text-center {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n/* Custom styles for text fields */\n.inactive-switch {\n  --v-theme-switch-on-background: var(--v-theme-inactive-color);\n}\n\n/* Style for prefilled fields */\n.prefilled-field {\n  border: 2px solid orange; /* Orange border for prefilled fields */\n  /* Other styles as needed */\n}\n\n/* Style for manually changed fields */\n.manually-changed-field {\n  border: 2px solid purple; /* Purple border for manually changed fields */\n  /* Other styles as needed */\n}\n/* Additional styles can be added here if needed */\n</style>\n","import { render } from \"./PrecurationForm.vue?vue&type=template&id=aaef9b00&scoped=true\"\nimport script from \"./PrecurationForm.vue?vue&type=script&lang=js\"\nexport * from \"./PrecurationForm.vue?vue&type=script&lang=js\"\n\nimport \"./PrecurationForm.vue?vue&type=style&index=0&id=aaef9b00&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-aaef9b00\"]])\n\nexport default __exports__","<!-- components/CurationForm.vue -->\n<template>\n  <v-card class=\"elevation-2\">\n    <v-card-title>\n      Curation\n      <v-btn icon class=\"add-curation-btn\" @click=\"addCurationEntity\">\n        <v-icon>mdi-plus</v-icon>\n      </v-btn>\n    </v-card-title>\n\n    <!-- Expansion Panels for multiple curation entities -->\n    <v-expansion-panels multiple>\n      <v-expansion-panel v-for=\"(curationData, index) in curationDataArray\" :key=\"`curation-${index}`\" :title=\"`Curation Entity ${ index + 1 }`\">\n          <v-expansion-panel-text>\n            <!-- Dynamic Field Rendering Based on Configuration -->\n            <template v-for=\"(group, groupName) in groupedFields\" :key=\"groupName\">\n              <v-row v-if=\"groupHasVisibleFields(group)\">\n                <v-col cols=\"12\">\n                  <h2>{{ groupName }}</h2>\n                </v-col>\n                <v-col\n                  v-for=\"(field, fieldIndex) in group\"\n                  :key=\"`field-${index}-${fieldIndex}`\"\n                  :cols=\"12 / group.length\"\n                >\n\n                  <!-- Handle Different Field Types -->\n                  <template v-if=\"field.format === 'text' && field.style && field.style.curationView === 'text-field'\">\n                    <v-text-field\n                      v-model=\"curationData[field.key]\"\n                      :label=\"field.label\"\n                      outlined\n                      dense\n                    ></v-text-field>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <template v-else-if=\"field.format === 'boolean'\">\n                    <v-checkbox\n                      v-model=\"curationData[field.key]\"\n                      :label=\"field.label\"\n                    ></v-checkbox>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <template v-else-if=\"field.format === 'number'\">\n                    <v-text-field\n                      v-model=\"curationData[field.key]\"\n                      :label=\"field.label\"\n                      :min=\"field.min\"\n                      :max=\"field.max\"\n                      :step=\"field.step || 1\"\n                      type=\"number\"\n                      outlined\n                      dense\n                    ></v-text-field>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <template v-else-if=\"field.format === 'array' && field.style && field.style.curationView === 'select'\">\n                    <v-select\n                      v-model=\"curationData[field.key]\"\n                      :items=\"field.options\"\n                      :label=\"field.label\"\n                      multiple\n                      outlined\n                      dense\n                    ></v-select>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <template v-else-if=\"field.format === 'text' && field.style && field.style.curationView === 'select'\">\n                    <v-select\n                      v-model=\"curationData[field.key]\"\n                      :items=\"field.options\"\n                      :label=\"field.label\"\n                      outlined\n                      dense\n                    ></v-select>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <!-- Add other field types as needed -->\n                </v-col>\n              </v-row>\n            </template>\n          </v-expansion-panel-text>\n      </v-expansion-panel>\n    </v-expansion-panels>\n\n    <v-card-actions>\n      <v-spacer></v-spacer>\n      <v-btn color=\"primary\" @click=\"saveCuration\">Save All</v-btn>\n    </v-card-actions>\n  </v-card>\n\n  <!-- message snackbar component -->\n  <MessageSnackbar\n    v-model=\"snackbarVisible\"\n    :title=\"snackbarTitle\"\n    :message=\"snackbarMessage\"\n    :color=\"snackbarColor\"\n  />\n</template>\n\n\n<script>\nimport { curationDetailsConfig } from '@/config/workflows/KidneyGeneticsGeneCuration/curationDetailsConfig';\nimport { workflowConfigVersion, workflowConfigName } from '@/config/workflows/KidneyGeneticsGeneCuration/workflowConfig';\nimport {\n  createCuration,\n  updateCuration,\n  getCurationsByHGNCIdOrSymbol\n} from \"@/stores/curationsStore\";\n\nexport default {\n  name: 'CurationForm',\n  props: {\n    approvedSymbol: String,\n    hgncId: String,\n  },\n  data() {\n    return {\n      curationDataArray: [this.initializeCurationData()],\n      existingCurationId: null,\n      snackbarVisible: false,\n      snackbarMessage: '',\n      snackbarTitle: '',\n      snackbarColor: 'success',\n    };\n  },\n  async created() {\n    if (this.hgncId || this.approvedSymbol) {\n      try {\n        const curations = await getCurationsByHGNCIdOrSymbol(this.hgncId || this.approvedSymbol);\n        if (curations.length > 0) {\n          this.curationDataArray = curations.map(curation => Object.assign(this.initializeCurationData(), curation));\n        } else {\n          this.curationDataArray = [this.initializeCurationData()];\n        }\n      } catch (error) {\n        this.showSnackbar('Error', `Error fetching curations: ${error.message}`, 'error');\n      }\n    } else {\n      this.curationDataArray = [this.initializeCurationData()];\n    }\n  },\n  computed: {\n    groupedFields() {\n      const fields = Object.entries(curationDetailsConfig)\n        .map(([key, config]) => ({ ...config, key }));\n      \n      const groups = {};\n      fields.forEach(field => {\n        if (!groups[field.group.name]) {\n          groups[field.group.name] = [];\n        }\n        groups[field.group.name].push(field);\n      });\n\n      Object.values(groups).forEach(group => {\n        group.sort((a, b) => a.group.order - b.group.order);\n      });\n\n      return groups;\n    },\n  },\n  methods: {\n    showSnackbar(title, message, color = 'success') {\n      this.snackbarTitle = title;\n      this.snackbarMessage = message;\n      this.snackbarColor = color;\n      this.snackbarVisible = true;\n    },\n    groupHasVisibleFields(group) {\n      // This will check if there's at least one field in the group that should be visible\n      return group.some(field => field.visibility.curationView);\n    },\n    addCurationEntity() {\n      this.curationDataArray.push(this.initializeCurationData());\n    },\n    initializeCurationData() {\n      const data = {};\n      Object.keys(curationDetailsConfig).forEach(key => {\n        const field = curationDetailsConfig[key];\n        if (field.format === 'boolean') {\n          data[key] = false;\n        } else if (field.format === 'number') {\n          data[key] = field.min || 0; // Use min value if defined, otherwise default to 0\n        } else if (field.format === 'array' && field.style && field.style.curationView === 'select') {\n          data[key] = [];\n        } else if (field.format === 'text' && field.style && field.style.curationView === 'select') {\n          data[key] = null;\n        } else {\n          data[key] = '';\n        }\n\n        // Prefill approved_symbol and hgnc_id if provided as props\n        if (key === 'approved_symbol' && this.approvedSymbol) {\n          data[key] = this.approvedSymbol;\n        }\n        if (key === 'hgnc_id' && this.hgncId) {\n          data[key] = this.hgncId;\n        }\n      });\n      return data;\n    },\n    validateCurationData(curationData) {\n      const errors = [];\n      for (const [key, field] of Object.entries(curationDetailsConfig)) {\n        if (field.required && !curationData[key]) {\n          errors.push(`The field \"${field.label}\" is required.`);\n        }\n      }\n      return errors;\n    },\n    async saveCuration() {\n    const currentUserId = JSON.parse(localStorage.getItem('user')).uid; // Retrieve the current user's ID\n\n      try {\n        for (const curationData of this.curationDataArray) {\n          // Include the workflow configuration version and name in the curation record\n          curationData.workflowConfigVersionUsed = workflowConfigVersion;\n          curationData.workflowConfigNameUsed = workflowConfigName;\n\n          if (curationData.id) {\n            // Update existing curation\n            await updateCuration(curationData.id, curationData, currentUserId, curationDetailsConfig);\n            this.showSnackbar('Success', `Curation updated: ${curationData.id}`, 'success');\n          } else {\n            // Create new curation\n            const newId = await createCuration(curationData, currentUserId, curationDetailsConfig);\n            this.showSnackbar('Success', `New curation created with ID: ${newId}`, 'success');\n            curationData.id = newId; // Update the ID in the curation data array\n          }\n        }\n      } catch (error) {\n        this.showSnackbar('Error', `Error saving curation: ${error.message}`, 'error');\n      }\n    },\n  },\n};\n</script>\n\n\n<style scoped>\nh2 {\n  font-size: 1.5em;\n  margin-bottom: 0.5em;\n}\n.add-curation-btn {\n  margin-left: auto; /* pushes the button to the right */\n}\n</style>\n","import { render } from \"./CurationForm.vue?vue&type=template&id=668077c2&scoped=true\"\nimport script from \"./CurationForm.vue?vue&type=script&lang=js\"\nexport * from \"./CurationForm.vue?vue&type=script&lang=js\"\n\nimport \"./CurationForm.vue?vue&type=style&index=0&id=668077c2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-668077c2\"]])\n\nexport default __exports__","<!-- components/GeneLinkChips.vue -->\n<template>\n  <div class=\"gene-links\">\n    <v-chip\n        v-for=\"link in activeLinks\"\n        :key=\"link.name\"\n        @click=\"goToLink(link.url)\"\n        size=\"small\"\n    >\n      {{ link.name }}\n    </v-chip>\n  </div>\n</template>\n\n\n<script>\nimport { computed, defineComponent } from 'vue';\n\n/**\n * A component that displays clickable link chips based on provided gene identifiers.\n */\nexport default defineComponent({\n  name: 'GeneLinkChips',\n  props: {\n    hgncId: {\n      type: String,\n      default: null\n    },\n    geneSymbol: {\n      type: String,\n      default: null\n    },\n    omimId: {\n      type: String,\n      default: null\n    },\n    linksToShow: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    /**\n     * Formats the provided ID with or without its prefix (HGNC: or OMIM:).\n     * @param {String} id - The ID to be formatted.\n     * @param {String} type - The type of ID (HGNC or OMIM).\n     * @param {Boolean} includePrefix - Whether to include the prefix in the ID.\n     * @returns {String|null} The formatted ID or null if the ID is not provided.\n     */\n    const formatId = (id, type, includePrefix) => {\n      if (!id) return null;\n      const prefix = type === 'HGNC' ? 'HGNC:' : type === 'OMIM' ? 'OMIM:' : '';\n      if (includePrefix && !id.startsWith(prefix)) {\n        return `${prefix}${id}`;\n      } else if (!includePrefix && id.startsWith(prefix)) {\n        return id.replace(prefix, '');\n      }\n      return id;\n    };\n\n    /**\n     * Configuration for generating URL links based on provided IDs.\n     */\n    const linkConfig = {\n      clingen: () => {\n        const formattedId = formatId(props.hgncId, 'HGNC', true);\n        return formattedId ? `https://search.clinicalgenome.org/kb/genes/${formattedId}` : null;\n      },\n      gencc: () => {\n        const formattedId = formatId(props.hgncId, 'HGNC', true);\n        return formattedId ? `https://search.thegencc.org/genes/${formattedId}` : null;\n      },\n      omim: () => {\n        const formattedId = formatId(props.omimId, 'OMIM', false);\n        return formattedId ? `https://www.omim.org/entry/${formattedId}` : null;\n      },\n      search_omim: () => props.geneSymbol ? `https://www.omim.org/search?index=entry&start=1&limit=10&sort=score+desc%2C+prefix_sort+desc&search=${props.geneSymbol}` : null\n    };\n\n    /**\n     * Computed property to generate an array of active links based on `linksToShow` prop.\n     */\n    const activeLinks = computed(() => {\n      return props.linksToShow.map(linkKey => {\n        const url = linkConfig[linkKey] ? linkConfig[linkKey]() : null;\n        return {\n          name: linkKey,\n          url: url\n        };\n      }).filter(link => link.url);\n    });\n\n    /**\n     * Opens the provided URL in a new browser tab.\n     * @param {String} url - The URL to be opened.\n     */\n    const goToLink = (url) => {\n      if (url) window.open(url, '_blank');\n    };\n\n    return {\n      activeLinks,\n      goToLink\n    };\n  }\n});\n</script>\n\n\n<style scoped>\n/**\n * Styles for the gene link chips.\n * Each chip behaves like a hyperlink, with a pointer cursor and color change on hover.\n */\n.gene-links .v-chip {\n  cursor: pointer; /* Cursor like a link */\n  transition: background-color 0.3s ease; /* Smooth transition for background color */\n}\n\n.gene-links .v-chip:hover {\n  background-color: #1976D2; /* Change color on hover */\n  color: white; /* Change text color for better visibility */\n}\n</style>\n","import { render } from \"./GeneLinkChips.vue?vue&type=template&id=7939178d&scoped=true\"\nimport script from \"./GeneLinkChips.vue?vue&type=script&lang=js\"\nexport * from \"./GeneLinkChips.vue?vue&type=script&lang=js\"\n\nimport \"./GeneLinkChips.vue?vue&type=style&index=0&id=7939178d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7939178d\"]])\n\nexport default __exports__","import { render } from \"./CurationModal.vue?vue&type=template&id=22d1d129&scoped=true\"\nimport script from \"./CurationModal.vue?vue&type=script&lang=js\"\nexport * from \"./CurationModal.vue?vue&type=script&lang=js\"\n\nimport \"./CurationModal.vue?vue&type=style&index=0&id=22d1d129&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-22d1d129\"]])\n\nexport default __exports__","<!-- components/DataDisplayTable.vue -->\n<template>\n  <v-container>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"items\"\n      v-model:items-per-page=\"itemsPerPage\"\n      :server-items-length=\"totalItems\"\n      :loading=\"loading\"\n      class=\"elevation-1\"\n      density=\"compact\"\n    >\n      <!-- Header slot -->\n      <template v-for=\"h in headers\" v-slot:[`header.${h.value}`]=\"{ header }\" :key=\"h.value\">\n            <span>{{h.title}}</span>\n            <v-tooltip\n              v-bind:header=\"header\"\n              v-if=\"h.description\"\n              activator=\"parent\"\n              location=\"top\"\n            >\n              {{ h.description }}\n            </v-tooltip>\n      </template>\n\n      <!-- Default slot for items -->\n      <template v-for=\"column in config.columns\" v-slot:[`item.${column.name}`]=\"{ item }\" :key=\"column.name\">\n        <!-- Handle text formatting -->\n        <div v-if=\"column.type === 'text'\">\n          {{ item[column.name] }}\n        </div>\n        <!-- Handle date formatting -->\n        <div v-else-if=\"column.type === 'date'\">\n          {{ formatTimestamp(item[column.name]) }}\n        </div>\n        <!-- Handle boolean formatting -->\n        <router-link v-else-if=\"column.type === 'link'\" :to=\"column.to(item)\">\n          {{ item[column.name] }}\n        </router-link>\n        <!-- Handle boolean formatting -->\n        <template v-else-if=\"column.type === 'slot'\">\n          <slot :name=\"column.slotName\" :item=\"item\"></slot>\n        </template>\n      </template>\n    </v-data-table>\n    \n    <!-- Modal slot -->\n    <slot name=\"modal\"></slot>\n\n    <!-- Pagination controls -->\n    <v-pagination\n      v-model=\"page\"\n      :length=\"totalPages\"\n      @update:page=\"$emit('update-page', page)\"\n    ></v-pagination>\n  </v-container>\n</template>\n\n<script>\nimport { ref, computed, watch } from 'vue';\n\n/**\n * A generic data table component for displaying items with configurable columns\n * and pagination.\n */\nexport default {\n  props: {\n    headers: Array, // The headers for the table\n    items: Array, // The items to display in the table\n    config: Object, // Configuration for the columns\n    totalItems: Number, // Total number of items for pagination\n    loading: Boolean, // Loading state\n  },\n  setup(props, { emit }) {\n    const page = ref(1); // Current page number\n    const itemsPerPage = ref(10); // Number of items per page\n\n    // Compute the total number of pages\n    const totalPages = computed(() => Math.ceil(props.totalItems / itemsPerPage.value));\n\n    // Method to format Firestore Timestamp\n    const formatTimestamp = (timestamp) => {\n      if (!timestamp) return '';\n      const date = new Date(timestamp.seconds * 1000);\n      return date.toLocaleDateString(); // Adjust format as needed\n    };\n\n    // Watch for changes in page and itemsPerPage and emit events\n    watch(page, () => {\n      emit('page-changed', page.value);\n    });\n\n    watch(itemsPerPage, () => {\n      emit('items-per-page-changed', itemsPerPage.value);\n    });\n\n    return {\n      page,\n      itemsPerPage,\n      totalPages,\n      formatTimestamp\n    };\n  },\n};\n</script>\n","import { render } from \"./DataDisplayTable.vue?vue&type=template&id=7f99aeb9\"\nimport script from \"./DataDisplayTable.vue?vue&type=script&lang=js\"\nexport * from \"./DataDisplayTable.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- components/GeneDetailCard.vue -->\n<template>\n  <v-container>\n    <v-card v-if=\"gene\" class=\"mx-auto my-4\" max-width=\"800\">\n      <v-card-title v-if=\"showTitle\" class=\"headline\">{{ gene.approved_symbol }}</v-card-title>\n      <v-card-text>\n        <v-table dense>\n          <tbody>\n            <template v-for=\"(value, key) in filteredGeneDetails\" :key=\"key\">\n              <tr>\n                <td>\n                  <strong>\n                    <span class=\"label-hover\" :title=\"value.description\">{{ value.label }}</span>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"start\"\n                    >\n                      {{ value.description }}\n                    </v-tooltip>\n                  </strong>\n                </td>\n                <td v-html=\"value.formattedValue\"></td>\n              </tr>\n            </template>\n          </tbody>\n        </v-table>\n      </v-card-text>\n    </v-card>\n    <v-alert v-else type=\"error\">\n      Gene not found or failed to load.\n    </v-alert>\n  </v-container>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport { getGeneByHGNCIdOrSymbol } from '@/stores/geneStore';\nimport { geneDetailsConfig } from '@/config/workflows/KidneyGeneticsGeneCuration/workflowConfig';\n\nexport default {\n  props: {\n    id: String,\n    visibilityScope: {\n      type: String,\n      default: 'standardView', // or 'curationView'\n    },\n    showTitle: { // New prop for showing the card title\n      type: Boolean,\n      default: true,\n    },\n  },\n  setup(props, { emit }) {\n    const gene = ref(null);\n\n    onMounted(async () => {\n      if (props.id) {\n        try {\n          const fetchedGene = await getGeneByHGNCIdOrSymbol(props.id);\n          gene.value = fetchedGene;\n          emit('gene-data-loaded', fetchedGene); // Emit an event with the gene data\n        } catch (error) {\n          console.error('Error fetching gene:', error.message);\n        }\n      }\n    });\n\n    const filteredGeneDetails = computed(() => {\n      if (!gene.value) return [];\n\n      return Object.entries(geneDetailsConfig)\n        .filter(([, fieldConfig]) => fieldConfig.visibility[props.visibilityScope])\n        .map(([key, fieldConfig]) => {\n          const value = gene.value[key];\n          return {\n            label: fieldConfig.label,\n            description: fieldConfig.description || '',\n            formattedValue: formatValue(value, fieldConfig),\n          };\n        });\n    });\n\n    // for now objects and arrays are formatted into a readable string format\n    // TODO: add support for formatting objects and arrays into a table\n    function formatValue(value, fieldConfig) {\n      if (value == null) return 'N/A'; // Handle null and undefined values\n\n      switch (fieldConfig.format) {\n        case 'date':\n          return new Date(value.seconds * 1000).toLocaleDateString();\n        case 'number':\n          return parseFloat(value).toFixed(2);\n        case 'array':\n          return value.join(', ');\n        case 'map':\n          return Object.entries(value).map(([k, v]) => `${k}: ${v}`).join(', ');\n        case 'text':\n          return value;\n        default:\n          return JSON.stringify(value);\n      }\n    }\n\n    return { gene, filteredGeneDetails };\n  },\n};\n</script>\n\n<style scoped>\n.label-hover {\n  cursor: help;\n}\n\n.v-simple-table {\n  max-height: 300px;\n  overflow-y: auto;\n}\n</style>\n","import { render } from \"./GeneDetailCard.vue?vue&type=template&id=bfca4502&scoped=true\"\nimport script from \"./GeneDetailCard.vue?vue&type=script&lang=js\"\nexport * from \"./GeneDetailCard.vue?vue&type=script&lang=js\"\n\nimport \"./GeneDetailCard.vue?vue&type=style&index=0&id=bfca4502&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-bfca4502\"]])\n\nexport default __exports__"],"names":["getCurations","async","querySnapshot","getDocs","collection","db","curations","forEach","docSnapshot","exists","Error","id","data","validateCurationData","curationData","config","errors","key","field","Object","entries","value","required","push","label","format","undefined","min","max","createCuration","userId","length","join","docRef","addDoc","users","createdAt","Timestamp","fromDate","Date","updatedAt","updateCuration","docId","updatedData","curationRef","doc","docSnap","getDoc","existingData","updatedUsers","updateUsersArray","updateDoc","deleteCuration","deleteDoc","getCurationsByHGNCIdOrSymbol","curationsRef","symbolQuery","query","where","identifier","hgncQuery","curationDataArray","addToCurationDataArray","symbolSnapshot","hgncSnapshot","usersArray","newUsersArray","filter","validatePrecurationData","precurationData","getPrecurations","precurations","createPrecuration","validationErrors","getPrecurationByHGNCIdOrSymbol","precurationsRef","updatePrecuration","precurationRef","deletePrecuration","class","_createVNode","_component_v_dialog","$setup","isOpen","$event","persistent","_component_v_card","_createElementVNode","_hoisted_1","_component_v_card_title","title","_toDisplayString","editedItem","approved_symbol","hgnc_id","_component_GeneLinkChips","_component_v_btn","icon","onClick","close","_component_v_icon","_component_v_card_text","_component_v_tabs","tab","grow","showPreCurationTab","_createBlock","_component_v_tab","showCurationTab","_component_v_window","style","_component_v_window_item","showGeneDetailCard","_component_GeneDetailCard","visibilityScope","showTitle","onGeneDataLoaded","handleGeneDataLoaded","_component_PrecurationForm","approvedSymbol","hgncId","onPrecurationAccepted","handlePrecurationAccepted","_component_CurationForm","_component_v_card_actions","_component_v_spacer","color","text","_component_MessageSnackbar","snackbarVisible","snackbarTitle","message","snackbarMessage","snackbarColor","_component_v_container","_createElementBlock","_Fragment","_renderList","$options","groupedFields","group","groupName","groupHasVisibleFields","_component_v_row","_component_v_col","cols","index","visibility","curationView","_component_v_switch","$data","_normalizeClass","_component_v_tooltip","activator","location","description","_component_v_text_field","_component_v_select","items","options","decisionPrefilled","decisionManuallyChanged","submitPrecuration","name","props","String","emits","components","this","initializePrecurationData","existingPrecurationId","computed","fields","precurationFields","groups","values","sort","a","b","order","precurationDetailsConfig","map","watch","deep","handler","applyDecisionRules","methods","showSnackbar","decisionRule","workflowConfig","stages","precuration","decisionRules","trueCount","conditions","reduce","count","condition","threshold","decision","onDecisionChange","newValue","computedDecision","updateCommentField","removeCommentOverride","overrideMessage","comment","includes","replace","trim","some","keys","currentUserId","JSON","parse","localStorage","getItem","uid","currentTime","toISOString","workflowConfigVersionUsed","workflowConfigVersion","workflowConfigNameUsed","workflowConfigName","newId","$emit","error","displaySwitchValue","created","assign","__exports__","addCurationEntity","_component_v_expansion_panels","multiple","_component_v_expansion_panel","_component_v_expansion_panel_text","fieldIndex","outlined","dense","_component_v_checkbox","step","type","saveCuration","initializeCurationData","existingCurationId","curation","curationDetailsConfig","_ctx","activeLinks","link","_component_v_chip","goToLink","url","size","defineComponent","default","geneSymbol","omimId","linksToShow","Array","setup","formatId","includePrefix","prefix","startsWith","linkConfig","clingen","formattedId","gencc","omim","search_omim","linkKey","window","open","GeneDetailCard","PrecurationForm","CurationForm","GeneLinkChips","item","Boolean","context","emit","ref","watchEffect","checkExistingCuration","existingCuration","geneData","newVal","initializeModal","render","_component_v_data_table","headers","$props","itemsPerPage","totalItems","loading","density","h","header","columns","column","_hoisted_2","formatTimestamp","_component_router_link","to","_renderSlot","$slots","slotName","_component_v_pagination","page","totalPages","_cache","Number","Math","ceil","timestamp","date","seconds","toLocaleDateString","gene","_component_v_table","filteredGeneDetails","innerHTML","formattedValue","_component_v_alert","onMounted","fetchedGene","getGeneByHGNCIdOrSymbol","console","geneDetailsConfig","fieldConfig","formatValue","parseFloat","toFixed","k","v","stringify"],"sourceRoot":""}