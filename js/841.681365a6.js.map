{"version":3,"file":"js/841.681365a6.js","mappings":"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","sources":["webpack://gene-curator/./src/components/ConfirmationModal.vue","webpack://gene-curator/./src/components/ConfirmationModal.vue?017d","webpack://gene-curator/./src/views/CurationTable.vue","webpack://gene-curator/./src/views/CurationTable.vue?257f"],"sourcesContent":["<!-- components/ConfirmationModal.vue -->\n<template>\n  <v-dialog v-model=\"internalVisible\" max-width=\"400px\">\n    <v-card>\n      <v-card-title>{{ title }}</v-card-title>\n      <v-card-text>{{ message }}</v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"green\" @click=\"confirmAction\">Yes</v-btn>\n        <v-btn color=\"red\" @click=\"cancelAction\">No</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  props: {\n    visible: Boolean,\n    title: String,\n    message: String\n  },\n  emits: ['confirm', 'cancel', 'update:visible'],\n  computed: {\n    internalVisible: {\n      get() {\n        return this.visible;\n      },\n      set(value) {\n        this.$emit('update:visible', value);\n      }\n    }\n  },\n  methods: {\n    confirmAction() {\n      this.$emit('confirm');\n      this.$emit('update:visible', false);\n    },\n    cancelAction() {\n      this.$emit('cancel');\n      this.$emit('update:visible', false);\n    }\n  }\n};\n</script>\n","import { render } from \"./ConfirmationModal.vue?vue&type=template&id=61478dac\"\nimport script from \"./ConfirmationModal.vue?vue&type=script&lang=js\"\nexport * from \"./ConfirmationModal.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--components/CurationTable.vue-->\n<template>\n  <v-container>\n    <h1>Curation Table</h1>\n\n    <!-- Data table component -->\n    <DataDisplayTable\n      :headers=\"headers\"\n      :items=\"paginatedItems\"\n      :config=\"tableConfig\"\n      :total-items=\"totalItems\"\n      :loading=\"loading\"\n      @page-changed=\"updatePage\"\n      @items-per-page-changed=\"updateItemsPerPage\"\n    >\n\n      <template v-slot:action-slot=\"{ item }\" v-if=\"isCuratorOrAdmin\">\n        <!-- Replace with appropriate curation actions -->\n        <v-btn color=\"primary\" @click=\"openModal(item, 'edit')\">Edit</v-btn>\n        <v-btn color=\"green\" @click=\"approveItem(item)\">\n          <v-icon left v-if=\"item.approvedBy\">mdi-check</v-icon>\n          Approve\n        </v-btn>\n        <v-btn color=\"error\" @click=\"deleteItem(item)\">Delete</v-btn>\n      </template>\n\n      <template v-slot:modal>\n        <CurationModal :item=\"selectedItem\" :open=\"showModal\" context=\"curation\" @close=\"closeModal\" />\n      </template>\n\n    </DataDisplayTable>\n\n    <ConfirmationModal\n      :visible=\"confirmModalVisible\"\n      :title=\"confirmModalTitle\"\n      :message=\"confirmModalMessage\"\n      @confirm=\"onConfirm\"\n      @cancel=\"onCancel\"\n    />\n  </v-container>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport DataDisplayTable from '@/components/DataDisplayTable.vue';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport CurationModal from '@/components/CurationModal.vue';\nimport ConfirmationModal from '@/components/ConfirmationModal.vue';\nimport { getCurations, deleteCuration, updateCuration } from '@/stores/curationsStore';\nimport { curationDetailsConfig } from '@/config/workflows/KidneyGeneticsGeneCuration/workflowConfig';\n\nexport default {\n  name: 'CurationTable',\n  components: {\n    DataDisplayTable,\n    CurationModal,\n    ConfirmationModal\n  },\n  setup() {\n    const rawItems = ref({});\n    const loading = ref(false);\n    const page = ref(1);\n    const itemsPerPage = ref(10);\n\n    // Firebase auth setup\n    const auth = getAuth();\n    const user = ref(null);\n\n    // Modal control state\n    const showModal = ref(false);\n    const selectedItem = ref({});\n\n    // Computed properties for UI\n    const isLoggedIn = computed(() => !!user.value);\n    const totalItems = computed(() => Object.keys(rawItems.value).length);\n    const paginatedItems = computed(() => {\n      const start = (page.value - 1) * itemsPerPage.value;\n      const end = start + itemsPerPage.value;\n      return Object.values(rawItems.value).slice(start, end);\n    });\n\n    // Dynamically define headers based on user role and\n    // create headers dynamically based on the curationDetailsConfig\n    const headers = computed(() => {\n      const dynamicHeaders = Object.entries(curationDetailsConfig)\n        .filter(([, config]) => config.visibility.tableView)\n        .map(([key, config]) => ({\n          title: config.label,\n          value: key,\n          sortable: config.format !== 'array' && config.format !== 'map',\n          description: config.description // Add the description for the tooltip\n        }));\n\n      // Add 'Actions' header if user is curator or admin\n      if (isCuratorOrAdmin.value) {\n        dynamicHeaders.push({ title: 'Actions', value: 'actions', sortable: false });\n      }\n\n      return dynamicHeaders;\n    });\n\n    const tableConfig = {\n      columns: [\n        {\n          name: 'approved_symbol',\n          type: 'link', // Types can be 'text', 'link', 'action', etc.\n          to: item => `/gene/${item.hgnc_id}` // Function to generate the link\n        },\n        {\n          name: 'createdAt',\n          type: 'date'\n        },\n        {\n          name: 'actions',\n          type: 'slot',\n          slotName: 'action-slot'\n        }\n      ]\n    };\n\n    // Function to handle modal opening\n    const openModal = (item) => {\n      selectedItem.value = item;\n      showModal.value = true;\n    };\n\n    // Function to handle modal closure\n    const closeModal = () => {\n      showModal.value = false;\n    };\n\n    const updatePage = (newPage) => {\n      page.value = newPage;\n    };\n\n    const updateItemsPerPage = (newItemsPerPage) => {\n      itemsPerPage.value = newItemsPerPage;\n    };\n\n    const confirmModalVisible = ref(false);\n    const confirmModalTitle = ref('');\n    const confirmModalMessage = ref('');\n    let currentAction = null;\n\n    const openConfirmModal = (title, message, action) => {\n      confirmModalTitle.value = title;\n      confirmModalMessage.value = message;\n      currentAction = action;\n      confirmModalVisible.value = true;\n    };\n\n    const onConfirm = () => {\n      if (currentAction) {\n        currentAction();\n      }\n      confirmModalVisible.value = false;\n    };\n\n    const onCancel = () => {\n      confirmModalVisible.value = false;\n    };\n\n    // Function for updating the local state after an item is deleted or approved\n    const updateLocalState = (itemId, updatedData = null) => {\n      if (updatedData) {\n        // Update the item data if it exists (for approval)\n        rawItems.value[itemId] = updatedData;\n      } else {\n        // Delete the item from the local state (for deletion)\n        delete rawItems.value[itemId];\n      }\n      // Trigger reactivity\n      rawItems.value = {...rawItems.value};\n    };\n\n    // Function to delete an item\n    const deleteItem = async (item) => {\n      openConfirmModal(\n        'Delete Curation',\n        'Are you sure you want to delete this curation?',\n        async () => {\n          if (item && item.id) {\n            await deleteCuration(item.id);\n            updateLocalState(item.id);\n          } else {\n            console.error('Item ID is undefined or invalid');\n          }\n        }\n      );\n    };\n\n    // Function to approve an item\n    const approveItem = async (item) => {\n      openConfirmModal(\n        'Approve Curation',\n        'Are you sure you want to approve this curation?',\n        async () => {\n          if (item && item.id && user.value) {\n            const updatedData = {\n              ...item,\n              approvedBy: user.value.uid, // Assuming you have the user's UID here\n              approvedAt: new Date().toISOString()\n            };\n            await updateCuration(item.id, updatedData, user.value.uid, curationDetailsConfig);\n            updateLocalState(item.id, updatedData);\n          } else {\n            console.error('Item ID or User ID is undefined or invalid');\n          }\n        }\n      );\n    };\n\n    onMounted(async () => {\n      loading.value = true;\n      rawItems.value = await getCurations();\n      loading.value = false;\n    });\n    \n    onAuthStateChanged(auth, (loggedInUser) => {\n      user.value = loggedInUser; // Update user state on auth change\n    });\n\n    // Computed property to check if the user is a curator or admin\n    const isCuratorOrAdmin = computed(() => {\n      const user = JSON.parse(localStorage.getItem('user'));\n      return user && (user.role === 'curator' || user.role === 'admin');\n    });\n\n    return {\n      headers,\n      paginatedItems,\n      tableConfig,\n      totalItems,\n      loading,\n      isLoggedIn,\n      showModal,\n      selectedItem,\n      openModal,\n      closeModal,\n      updatePage,\n      updateItemsPerPage,\n      deleteItem,\n      updateCuration,\n      isCuratorOrAdmin,\n      openConfirmModal,\n      onConfirm,\n      onCancel,\n      confirmModalVisible,\n      confirmModalTitle,\n      confirmModalMessage,\n      approveItem,\n      updateLocalState\n    };\n  },\n};\n</script>\n\n<style scoped>\n/* Add your CSS styling here */\n</style>\n","import { render } from \"./CurationTable.vue?vue&type=template&id=281c26ae&scoped=true\"\nimport script from \"./CurationTable.vue?vue&type=script&lang=js\"\nexport * from \"./CurationTable.vue?vue&type=script&lang=js\"\n\nimport \"./CurationTable.vue?vue&type=style&index=0&id=281c26ae&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-281c26ae\"]])\n\nexport default __exports__"],"names":["_createBlock","_component_v_dialog","$options","internalVisible","$event","_createVNode","_component_v_card","_component_v_card_title","$props","title","_component_v_card_text","message","_component_v_card_actions","_component_v_spacer","_component_v_btn","color","onClick","confirmAction","cancelAction","props","visible","Boolean","String","emits","computed","get","this","set","value","$emit","methods","__exports__","render","_createElementVNode","_component_v_container","_hoisted_1","_component_DataDisplayTable","headers","$setup","items","paginatedItems","config","tableConfig","totalItems","loading","onPageChanged","updatePage","onItemsPerPageChanged","updateItemsPerPage","modal","_withCtx","_component_CurationModal","item","selectedItem","open","showModal","context","onClose","closeModal","isCuratorOrAdmin","openModal","approveItem","approvedBy","_component_v_icon","left","deleteItem","_component_ConfirmationModal","confirmModalVisible","confirmModalTitle","confirmModalMessage","onConfirm","onCancel","name","components","DataDisplayTable","CurationModal","ConfirmationModal","setup","rawItems","ref","page","itemsPerPage","auth","getAuth","user","isLoggedIn","Object","keys","length","start","end","values","slice","dynamicHeaders","entries","curationDetailsConfig","filter","visibility","tableView","map","key","label","sortable","format","description","push","columns","type","to","hgnc_id","slotName","newPage","newItemsPerPage","currentAction","openConfirmModal","action","updateLocalState","itemId","updatedData","async","id","deleteCuration","console","error","uid","approvedAt","Date","toISOString","updateCuration","onMounted","getCurations","onAuthStateChanged","loggedInUser","JSON","parse","localStorage","getItem","role"],"sourceRoot":""}