{"version":3,"file":"js/150.9059d2f0.js","mappings":"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","sources":["webpack://gene-curator/./src/views/PreCurationTable.vue","webpack://gene-curator/./src/components/ConfirmationModal.vue","webpack://gene-curator/./src/components/ConfirmationModal.vue?017d","webpack://gene-curator/./src/views/PreCurationTable.vue?160e"],"sourcesContent":["<!--components/PreCurationTable.vue-->\n<template>\n  <v-container>\n    <h1>Pre-Curation Table</h1>\n\n    <!-- Data table component -->\n    <DataDisplayTable\n      :headers=\"headers\"\n      :items=\"paginatedItems\"\n      :config=\"tableConfig\"\n      :total-items=\"totalItems\"\n      :loading=\"loading\"\n      @page-changed=\"updatePage\"\n      @items-per-page-changed=\"updateItemsPerPage\"\n    >\n\n      <template v-slot:action-slot=\"{ item }\" v-if=\"isCuratorOrAdmin\">\n        <v-btn color=\"primary\" @click=\"openModal(item)\">Edit</v-btn>\n        <v-btn color=\"green\" @click=\"approveItem(item)\">\n          <v-icon left v-if=\"item.approvedBy\">mdi-check</v-icon>\n          Approve\n        </v-btn>\n        <v-btn color=\"error\" @click=\"deleteItem(item)\">Delete</v-btn>\n      </template>\n\n      <template v-slot:modal>\n        <CurationModal :item=\"selectedItem\" :open=\"showModal\" context=\"precuration\" @close=\"closeModal\" @save=\"saveData\" />\n      </template>\n\n    </DataDisplayTable>\n\n    <ConfirmationModal\n      :visible=\"confirmModalVisible\"\n      :title=\"confirmModalTitle\"\n      :message=\"confirmModalMessage\"\n      @confirm=\"onConfirm\"\n      @cancel=\"onCancel\"\n    />\n  </v-container>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport DataDisplayTable from '@/components/DataDisplayTable.vue';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport CurationModal from '@/components/CurationModal.vue';\nimport ConfirmationModal from '@/components/ConfirmationModal.vue';\nimport { getPrecurations, deletePrecuration, updatePrecuration } from '@/stores/precurationsStore';\nimport { precurationDetailsConfig } from '@/config/workflows/KidneyGeneticsGeneCuration/workflowConfig';\n\nexport default {\n  name: 'PreCurationTable',\n  components: {\n    DataDisplayTable,\n    CurationModal,\n    ConfirmationModal\n  },\n  setup() {\n    const rawItems = ref({});\n    const loading = ref(false);\n    const page = ref(1);\n    const itemsPerPage = ref(10);\n\n    // Firebase auth setup\n    const auth = getAuth();\n    const user = ref(null);\n\n    // Modal control state\n    const showModal = ref(false);\n    const selectedItem = ref({});\n\n    // Computed properties for UI\n    const isLoggedIn = computed(() => !!user.value);\n    const totalItems = computed(() => Object.keys(rawItems.value).length);\n    const paginatedItems = computed(() => {\n      const start = (page.value - 1) * itemsPerPage.value;\n      const end = start + itemsPerPage.value;\n      return Object.values(rawItems.value).slice(start, end);\n    });\n\n    // Dynamically define headers based on user role and\n    // create headers dynamically based on the precurationDetailsConfig\n    const headers = computed(() => {\n      const dynamicHeaders = Object.entries(precurationDetailsConfig)\n        .filter(([, config]) => config.visibility.tableView)\n        .map(([key, config]) => ({\n          title: config.label,\n          value: key,\n          sortable: config.format !== 'array' && config.format !== 'map',\n          description: config.description // Add the description for the tooltip\n        }));\n\n      // Add 'Actions' header if user is curator or admin\n      if (isCuratorOrAdmin.value) {\n        dynamicHeaders.push({ title: 'Actions', value: 'actions', sortable: false });\n      }\n\n      return dynamicHeaders;\n    });\n\n    const tableConfig = {\n      columns: [\n        {\n          name: 'approved_symbol',\n          type: 'link', // Types can be 'text', 'link', 'action', etc.\n          to: item => `/gene/${item.hgnc_id}` // Function to generate the link\n        },\n        {\n          name: 'createdAt',\n          type: 'date'\n        },\n        {\n          name: 'actions',\n          type: 'slot',\n          slotName: 'action-slot'\n        }\n      ]\n    };\n\n    // Function to handle modal opening\n    const openModal = (item) => {\n      selectedItem.value = item;\n      showModal.value = true;\n    };\n\n    // Function to handle modal closure\n    const closeModal = () => {\n      showModal.value = false;\n    };\n    \n    // Function to handle saving data from the modal\n    const saveData = (updatedItem) => {\n      // TODO: Implement the logic to save the updated item\n      console.log('Saving data:', updatedItem);\n    };\n\n\n    const updatePage = (newPage) => {\n      page.value = newPage;\n    };\n\n    const updateItemsPerPage = (newItemsPerPage) => {\n      itemsPerPage.value = newItemsPerPage;\n    };\n\n    const confirmModalVisible = ref(false);\n    const confirmModalTitle = ref('');\n    const confirmModalMessage = ref('');\n    let currentAction = null;\n\n    const openConfirmModal = (title, message, action) => {\n      confirmModalTitle.value = title;\n      confirmModalMessage.value = message;\n      currentAction = action;\n      confirmModalVisible.value = true;\n    };\n\n    const onConfirm = () => {\n      if (currentAction) {\n        currentAction();\n      }\n      confirmModalVisible.value = false;\n    };\n\n    const onCancel = () => {\n      confirmModalVisible.value = false;\n    };\n\n    // Function for updating the local state after an item is deleted or approved\n    const updateLocalState = (itemId, updatedData = null) => {\n      if (updatedData) {\n        // Update the item data if it exists (for approval)\n        rawItems.value[itemId] = updatedData;\n      } else {\n        // Delete the item from the local state (for deletion)\n        delete rawItems.value[itemId];\n      }\n      // Trigger reactivity\n      rawItems.value = {...rawItems.value};\n    };\n\n    // Function to delete an item\n    const deleteItem = async (item) => {\n      openConfirmModal(\n        'Delete Precuration',\n        'Are you sure you want to delete this precuration?',\n        async () => {\n          if (item && item.id) {\n            await deletePrecuration(item.id);\n            updateLocalState(item.id);\n          } else {\n            console.error('Item ID is undefined or invalid');\n          }\n        }\n      );\n    };\n\n    // Function to approve an item\n    const approveItem = async (item) => {\n      openConfirmModal(\n        'Approve Precuration',\n        'Are you sure you want to approve this precuration?',\n        async () => {\n          if (item && item.id) {\n            const updatedData = {\n              ...item,\n              approvedBy: user.value.uid,\n              approvedAt: new Date()\n            };\n            await updatePrecuration(item.id, updatedData);\n            updateLocalState(item.id, updatedData);\n          } else {\n            console.error('Item ID is undefined or invalid');\n          }\n        }\n      );\n    };\n\n    onMounted(async () => {\n      loading.value = true;\n      rawItems.value = await getPrecurations();\n      loading.value = false;\n    });\n    \n    onAuthStateChanged(auth, (loggedInUser) => {\n      user.value = loggedInUser; // Update user state on auth change\n    });\n\n    // Computed property to check if the user is a curator or admin\n    const isCuratorOrAdmin = computed(() => {\n      const user = JSON.parse(localStorage.getItem('user'));\n      return user && (user.role === 'curator' || user.role === 'admin');\n    });\n\n    return {\n      headers,\n      paginatedItems,\n      tableConfig,\n      totalItems,\n      loading,\n      isLoggedIn,\n      showModal,\n      selectedItem,\n      openModal,\n      closeModal,\n      saveData,\n      updatePage,\n      updateItemsPerPage,\n      deleteItem,\n      isCuratorOrAdmin,\n      openConfirmModal,\n      onConfirm,\n      onCancel,\n      confirmModalVisible,\n      confirmModalTitle,\n      confirmModalMessage,\n      approveItem,\n      updateLocalState\n    };\n  },\n};\n</script>\n\n<style scoped>\n/* Add your CSS styling here */\n</style>\n","<!-- components/ConfirmationModal.vue -->\n<template>\n  <v-dialog v-model=\"internalVisible\" max-width=\"400px\">\n    <v-card>\n      <v-card-title>{{ title }}</v-card-title>\n      <v-card-text>{{ message }}</v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"green\" @click=\"confirmAction\">Yes</v-btn>\n        <v-btn color=\"red\" @click=\"cancelAction\">No</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  props: {\n    visible: Boolean,\n    title: String,\n    message: String\n  },\n  emits: ['confirm', 'cancel', 'update:visible'],\n  computed: {\n    internalVisible: {\n      get() {\n        return this.visible;\n      },\n      set(value) {\n        this.$emit('update:visible', value);\n      }\n    }\n  },\n  methods: {\n    confirmAction() {\n      this.$emit('confirm');\n      this.$emit('update:visible', false);\n    },\n    cancelAction() {\n      this.$emit('cancel');\n      this.$emit('update:visible', false);\n    }\n  }\n};\n</script>\n","import { render } from \"./ConfirmationModal.vue?vue&type=template&id=61478dac\"\nimport script from \"./ConfirmationModal.vue?vue&type=script&lang=js\"\nexport * from \"./ConfirmationModal.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./PreCurationTable.vue?vue&type=template&id=20e0cabe&scoped=true\"\nimport script from \"./PreCurationTable.vue?vue&type=script&lang=js\"\nexport * from \"./PreCurationTable.vue?vue&type=script&lang=js\"\n\nimport \"./PreCurationTable.vue?vue&type=style&index=0&id=20e0cabe&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-20e0cabe\"]])\n\nexport default __exports__"],"names":["_createElementVNode","_createBlock","_component_v_container","_hoisted_1","_createVNode","_component_DataDisplayTable","headers","$setup","items","paginatedItems","config","tableConfig","totalItems","loading","onPageChanged","updatePage","onItemsPerPageChanged","updateItemsPerPage","modal","_withCtx","_component_CurationModal","item","selectedItem","open","showModal","context","onClose","closeModal","onSave","saveData","isCuratorOrAdmin","_component_v_btn","color","onClick","$event","openModal","approveItem","approvedBy","_component_v_icon","left","deleteItem","_component_ConfirmationModal","visible","confirmModalVisible","title","confirmModalTitle","message","confirmModalMessage","onConfirm","onCancel","_component_v_dialog","$options","internalVisible","_component_v_card","_component_v_card_title","$props","_component_v_card_text","_component_v_card_actions","_component_v_spacer","confirmAction","cancelAction","props","Boolean","String","emits","computed","get","this","set","value","$emit","methods","__exports__","name","components","DataDisplayTable","CurationModal","ConfirmationModal","setup","rawItems","ref","page","itemsPerPage","auth","getAuth","user","isLoggedIn","Object","keys","length","start","end","values","slice","dynamicHeaders","entries","precurationDetailsConfig","filter","visibility","tableView","map","key","label","sortable","format","description","push","columns","type","to","hgnc_id","slotName","updatedItem","console","log","newPage","newItemsPerPage","currentAction","openConfirmModal","action","updateLocalState","itemId","updatedData","async","id","deletePrecuration","error","uid","approvedAt","Date","updatePrecuration","onMounted","getPrecurations","onAuthStateChanged","loggedInUser","JSON","parse","localStorage","getItem","role","render"],"sourceRoot":""}