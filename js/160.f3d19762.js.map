{"version":3,"file":"js/160.f3d19762.js","mappings":"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","sources":["webpack://gene-curator/./src/stores/curationsStore.js","webpack://gene-curator/./src/stores/precurationsStore.js","webpack://gene-curator/./src/components/CurationModal.vue","webpack://gene-curator/./src/components/PrecurationForm.vue","webpack://gene-curator/./src/components/PrecurationForm.vue?14fe","webpack://gene-curator/./src/components/CurationForm.vue","webpack://gene-curator/./src/utils/validators.js","webpack://gene-curator/./src/components/CurationForm.vue?096c","webpack://gene-curator/./src/components/GeneLinkChips.vue","webpack://gene-curator/./src/components/GeneLinkChips.vue?8f28","webpack://gene-curator/./src/components/CurationModal.vue?9e6d","webpack://gene-curator/./src/components/DataDisplayTable.vue","webpack://gene-curator/./src/components/DataDisplayTable.vue?2290","webpack://gene-curator/./src/components/GeneDetailCard.vue","webpack://gene-curator/./src/components/GeneDetailCard.vue?712e","webpack://gene-curator/./src/components/HelpIcon.vue","webpack://gene-curator/./src/components/HelpDialog.vue","webpack://gene-curator/./src/components/HelpDialog.vue?80db","webpack://gene-curator/./src/components/HelpIcon.vue?3875"],"sourcesContent":["// stores/curationsStore.js\nimport { collection, getDocs, getDoc, setDoc, doc, updateDoc, deleteDoc, Timestamp, query, where } from 'firebase/firestore';\nimport { db } from '@/firebase';\n\n\n/**\n * Fetches all curation documents from the Firestore 'curations' collection.\n * @returns {Promise<Object>} A promise that resolves to an object mapping document IDs to curation data.\n */\nexport const getCurations = async () => {\n  const querySnapshot = await getDocs(collection(db, 'curations'));\n  let curations = {};\n\n  querySnapshot.forEach((docSnapshot) => {\n    if (docSnapshot.exists()) {\n      // Include the document ID in the returned object\n      curations[docSnapshot.id] = { id: docSnapshot.id, ...docSnapshot.data() };\n    } else {\n      throw new Error(\"Curation document not found\");\n    }\n  });\n\n  return curations;\n};\n\n\n/**\n * Checks if the provided curation data is valid according to the provided configuration.\n * @param {Object} curationData - The data to validate.\n * @param {Object} config - The configuration object against which to validate.\n * @returns {Array} An array of error messages, empty if no errors.\n */\nconst validateCurationData = (curationData, config) => {\n  const errors = [];\n\n  for (const [key, field] of Object.entries(config)) {\n    const value = curationData[key];\n    \n    // Check for required fields\n    if (field.required && !value) {\n      errors.push(`The field \"${field.label}\" is required.`);\n    }\n\n    // Check for number fields with min and max values\n    if (field.format === 'number') {\n      if (field.min !== undefined && value < field.min) {\n        errors.push(`The value for \"${field.label}\" should not be less than ${field.min}.`);\n      }\n      if (field.max !== undefined && value > field.max) {\n        errors.push(`The value for \"${field.label}\" should not exceed ${field.max}.`);\n      }\n    }\n  }\n\n  return errors;\n};\n\n\n/**\n * Creates a new curation document in the Firestore 'curations' collection with the provided data.\n * @param {Object} curationData - The data to create a new curation document.\n * @param {Object} config - The configuration object against which to validate.\n * @param {string} userId - The user ID of the user creating the curation.\n * @returns {Promise<string>} A promise that resolves to the new document's ID.\n */\nexport const createCuration = async (curationData, userId, config) => {\n  const errors = validateCurationData(curationData, config);\n  if (errors.length > 0) {\n    throw new Error(`Validation failed: ${errors.join(' ')}`);\n  }\n\n  // Check for existing curation\n  const exists = await checkForExistingCuration({\n    approvedSymbol: curationData.approved_symbol,\n    disease: curationData.disease,\n    inheritance: curationData.inheritance\n  });\n  \n  if (exists) {\n    throw new Error(\"A curation with the same symbol, disease, and inheritance already exists.\");\n  }\n\n  const docId = doc(collection(db, 'curations'));\n\n  await setDoc(docId, {\n    ...curationData,\n    users: [userId],\n    createdAt: Timestamp.fromDate(new Date()),\n    updatedAt: Timestamp.fromDate(new Date()),\n    id: docId.id,\n  });\n\n  return docId.id;\n};\n\n\n/**\n * Retrieves a specific curation document from Firestore using the document ID.\n * @param {string} docId - The document ID of the curation to retrieve.\n * @returns {Promise<Object>} A promise that resolves to an object containing the curation data, if found.\n * @throws {Error} If the document does not exist.\n */\nexport const getCuration = async (docId) => {\n  const curationRef = doc(db, 'curations', docId);\n  const docSnap = await getDoc(curationRef);\n\n  if (docSnap.exists()) {\n    return { id: docSnap.id, ...docSnap.data() };\n  } else {\n    throw new Error(\"Curation document not found\");\n  }\n};\n\n\n/**\n * Updates a specific curation document in Firestore with the provided data.\n * @param {string} docId - The document ID of the curation to update.\n * @param {Object} updatedData - An object containing the updated data for the curation.\n * @param {string} userId - The user ID of the user performing the update.\n * @param {Object} config - The configuration object against which to validate.\n * @returns {Promise<void>} A promise that resolves once the update is complete.\n */\nexport const updateCuration = async (docId, updatedData, userId, config) => {\n  const errors = validateCurationData(updatedData, config);\n  if (errors.length > 0) {\n    throw new Error(`Validation failed: ${errors.join(' ')}`);\n  }\n\n  const curationRef = doc(db, 'curations', docId);\n  const docSnap = await getDoc(curationRef);\n\n  if (!docSnap.exists()) {\n    throw new Error(\"Curation document not found\");\n  }\n\n  const existingData = docSnap.data();\n  const updatedUsers = updateUsersArray(existingData.users || [], userId);\n\n  await updateDoc(curationRef, {\n    ...updatedData,\n    users: updatedUsers,\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n};\n\n\n/**\n * Deletes a specific curation document from Firestore using the document ID.\n * @param {string} docId - The document ID of the curation to delete.\n * @returns {Promise<void>} A promise that resolves once the document is deleted.\n * @throws {Error} If the document does not exist or cannot be deleted.\n */\nexport const deleteCuration = async (docId) => {\n  const curationRef = doc(db, 'curations', docId);\n  await deleteDoc(curationRef);\n};\n\n\n/**\n * Retrieves a curation document from Firestore by either the approved symbol or HGNC ID.\n * @param {string} identifier - The approved symbol or HGNC ID to search for.\n * @returns {Promise<Object|null>} A promise that resolves to an object containing the curation data if found, otherwise null.\n */\nexport const getCurationByHGNCIdOrSymbol = async (identifier) => {\n    const curationsRef = collection(db, 'curations');\n    const symbolQuery = query(curationsRef, where(\"approved_symbol\", \"==\", identifier));\n    const hgncQuery = query(curationsRef, where(\"hgnc_id\", \"==\", identifier));\n  \n    const symbolSnapshot = await getDocs(symbolQuery);\n    let curationData = null;\n  \n    symbolSnapshot.forEach((doc) => {\n      if (doc.exists()) {\n        curationData = { id: doc.id, ...doc.data() };\n      }\n    });\n  \n    if (!curationData) {\n      const hgncSnapshot = await getDocs(hgncQuery);\n      hgncSnapshot.forEach((doc) => {\n        if (doc.exists()) {\n          curationData = { id: doc.id, ...doc.data() };\n        }\n      });\n    }\n  \n    return curationData;\n  };\n\n  \n  /**\n * Retrieves all curation documents from Firestore by either the approved symbol or HGNC ID.\n * @param {string} identifier - The approved symbol or HGNC ID to search for.\n * @returns {Promise<Array>} A promise that resolves to an array of objects containing the curation data if found, otherwise an empty array.\n */\nexport const getCurationsByHGNCIdOrSymbol = async (identifier) => {\n  const curationsRef = collection(db, 'curations');\n  const symbolQuery = query(curationsRef, where(\"approved_symbol\", \"==\", identifier));\n  const hgncQuery = query(curationsRef, where(\"hgnc_id\", \"==\", identifier));\n\n  let curationDataArray = [];\n\n  const addToCurationDataArray = (docSnapshot) => {\n    if (docSnapshot.exists()) {\n      curationDataArray.push({ id: docSnapshot.id, ...docSnapshot.data() });\n    }\n  };\n\n  const symbolSnapshot = await getDocs(symbolQuery);\n  symbolSnapshot.forEach(addToCurationDataArray);\n\n  if (curationDataArray.length === 0) {\n    const hgncSnapshot = await getDocs(hgncQuery);\n    hgncSnapshot.forEach(addToCurationDataArray);\n  }\n\n  return curationDataArray;\n};\n\n\n/**\n * Updates the users array with the given userId, maintaining order and uniqueness.\n * @param {Array} usersArray - The current array of user IDs.\n * @param {string} userId - The ID of the user to add or move in the array.\n * @returns {Array} The updated array of user IDs.\n */\nconst updateUsersArray = (usersArray, userId) => {\n  const newUsersArray = usersArray.filter(id => id !== userId);\n  newUsersArray.push(userId); // Add the userId at the end\n  return newUsersArray;\n};\n\n\n/**\n * Checks if a curation with the given parameters already exists.\n * @param {Object} params - Parameters to check for existing curation.\n * @returns {Promise<boolean>} - Returns true if curation exists, false otherwise.\n */\nconst checkForExistingCuration = async ({ approvedSymbol, disease, inheritance }) => {\n  const curationsRef = collection(db, 'curations');\n  const q = query(curationsRef, where(\"approved_symbol\", \"==\", approvedSymbol), where(\"disease\", \"==\", disease), where(\"inheritance\", \"==\", inheritance));\n\n  const querySnapshot = await getDocs(q);\n  return !querySnapshot.empty;\n};\n","// stores/precurationsStore.js\nimport { collection, getDocs, getDoc, setDoc, doc, updateDoc, deleteDoc, Timestamp, query, where } from 'firebase/firestore';\nimport { db } from '@/firebase';\n\n\n/**\n * Validates the given precuration data against the precuration details configuration.\n * @param {Object} precurationData - The data to validate.\n * @returns {Array} An array of error messages, empty if no errors.\n */\nconst validatePrecurationData = (precurationData, config) => {\n  const errors = [];\n  for (const [key, field] of Object.entries(config)) {\n    const value = precurationData[key];\n    \n    // Check for required fields\n    if (field.required && (value === undefined || value === '')) {\n      errors.push(`The field \"${field.label}\" is required.`);\n    }\n\n    // Check for number fields with min and max values\n    if (field.format === 'number') {\n      if (field.min !== undefined && value < field.min) {\n        errors.push(`The value for \"${field.label}\" should not be less than ${field.min}.`);\n      }\n      if (field.max !== undefined && value > field.max) {\n        errors.push(`The value for \"${field.label}\" should not exceed ${field.max}.`);\n      }\n    }\n  }\n\n  return errors;\n};\n\n\n/**\n * Fetches all precuration documents from the Firestore collection.\n * @returns {Promise<Object>} An object mapping document IDs to precuration data.\n */\nexport const getPrecurations = async () => {\n  const querySnapshot = await getDocs(collection(db, 'precurations'));\n  let precurations = {};\n\n  querySnapshot.forEach((docSnapshot) => {\n    if (docSnapshot.exists()) {\n      // Include the document ID in the returned object\n      precurations[docSnapshot.id] = { id: docSnapshot.id, ...docSnapshot.data() };\n    } else {\n      throw new Error(\"Precuration document not found\");\n    }\n  });\n\n  return precurations;\n};\n\n\n/**\n * Creates a new precuration document in Firestore with the given data.\n * @param {Object} precurationData - The data for the new precuration.\n * @param {string} userId - The ID of the user creating the precuration.\n * @param {Object} config - The precuration details configuration.\n * @returns {Promise<string>} The ID of the newly created document.\n */\nexport const createPrecuration = async (precurationData, userId, config) => {\n  const validationErrors = validatePrecurationData(precurationData, config);\n  if (validationErrors.length > 0) {\n    throw new Error(`Validation failed: ${validationErrors.join(' ')}`);\n  }\n\n  const docId = doc(collection(db, 'precurations'));\n\n  await setDoc(docId, {\n    ...precurationData,\n    users: [userId], // Initialize with the creating user\n    createdAt: Timestamp.fromDate(new Date()),\n    updatedAt: Timestamp.fromDate(new Date()),\n    id: docId.id,\n  });\n\n  return docId.id;\n};\n\n\n/**\n * Retrieves a specific precuration document from Firestore by its document ID.\n * @param {string} docId - The document ID of the precuration to retrieve.\n * @returns {Promise<Object>} An object containing the precuration data.\n * @throws {Error} If the document is not found.\n */\nexport const getPrecuration = async (docId) => {\n  const precurationRef = doc(db, 'precurations', docId);\n  const docSnap = await getDoc(precurationRef);\n\n  if (docSnap.exists()) {\n    return { id: docSnap.id, ...docSnap.data() };\n  } else {\n    throw new Error(\"Precuration document not found\");\n  }\n};\n\n\n/**\n * Retrieves a specific precuration document from Firestore by either the approved symbol or HGNC ID.\n * @param {string} identifier - The approved symbol or HGNC ID to search for.\n * @returns {Promise<Object|null>} An object containing the precuration data if found, otherwise null.\n */\nexport const getPrecurationByHGNCIdOrSymbol = async (identifier) => {\n  const precurationsRef = collection(db, 'precurations');\n  const symbolQuery = query(precurationsRef, where(\"approved_symbol\", \"==\", identifier));\n  const hgncQuery = query(precurationsRef, where(\"hgnc_id\", \"==\", identifier));\n\n  const symbolSnapshot = await getDocs(symbolQuery);\n  const hgncSnapshot = await getDocs(hgncQuery);\n\n  let precurationData = null;\n  symbolSnapshot.forEach((doc) => {\n    if (doc.exists()) {\n      precurationData = { id: doc.id, ...doc.data() };\n    }\n  });\n\n  if (!precurationData) {\n    hgncSnapshot.forEach((doc) => {\n      if (doc.exists()) {\n        precurationData = { id: doc.id, ...doc.data() };\n      }\n    });\n  }\n\n  return precurationData;\n};\n\n\n/**\n * Updates a precuration document in Firestore with the given data.\n * @param {string} docId - The document ID of the precuration to update.\n * @param {Object} updatedData - An object containing the updated data.\n * @param {string} userId - The ID of the user updating the precuration.\n * @param {Object} config - The precuration details configuration.\n * @returns {Promise<void>}\n */\nexport const updatePrecuration = async (docId, updatedData, userId, config) => {\n  const validationErrors = validatePrecurationData(updatedData, config);\n  if (validationErrors.length > 0) {\n    throw new Error(`Validation failed: ${validationErrors.join(' ')}`);\n  }\n\n  const precurationRef = doc(db, 'precurations', docId);\n  const docSnap = await getDoc(precurationRef);\n\n  if (!docSnap.exists()) {\n    throw new Error(\"Precuration document not found\");\n  }\n\n  const existingData = docSnap.data();\n  const updatedUsers = updateUsersArray(existingData.users || [], userId);\n\n  await updateDoc(precurationRef, {\n    ...updatedData,\n    users: updatedUsers,\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n};\n\n\n/**\n * Deletes a specific precuration document from Firestore by its document ID.\n * @param {string} docId - The document ID of the precuration to delete.\n * @returns {Promise<void>}\n * @throws {Error} If the document is not found or cannot be deleted.\n */\nexport const deletePrecuration = async (docId) => {\n  const precurationRef = doc(db, 'precurations', docId);\n  await deleteDoc(precurationRef);\n};\n\n\n/**\n * Updates the users array with the given userId, maintaining order and uniqueness.\n * @param {Array} usersArray - The current array of user IDs.\n * @param {string} userId - The ID of the user to add or move in the array.\n * @returns {Array} The updated array of user IDs.\n */\nconst updateUsersArray = (usersArray, userId) => {\n  const newUsersArray = usersArray.filter(id => id !== userId);\n  newUsersArray.push(userId); // Add the userId at the end\n  return newUsersArray;\n};\n","<!-- components/CurationModal.vue -->\n<template>\n  <v-dialog v-model=\"isOpen\" persistent max-width=\"1200px\">\n    <v-card>\n      <div class=\"d-flex justify-space-between align-center\">\n        <v-card-title>\n          {{ title }} - {{ editedItem.approved_symbol }} - HGNC:{{ editedItem.hgnc_id }}\n          <GeneLinkChips\n            :hgnc-id=\"editedItem.hgnc_id\"\n            :gene-symbol=\"editedItem.approved_symbol\"\n            :links-to-show=\"['clingen', 'gencc', 'search_omim']\"\n          />\n        </v-card-title>\n        <v-btn icon @click=\"close\">\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n      </div>\n      <v-card-text>\n        <v-tabs v-model=\"tab\" grow>\n          <v-tab v-if=\"showPreCurationTab\">Pre-Curation</v-tab>\n          <v-tab v-if=\"showCurationTab\">Curation</v-tab>\n        </v-tabs>\n\n         <v-window v-model=\"tab\" style=\"min-height: 300px;\">\n          <v-window-item>\n            <!-- Gene Detail Card Component -->\n            <GeneDetailCard\n               v-if=\"showGeneDetailCard\"\n              :id=\"editedItem.hgnc_id\"\n              visibilityScope=\"curationView\"\n              :showTitle=\"false\"\n              @gene-data-loaded=\"handleGeneDataLoaded\"\n            />\n\n            <!-- Precuration Form Component -->\n            <PrecurationForm\n              v-if=\"geneData\"\n              :gene-object=\"geneData\"\n              @precuration-accepted=\"handlePrecurationAccepted\"\n            />\n          </v-window-item>\n\n          <v-window-item v-if=\"showCurationTab\">\n            <!-- CurationForm Component -->\n            <CurationForm\n              :approvedSymbol=\"editedItem.approved_symbol\"\n              :hgncId=\"editedItem.hgnc_id\"\n              :precurationDetails=\"precurationDetails\"\n            />\n          </v-window-item>\n        </v-window>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"blue darken-1\" text @click=\"close\">Cancel</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n\n  <MessageSnackbar\n    v-model=\"snackbarVisible\"\n    :title=\"snackbarTitle\"\n    :message=\"snackbarMessage\"\n    :color=\"snackbarColor\"\n  />\n\n</template>\n\n\n<script>\nimport { ref, watchEffect, watch, computed } from 'vue';\nimport GeneDetailCard from './GeneDetailCard.vue';\nimport PrecurationForm from './PrecurationForm.vue';\nimport CurationForm from './CurationForm.vue'; // Import the CurationForm component\nimport { getPrecurationByHGNCIdOrSymbol } from '@/stores/precurationsStore';\nimport GeneLinkChips from './GeneLinkChips.vue'; // Import the GeneLinkChips component\n\nexport default {\n  components: {\n    GeneDetailCard,\n    PrecurationForm,\n    CurationForm,\n    GeneLinkChips\n  },\n  props: {\n    item: {\n      type: Object,\n      required: true,\n    },\n    open: {\n      type: Boolean,\n      required: true,\n    },\n    context: {\n      type: String,\n      default: 'gene' // Default context, can be 'gene', 'precuration', or 'curation'\n    },\n  },\n  emits: ['close'],\n  setup(props, { emit }) {\n    const isOpen = ref(props.open);\n    const editedItem = ref({ ...props.item });\n    const showGeneDetailCard = ref(true); // Controls the visibility of the gene detail card\n    const showPreCurationTab = ref(true); // Controls the visibility of the precuration tab\n    const showCurationTab = ref(false); // Controls the visibility of the curation tab\n    const tab = ref(0); // Controls the active tab\n\n    const snackbarVisible = ref(false);\n    const snackbarMessage = ref('');\n    const snackbarTitle = ref(''); // Add title state\n    const snackbarColor = ref('success');\n\n    const showSnackbar = (title, message, color = 'success') => {\n      snackbarTitle.value = title; // Set title\n      snackbarMessage.value = message;\n      snackbarColor.value = color;\n      snackbarVisible.value = true;\n    };\n\n    watchEffect(() => {\n      isOpen.value = props.open;\n      editedItem.value = { ...props.item };\n    });\n\n    const precurationDetails = ref(null);\n\n    const handlePrecurationAccepted = (precurationData) => {\n      if (props.context === 'precuration') {\n        close();\n      } else {\n        // Capture the precuration data\n        precurationDetails.value = precurationData;\n        showCurationTab.value = true;\n        tab.value = 1;\n      }\n    };\n\n    // Emit the 'close' event when the close method is called\n    // also reset the geneData\n    // and set the precurationDetails to null\n    const close = () => {\n      emit('close');\n      geneData.value = null;\n      precurationDetails.value = null;\n    };\n\n    const checkExistingCuration = async () => {\n      try {\n        const existingCuration = await getPrecurationByHGNCIdOrSymbol(editedItem.value.hgnc_id || editedItem.value.approved_symbol);\n        if (existingCuration) {\n          precurationDetails.value = existingCuration;\n          showCurationTab.value = true;\n          tab.value = 1; // Open Curation tab if curation exists\n        } else {\n          showCurationTab.value = false;\n          tab.value = 0; // Open Precuration tab if curation does not exist\n        }\n      } catch (error) {\n        showSnackbar(\"Error checking existing curation: \" + error.message, 'error');\n      }\n    };\n\n    // State to store fetched gene data\n    const geneData = ref(null); // State to store fetched gene data\n\n    const handleGeneDataLoaded = (data) => {\n      geneData.value = data; // Store the fetched gene data\n    };\n\n    // Computed property to determine the title of the modal\n    const title = computed(() => {\n      return props.context === 'curation' ? 'Curation' \n        : props.context === 'precuration' ? 'Precuration' \n        : 'Gene Curation';\n    });\n\n    // Watch for changes to the 'open' prop\n    watch(() => props.open, async (newVal) => {\n      if (newVal) { // If the modal is being opened\n        await initializeModal();\n      }\n    });\n\n    // Adjust the initial tab and content based on the context and existing curation\n    const initializeModal = async () => {\n      if (props.context === 'precuration') {\n        showGeneDetailCard.value = false;\n        showPreCurationTab.value = true;\n        showCurationTab.value = false;\n        tab.value = 0;\n      } else if (props.context === 'curation') {\n        showGeneDetailCard.value = false;\n        showPreCurationTab.value = false;\n        await checkExistingCuration(); // Check if there's an existing curation\n        // Set tab based on the existence of curation\n        tab.value = showCurationTab.value ? 1 : 0;\n      } else {\n        // For 'gene' context or other cases\n        await checkExistingCuration();\n      }\n    };\n\n    // Call initializeModal when the modal is opened\n    watch(() => props.open, (newVal) => {\n      if (newVal) {\n        initializeModal();\n      }\n    });\n\n    return {\n      initializeModal,\n      isOpen,\n      editedItem,\n      close,\n      handlePrecurationAccepted,\n      showGeneDetailCard,\n      showPreCurationTab,\n      showCurationTab,\n      tab,\n      showSnackbar,\n      snackbarVisible,\n      snackbarMessage,\n      snackbarTitle,\n      snackbarColor,\n      title,\n      handleGeneDataLoaded,\n      geneData,\n      precurationDetails\n    };\n  },\n};\n</script>\n\n\n<style scoped>\n/* Add styles if needed */\n</style>\n","<!-- components/PrecurationForm.vue -->\n<template>\n  <v-card class=\"elevation-2\">\n    <v-card-title>\n      Precuration\n      <HelpIcon :helpContent=\"helpContent\" />\n    </v-card-title>\n    <v-card-text>\n      <v-container>\n        <!-- Group the fields by the group attribute -->\n        <template v-for=\"(group, groupName) in groupedFields\" :key=\"groupName\">\n          <v-row v-if=\"groupHasVisibleFields(group)\">\n            <v-col cols=\"12\">\n              <h2>{{ groupName }}</h2>\n            </v-col>\n            <!-- Loop over fields within the same group and place them in columns -->\n            <v-col \n              v-for=\"(field, index) in group\" \n              :key=\"index\" \n              :cols=\"12 / group.length\"\n            >\n              <template v-if=\"field.format === 'boolean' && field.visibility.curationView\">\n                <v-switch\n                  v-model=\"precurationData[field.key]\"\n                  :label=\"field.label\"\n                  :false-value=\"false\"\n                  :true-value=\"true\"\n                  :color=\"field.style.curationView === 'switch' ? field.style.color : ''\"\n                  :class=\"{ 'inactive-switch': !precurationData[field.key] && field.style.curationView === 'switch' }\"\n                ></v-switch>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <template v-else-if=\"field.style && field.style.curationView === 'text-field' && field.visibility.curationView\">\n                <v-text-field\n                  v-model=\"precurationData[field.key]\"\n                  :label=\"field.label\"\n                  :class=\"field.style.curationView === 'text-field' ? 'custom-text-field' : ''\"\n                ></v-text-field>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <template v-else-if=\"field.style && field.style.curationView === 'select' && field.visibility.curationView\">\n                <v-select\n                  v-model=\"precurationData[field.key]\"\n                  :items=\"field.options\"\n                  :label=\"field.label\"\n                  :class=\"{\n                    'prefilled-field': decisionPrefilled && field.key === 'decision',\n                    'manually-changed-field': decisionManuallyChanged && field.key === 'decision'\n                  }\"\n                ></v-select>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <!-- Add other field types as needed -->\n            </v-col>\n          </v-row>\n        </template>\n        <v-row>\n          <v-col cols=\"12\" class=\"text-right\">\n            <v-btn color=\"primary\" @click=\"submitPrecuration\">Accept</v-btn>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-card-text>\n  </v-card>\n\n  <!-- message snackbar component -->\n  <MessageSnackbar\n    v-model=\"snackbarVisible\"\n    :title=\"snackbarTitle\"\n    :message=\"snackbarMessage\"\n    :color=\"snackbarColor\"\n  />\n</template>\n\n\n<script>\nimport { geneDetailsConfig, precurationDetailsConfig, workflowConfig, workflowConfigVersion, workflowConfigName } from '@/config/workflows/KidneyGeneticsGeneCuration/workflowConfig';\nimport {\n  getPrecurationByHGNCIdOrSymbol,\n  createPrecuration,\n  updatePrecuration\n} from \"@/stores/precurationsStore\";\nimport { updateGeneCurationStatus } from '@/stores/geneStore';\nimport HelpIcon from './HelpIcon.vue';\n\nexport default {\n  name: 'PrecurationForm',\n  props: {\n    geneObject: Object,\n  },\n  emits: ['precuration-accepted'],\n  components: {\n    HelpIcon,\n  },\n  data() {\n    return {\n      precurationData: this.initializePrecurationData(),\n      existingPrecurationId: null,\n      decisionPrefilled: false,\n      decisionManuallyChanged: false,\n      snackbarVisible: false,\n      snackbarMessage: '',\n      snackbarTitle: '',\n      snackbarColor: 'success',\n      helpContent: workflowConfig.stages.precuration.helpConfig,\n    };\n  },\n  computed: {\n    groupedFields() {\n      const fields = this.precurationFields;\n      const groups = {};\n\n      // Group fields by their 'group.name'\n      fields.forEach(field => {\n        if (!groups[field.group.name]) {\n          groups[field.group.name] = [];\n        }\n        groups[field.group.name].push(field);\n      });\n\n      // Sort groups by 'group.order'\n      Object.values(groups).forEach(group => {\n        group.sort((a, b) => a.group.order - b.group.order);\n      });\n\n      return groups;\n    },\n    precurationFields() {\n      let fields = Object.entries(precurationDetailsConfig)\n        .map(([key, config]) => ({ ...config, key }));\n      return fields;\n    },\n  },\n  watch: {\n    precurationData: {\n      deep: true,\n      handler() {\n        this.applyDecisionRules();\n      }\n    },\n    'precurationData.decision': 'onDecisionChange',\n  },\n  methods: {\n    showSnackbar(title, message, color = 'success') {\n      this.snackbarTitle = title;\n      this.snackbarMessage = message;\n      this.snackbarColor = color;\n      this.snackbarVisible = true;\n    },\n    applyDecisionRules() {\n      const decisionRule = workflowConfig.stages.precuration.decisionRules[0];\n      let trueCount = decisionRule.conditions.reduce((count, condition) => \n        this.precurationData[condition] ? count + 1 : count, 0);\n\n      if (trueCount >= decisionRule.threshold) {\n        // Apply prefilled decision only if the current decision matches the computed decision or is empty\n        if (this.precurationData.decision === decisionRule.decision || !this.precurationData.decision) {\n          this.precurationData.decision = decisionRule.decision;\n          this.decisionPrefilled = true;\n          this.decisionManuallyChanged = false;\n        }\n      } else {\n        // If conditions are not met and the decision was prefilled, reset the decision prefilled status\n        if (this.decisionPrefilled) {\n          this.decisionPrefilled = false;\n        }\n      }\n    },\n    onDecisionChange(newValue) {\n      const decisionRule = workflowConfig.stages.precuration.decisionRules[0];\n      let trueCount = decisionRule.conditions.reduce((count, condition) => \n        this.precurationData[condition] ? count + 1 : count, 0);\n\n      const computedDecision = trueCount >= decisionRule.threshold ? decisionRule.decision : '';\n\n      this.decisionManuallyChanged = newValue !== computedDecision;\n\n      if (this.decisionManuallyChanged) {\n        this.updateCommentField(\"Decision manually overridden.\");\n      } else {\n        this.removeCommentOverride();\n      }\n    },\n    updateCommentField(overrideMessage) {\n      if (!this.precurationData.comment.includes(overrideMessage)) {\n        this.precurationData.comment += (this.precurationData.comment ? \" \" : \"\") + overrideMessage;\n      }\n    },\n    removeCommentOverride() {\n      const overrideMessage = \"Decision manually overridden.\";\n      if (this.precurationData.comment.includes(overrideMessage)) {\n        this.precurationData.comment = this.precurationData.comment.replace(overrideMessage, \"\").trim();\n      }\n    },\n    groupHasVisibleFields(group) {\n      // This will check if there's at least one field in the group that should be visible\n      return group.some(field => field.visibility.curationView);\n    },\n    initializePrecurationData() {\n      const data = {};\n      Object.keys(precurationDetailsConfig).forEach(key => {\n        if (this.geneObject && key in this.geneObject) {\n          data[key] = this.geneObject[key];\n        } else {\n          data[key] = precurationDetailsConfig[key].format === 'boolean' ? false : '';\n        }\n      });\n\n      // Handling geneDetails as a nested object with the gene document ID as key\n      if (this.geneObject && this.geneObject.docId) {\n        const geneDocId = this.geneObject.docId;\n        const geneDetails = {};\n\n        // Populate geneDetails with relevant information from geneObject\n        Object.keys(geneDetailsConfig).forEach(detailKey => {\n          if (detailKey in this.geneObject) {\n            geneDetails[detailKey] = this.geneObject[detailKey];\n          }\n        });\n\n        // Set geneDetails with geneDocId as key\n        data['geneDetails'] = { [geneDocId]: geneDetails };\n      }\n\n      return data;\n    },\n    validatePrecurationData(precurationData) {\n      const errors = [];\n      for (const [key, field] of Object.entries(precurationDetailsConfig)) {\n        if (field.required && (precurationData[key] === undefined || precurationData[key] === '')) {\n          errors.push(`The field \"${field.label}\" is required.`);\n        }\n      }\n      return errors;\n    },\n    async submitPrecuration() {\n      const currentUserId = JSON.parse(localStorage.getItem('user')).uid;\n\n      try {\n        // Validate the precuration data\n        const validationErrors = this.validatePrecurationData(this.precurationData, precurationDetailsConfig);\n        if (validationErrors.length > 0) {\n          throw new Error(`Validation failed: ${validationErrors.join(' ')}`);\n        }\n\n        // Add timestamps for creation or update\n        const currentTime = new Date().toISOString();\n        let docId;\n        if (!this.existingPrecurationId) {\n          // If creating a new precuration\n          this.precurationData.createdAt = currentTime;\n          this.precurationData.workflowConfigVersionUsed = workflowConfigVersion;\n          this.precurationData.workflowConfigNameUsed = workflowConfigName;\n          docId = await createPrecuration(this.precurationData, currentUserId, precurationDetailsConfig);\n          this.showSnackbar('Success', 'New precuration created with ID:' + docId, 'success');\n        } else {\n          // If updating an existing precuration\n          this.precurationData.updatedAt = currentTime;\n          await updatePrecuration(this.existingPrecurationId, this.precurationData, currentUserId, precurationDetailsConfig);\n          docId = this.existingPrecurationId;\n          this.showSnackbar('Success', 'Precuration updated' + this.existingPrecurationId, 'success');\n        }\n\n        // Update gene curation status in the gene record\n        if (this.geneObject && this.geneObject.docId) {\n          await updateGeneCurationStatus(this.geneObject.docId, {\n            hasPrecuration: docId, // Provide the docId of the new or updated precuration\n            precuratedBy: currentUserId // Provide the userId as an array\n          });\n        }\n\n        // Emit an event to indicate successful submission, including the docId\n        this.$emit('precuration-accepted', { docId, ...this.precurationData });\n      } catch (error) {\n        this.showSnackbar('Error', error.message || \"There was an error submitting the precuration\", 'error');\n      }\n    },\n    displaySwitchValue(value) {\n      return value ? 'Yes' : 'No';\n    },\n  },\n  async created() {\n    // Ensure geneObject is available and has the necessary properties\n    if (this.geneObject && (this.geneObject.approved_symbol || this.geneObject.hgnc_id)) {\n      try {\n        // Use geneObject's approved_symbol or hgnc_id for the query\n        const identifier = this.geneObject.approved_symbol || this.geneObject.hgnc_id;\n        const precuration = await getPrecurationByHGNCIdOrSymbol(identifier);\n\n        if (precuration) {\n          this.existingPrecurationId = precuration.id;\n          Object.assign(this.precurationData, precuration);\n        }\n      } catch (error) {\n        this.showSnackbar('Error', 'Error fetching precuration: ' + error.message, 'error');\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Custom styles for text fields */\n.text-center {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n/* Custom styles for text fields */\n.inactive-switch {\n  --v-theme-switch-on-background: var(--v-theme-inactive-color);\n}\n\n/* Style for prefilled fields */\n.prefilled-field {\n  border: 2px solid orange; /* Orange border for prefilled fields */\n  /* Other styles as needed */\n}\n\n/* Style for manually changed fields */\n.manually-changed-field {\n  border: 2px solid purple; /* Purple border for manually changed fields */\n  /* Other styles as needed */\n}\n/* Additional styles can be added here if needed */\n</style>\n","import { render } from \"./PrecurationForm.vue?vue&type=template&id=697bd6de&scoped=true\"\nimport script from \"./PrecurationForm.vue?vue&type=script&lang=js\"\nexport * from \"./PrecurationForm.vue?vue&type=script&lang=js\"\n\nimport \"./PrecurationForm.vue?vue&type=style&index=0&id=697bd6de&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-697bd6de\"]])\n\nexport default __exports__","<!-- components/CurationForm.vue -->\n<template>\n  <v-card class=\"elevation-2\">\n    <v-card-title>\n      Curation\n      <HelpIcon :helpContent=\"helpContent\" />\n      <v-btn icon class=\"add-curation-btn\" @click=\"addCurationEntity\">\n        <v-icon>mdi-plus</v-icon>\n      </v-btn>\n    </v-card-title>\n\n    <!-- Expansion Panels for multiple curation entities -->\n    <v-expansion-panels multiple>\n      <v-expansion-panel v-for=\"(curationData, index) in curationDataArray\" :key=\"`curation-${index}`\" :title=\"`Curation Entity ${ index + 1 }`\">\n          <v-expansion-panel-text>\n            <!-- Dynamic Field Rendering Based on Configuration -->\n            <template v-for=\"(group, groupName) in groupedFields\" :key=\"groupName\">\n              <v-row v-if=\"groupHasVisibleFields(group)\">\n                <v-col cols=\"12\">\n                  <h2>{{ groupName }}</h2>\n                </v-col>\n                <v-col\n                  v-for=\"(field, fieldIndex) in group\"\n                  :key=\"`field-${index}-${fieldIndex}`\"\n                  :cols=\"12 / group.length\"\n                >\n\n                  <!-- Handle Different Field Types -->\n                  <template v-if=\"field.format === 'text' && field.style && field.style.curationView === 'text-field'\">\n                    <v-text-field\n                      v-model=\"curationData[field.key]\"\n                      :rules=\"getFieldRules(field)\"\n                      :label=\"field.label\"\n                      outlined\n                      dense\n                    ></v-text-field>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <template v-else-if=\"field.format === 'boolean'\">\n                    <v-checkbox\n                      v-model=\"curationData[field.key]\"\n                      :rules=\"getFieldRules(field)\"\n                      :label=\"field.label\"\n                    ></v-checkbox>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <template v-else-if=\"field.format === 'number'\">\n                    <v-text-field\n                      v-model=\"curationData[field.key]\"\n                      :rules=\"getFieldRules(field)\"\n                      :label=\"field.label\"\n                      :min=\"field.min\"\n                      :max=\"field.max\"\n                      :step=\"field.step || 1\"\n                      type=\"number\"\n                      outlined\n                      dense\n                    ></v-text-field>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <template v-else-if=\"field.format === 'array' && field.style && field.style.curationView === 'select'\">\n                    <v-select\n                      v-model=\"curationData[field.key]\"\n                      :rules=\"getFieldRules(field)\"\n                      :items=\"field.options\"\n                      :label=\"field.label\"\n                      multiple\n                      outlined\n                      dense\n                    ></v-select>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <template v-else-if=\"field.format === 'text' && field.style && field.style.curationView === 'select'\">\n                    <v-select\n                      v-model=\"curationData[field.key]\"\n                      :items=\"field.options\"\n                      item-value=\"value\"\n                      item-text=\"title\"\n                      :label=\"field.label\"\n                      outlined\n                      dense\n                    ></v-select>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <!-- Add other field types as needed -->\n                </v-col>\n              </v-row>\n            </template>\n          </v-expansion-panel-text>\n      </v-expansion-panel>\n    </v-expansion-panels>\n\n    <v-card-actions>\n      <v-spacer></v-spacer>\n      <v-btn color=\"primary\" @click=\"saveCuration\">Save All</v-btn>\n    </v-card-actions>\n  </v-card>\n\n  <!-- message snackbar component -->\n  <MessageSnackbar\n    v-model=\"snackbarVisible\"\n    :title=\"snackbarTitle\"\n    :message=\"snackbarMessage\"\n    :color=\"snackbarColor\"\n  />\n</template>\n\n\n<script>\nimport { curationDetailsConfig, workflowConfig, workflowConfigVersion, workflowConfigName } from '@/config/workflows/KidneyGeneticsGeneCuration/workflowConfig';\nimport {\n  createCuration,\n  updateCuration,\n  getCurationsByHGNCIdOrSymbol\n} from \"@/stores/curationsStore\";\nimport { required, number, min, max } from '@/utils/validators';\nimport { updateGeneCurationStatus, getGeneByHGNCIdOrSymbol } from '@/stores/geneStore';\nimport HelpIcon from './HelpIcon.vue';\n\nexport default {\n  name: 'CurationForm',\n  props: {\n    approvedSymbol: String,\n    hgncId: String,\n    precurationDetails: Object,\n  },\n  components: {\n    HelpIcon,\n  },\n  data() {\n    return {\n      curationDataArray: [this.initializeCurationData()],\n      existingCurationId: null,\n      snackbarVisible: false,\n      snackbarMessage: '',\n      snackbarTitle: '',\n      snackbarColor: 'success',\n      helpContent: workflowConfig.stages.curation.helpConfig,\n    };\n  },\n  async created() {\n    if (this.hgncId || this.approvedSymbol) {\n      try {\n        const curations = await getCurationsByHGNCIdOrSymbol(this.hgncId || this.approvedSymbol);\n        if (curations.length > 0) {\n          this.curationDataArray = curations.map(curation => Object.assign(this.initializeCurationData(), curation));\n        } else {\n          this.curationDataArray = [this.initializeCurationData()];\n        }\n      } catch (error) {\n        this.showSnackbar('Error', `Error fetching curations: ${error.message}`, 'error');\n      }\n    } else {\n      this.curationDataArray = [this.initializeCurationData()];\n    }\n  },\n  computed: {\n    groupedFields() {\n      const fields = Object.entries(curationDetailsConfig)\n        .map(([key, config]) => ({ ...config, key }));\n      \n      const groups = {};\n      fields.forEach(field => {\n        if (!groups[field.group.name]) {\n          groups[field.group.name] = [];\n        }\n        groups[field.group.name].push(field);\n      });\n\n      Object.values(groups).forEach(group => {\n        group.sort((a, b) => a.group.order - b.group.order);\n      });\n\n      return groups;\n    },\n  },\n  methods: {\n    getFieldRules(field) {\n      const rules = [];\n      if (field.required) {\n        rules.push(required);\n      }\n      if (field.format === 'number') {\n        rules.push(number);\n        if (field.min !== undefined) {\n          rules.push(min(field.min));\n        }\n        if (field.max !== undefined) {\n          rules.push(max(field.max));\n        }\n      }\n      return rules;\n    }\n    ,\n    showSnackbar(title, message, color = 'success') {\n      this.snackbarTitle = title;\n      this.snackbarMessage = message;\n      this.snackbarColor = color;\n      this.snackbarVisible = true;\n    },\n    groupHasVisibleFields(group) {\n      // This will check if there's at least one field in the group that should be visible\n      return group.some(field => field.visibility.curationView);\n    },\n    addCurationEntity() {\n      this.curationDataArray.push(this.initializeCurationData());\n    },\n    initializeCurationData() {\n      const data = {};\n      Object.keys(curationDetailsConfig).forEach(key => {\n        const field = curationDetailsConfig[key];\n        if (field.format === 'boolean') {\n          data[key] = false;\n        } else if (field.format === 'number') {\n          data[key] = field.min || 0; // Use min value if defined, otherwise default to 0\n        } else if (field.format === 'array' && field.style && field.style.curationView === 'select') {\n          data[key] = [];\n        } else if (field.format === 'text' && field.style && field.style.curationView === 'select') {\n          data[key] = null;\n        } else {\n          data[key] = '';\n        }\n\n        // Prefill approved_symbol and hgnc_id if provided as props\n        if (key === 'approved_symbol' && this.approvedSymbol) {\n          data[key] = this.approvedSymbol;\n        }\n        if (key === 'hgnc_id' && this.hgncId) {\n          data[key] = this.hgncId;\n        }\n      });\n\n      // Add precuration data as nested object using document id as key\n      if (this.precurationDetails && this.precurationDetails.id) {\n        const precurationDocId = this.precurationDetails.id;\n        // Creating a nested object with docId as key\n        data['precurationDetails'] = { [precurationDocId]: this.precurationDetails };\n      }\n\n      return data;\n    },\n    validateCurationData(curationData) {\n      const errors = [];\n      for (const [key, field] of Object.entries(curationDetailsConfig)) {\n        if (field.required && !curationData[key]) {\n          errors.push(`The field \"${field.label}\" is required.`);\n        }\n      }\n      return errors;\n    },\n    async saveCuration() {\n      const currentUserId = JSON.parse(localStorage.getItem('user')).uid; // Retrieve the current user's ID\n\n      try {\n        for (const curationData of this.curationDataArray) {\n          // Include the workflow configuration version and name in the curation record\n          curationData.workflowConfigVersionUsed = workflowConfigVersion;\n          curationData.workflowConfigNameUsed = workflowConfigName;\n\n          let curationDocId = curationData.id; // Get the curation doc ID if it already exists\n          let geneDocId; // Declare a variable to store gene document ID\n\n          // If precurationDetails exist, retrieve the geneDocId from the nested geneDetails object\n          if (this.precurationDetails && this.precurationDetails.geneDetails) {\n            const geneDetailsKeys = Object.keys(this.precurationDetails.geneDetails);\n            if (geneDetailsKeys.length > 0) {\n              // Assuming geneDetails is an object with a single key that is the geneDocId\n              geneDocId = geneDetailsKeys[0];\n            }\n          }\n\n          // If geneDocId is still not determined, fetch it from the store\n          if (!geneDocId) {\n            // This function should be created to get the gene document ID based on the gene identifier (approvedSymbol or hgncId)\n            geneDocId = await this.getGeneDocIdByGeneIdentifier(this.approvedSymbol || this.hgncId);\n          }\n\n          // Update or create the curation document\n          if (curationDocId) {\n            // Update existing curation\n            await updateCuration(curationDocId, curationData, currentUserId, curationDetailsConfig);\n            this.showSnackbar('Success', `Curation updated: ${curationDocId}`, 'success');\n          } else {\n            // Create new curation\n            curationDocId = await createCuration(curationData, currentUserId, curationDetailsConfig);\n            this.showSnackbar('Success', `New curation created with ID: ${curationDocId}`, 'success');\n            curationData.id = curationDocId; // Update the ID in the curation data array\n          }\n\n          // Update the gene curation status\n          if (geneDocId) {\n            await updateGeneCurationStatus(geneDocId, {\n              hasCuration: curationDocId,\n              curatedBy: currentUserId\n            });\n          }\n        }\n      } catch (error) {\n        this.showSnackbar('Error', `Error saving curation: ${error.message}`, 'error');\n      }\n    },\n    // Helper function to fetch the gene document ID from the store\n    async getGeneDocIdByGeneIdentifier(identifier) {\n      const geneData = await getGeneByHGNCIdOrSymbol(identifier);\n      return geneData ? geneData.docId : null;\n    },\n  },\n};\n</script>\n\n\n<style scoped>\nh2 {\n  font-size: 1.5em;\n  margin-bottom: 0.5em;\n}\n.add-curation-btn {\n  margin-left: auto; /* pushes the button to the right */\n}\n</style>\n","// utils/validators.js\n\nexport const required = value => !!value || 'This field is required';\n\nexport function email(message = \"This email is not valid\") {\n  return (v) =>\n    /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(v) || message;\n}\n\nexport const number = value => !isNaN(parseFloat(value)) && isFinite(value) || 'Must be a number';\n\nexport const min = minValue => value => parseFloat(value) >= minValue || `Minimum value is ${minValue}`;\n\nexport const max = maxValue => value => parseFloat(value) <= maxValue || `Maximum value is ${maxValue}`;\n","import { render } from \"./CurationForm.vue?vue&type=template&id=fc91f6cc&scoped=true\"\nimport script from \"./CurationForm.vue?vue&type=script&lang=js\"\nexport * from \"./CurationForm.vue?vue&type=script&lang=js\"\n\nimport \"./CurationForm.vue?vue&type=style&index=0&id=fc91f6cc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fc91f6cc\"]])\n\nexport default __exports__","<!-- components/GeneLinkChips.vue -->\n<template>\n  <div class=\"gene-links\">\n    <v-chip\n        v-for=\"link in activeLinks\"\n        :key=\"link.name\"\n        @click=\"goToLink(link.url)\"\n        size=\"small\"\n    >\n      {{ link.name }}\n    </v-chip>\n  </div>\n</template>\n\n\n<script>\nimport { computed, defineComponent } from 'vue';\n\n/**\n * A component that displays clickable link chips based on provided gene identifiers.\n */\nexport default defineComponent({\n  name: 'GeneLinkChips',\n  props: {\n    hgncId: {\n      type: String,\n      default: null\n    },\n    geneSymbol: {\n      type: String,\n      default: null\n    },\n    omimId: {\n      type: String,\n      default: null\n    },\n    linksToShow: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    /**\n     * Formats the provided ID with or without its prefix (HGNC: or OMIM:).\n     * @param {String} id - The ID to be formatted.\n     * @param {String} type - The type of ID (HGNC or OMIM).\n     * @param {Boolean} includePrefix - Whether to include the prefix in the ID.\n     * @returns {String|null} The formatted ID or null if the ID is not provided.\n     */\n    const formatId = (id, type, includePrefix) => {\n      if (!id) return null;\n      const prefix = type === 'HGNC' ? 'HGNC:' : type === 'OMIM' ? 'OMIM:' : '';\n      if (includePrefix && !id.startsWith(prefix)) {\n        return `${prefix}${id}`;\n      } else if (!includePrefix && id.startsWith(prefix)) {\n        return id.replace(prefix, '');\n      }\n      return id;\n    };\n\n    /**\n     * Configuration for generating URL links based on provided IDs.\n     */\n    const linkConfig = {\n      clingen: () => {\n        const formattedId = formatId(props.hgncId, 'HGNC', true);\n        return formattedId ? `https://search.clinicalgenome.org/kb/genes/${formattedId}` : null;\n      },\n      gencc: () => {\n        const formattedId = formatId(props.hgncId, 'HGNC', true);\n        return formattedId ? `https://search.thegencc.org/genes/${formattedId}` : null;\n      },\n      omim: () => {\n        const formattedId = formatId(props.omimId, 'OMIM', false);\n        return formattedId ? `https://www.omim.org/entry/${formattedId}` : null;\n      },\n      search_omim: () => props.geneSymbol ? `https://www.omim.org/search?index=entry&start=1&limit=10&sort=score+desc%2C+prefix_sort+desc&search=${props.geneSymbol}` : null\n    };\n\n    /**\n     * Computed property to generate an array of active links based on `linksToShow` prop.\n     */\n    const activeLinks = computed(() => {\n      return props.linksToShow.map(linkKey => {\n        const url = linkConfig[linkKey] ? linkConfig[linkKey]() : null;\n        return {\n          name: linkKey,\n          url: url\n        };\n      }).filter(link => link.url);\n    });\n\n    /**\n     * Opens the provided URL in a new browser tab.\n     * @param {String} url - The URL to be opened.\n     */\n    const goToLink = (url) => {\n      if (url) window.open(url, '_blank');\n    };\n\n    return {\n      activeLinks,\n      goToLink\n    };\n  }\n});\n</script>\n\n\n<style scoped>\n/**\n * Styles for the gene link chips.\n * Each chip behaves like a hyperlink, with a pointer cursor and color change on hover.\n */\n.gene-links .v-chip {\n  cursor: pointer; /* Cursor like a link */\n  transition: background-color 0.3s ease; /* Smooth transition for background color */\n}\n\n.gene-links .v-chip:hover {\n  background-color: #1976D2; /* Change color on hover */\n  color: white; /* Change text color for better visibility */\n}\n</style>\n","import { render } from \"./GeneLinkChips.vue?vue&type=template&id=7939178d&scoped=true\"\nimport script from \"./GeneLinkChips.vue?vue&type=script&lang=js\"\nexport * from \"./GeneLinkChips.vue?vue&type=script&lang=js\"\n\nimport \"./GeneLinkChips.vue?vue&type=style&index=0&id=7939178d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7939178d\"]])\n\nexport default __exports__","import { render } from \"./CurationModal.vue?vue&type=template&id=4396ccf2&scoped=true\"\nimport script from \"./CurationModal.vue?vue&type=script&lang=js\"\nexport * from \"./CurationModal.vue?vue&type=script&lang=js\"\n\nimport \"./CurationModal.vue?vue&type=style&index=0&id=4396ccf2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4396ccf2\"]])\n\nexport default __exports__","<!-- components/DataDisplayTable.vue -->\n<template>\n  <v-container>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"items\"\n      v-model:items-per-page=\"itemsPerPage\"\n      :server-items-length=\"totalItems\"\n      :loading=\"loading\"\n      class=\"elevation-1\"\n      density=\"compact\"\n    >\n      <!-- Header slot -->\n      <template v-for=\"h in headers\" v-slot:[`header.${h.value}`]=\"{ header }\" :key=\"h.value\">\n            <span>{{h.title}}</span>\n            <v-tooltip\n              v-bind:header=\"header\"\n              v-if=\"h.description\"\n              activator=\"parent\"\n              location=\"top\"\n            >\n              {{ h.description }}\n            </v-tooltip>\n      </template>\n\n      <!-- Default slot for items -->\n      <template v-for=\"column in config.columns\" v-slot:[`item.${column.name}`]=\"{ item }\" :key=\"column.name\">\n        <!-- Handle text formatting -->\n        <div v-if=\"column.type === 'text'\">\n          {{ item[column.name] }}\n        </div>\n        <!-- Handle date formatting -->\n        <div v-else-if=\"column.type === 'date'\">\n          {{ formatTimestamp(item[column.name]) }}\n        </div>\n        <!-- Handle link formatting -->\n        <router-link v-else-if=\"column.type === 'link'\" :to=\"column.to(item)\">\n          {{ item[column.name] }}\n        </router-link>\n        <!-- Handle boolean formatting -->\n        <template v-else-if=\"column.type === 'slot'\">\n          <slot :name=\"column.slotName\" :item=\"item\"></slot>\n        </template>\n      </template>\n    </v-data-table>\n    \n    <!-- Modal slot -->\n    <slot name=\"modal\"></slot>\n\n    <!-- Pagination controls -->\n    <v-pagination\n      v-model=\"page\"\n      :length=\"totalPages\"\n      @update:page=\"$emit('update-page', page)\"\n    ></v-pagination>\n  </v-container>\n</template>\n\n<script>\nimport { ref, computed, watch } from 'vue';\n\n/**\n * A generic data table component for displaying items with configurable columns\n * and pagination.\n */\nexport default {\n  props: {\n    headers: Array, // The headers for the table\n    items: Array, // The items to display in the table\n    config: Object, // Configuration for the columns\n    totalItems: Number, // Total number of items for pagination\n    loading: Boolean, // Loading state\n  },\n  setup(props, { emit }) {\n    const page = ref(1); // Current page number\n    const itemsPerPage = ref(10); // Number of items per page\n\n    // Compute the total number of pages\n    const totalPages = computed(() => Math.ceil(props.totalItems / itemsPerPage.value));\n\n    // Method to format Firestore Timestamp\n    const formatTimestamp = (timestamp) => {\n      if (!timestamp) return '';\n      const date = new Date(timestamp.seconds * 1000);\n      return date.toLocaleDateString(); // Adjust format as needed\n    };\n\n    // Watch for changes in page and itemsPerPage and emit events\n    watch(page, () => {\n      emit('page-changed', page.value);\n    });\n\n    watch(itemsPerPage, () => {\n      emit('items-per-page-changed', itemsPerPage.value);\n    });\n\n    return {\n      page,\n      itemsPerPage,\n      totalPages,\n      formatTimestamp\n    };\n  },\n};\n</script>\n","import { render } from \"./DataDisplayTable.vue?vue&type=template&id=0c13b056\"\nimport script from \"./DataDisplayTable.vue?vue&type=script&lang=js\"\nexport * from \"./DataDisplayTable.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- components/GeneDetailCard.vue -->\n<template>\n  <v-container>\n    <v-card v-if=\"gene\" class=\"mx-auto my-4\" max-width=\"800\">\n      <v-card-title v-if=\"showTitle\" class=\"headline\">\n        {{ gene.approved_symbol }}\n        <HelpIcon :helpContent=\"helpContent\" />\n      </v-card-title>\n      <v-card-text>\n        <v-table density=\"compact\">\n          <tbody>\n            <template v-for=\"(value, key) in filteredGeneDetails\" :key=\"key\">\n              <tr>\n                <td>\n                  <strong>\n                    <span class=\"label-hover\" :title=\"value.description\">{{ value.label }}</span>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"start\"\n                    >\n                      {{ value.description }}\n                    </v-tooltip>\n                  </strong>\n                </td>\n                <td v-html=\"value.formattedValue\"></td>\n              </tr>\n            </template>\n          </tbody>\n        </v-table>\n      </v-card-text>\n    </v-card>\n    <v-alert v-else type=\"error\">\n      Gene not found or failed to load.\n    </v-alert>\n  </v-container>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport { getGeneByHGNCIdOrSymbol } from '@/stores/geneStore';\nimport { geneDetailsConfig, workflowConfig } from '@/config/workflows/KidneyGeneticsGeneCuration/workflowConfig';\nimport HelpIcon from './HelpIcon.vue';\n\nexport default {\n  props: {\n    id: String,\n    visibilityScope: {\n      type: String,\n      default: 'standardView', // or 'curationView'\n    },\n    showTitle: { // New prop for showing the card title\n      type: Boolean,\n      default: true,\n    },\n  },\n  components: {\n    HelpIcon, // Add HelpIcon to the components\n  },\n  setup(props, { emit }) {\n    // Get the help content from the workflow config\n    const helpContent =  workflowConfig.stages.gene.helpConfig;\n\n    // Define a reactive variable to store the gene data\n    const gene = ref(null);\n\n    onMounted(async () => {\n      if (props.id) {\n        try {\n          const fetchedGene = await getGeneByHGNCIdOrSymbol(props.id);\n          gene.value = fetchedGene;\n          emit('gene-data-loaded', fetchedGene); // Emit an event with the gene data\n        } catch (error) {\n          console.error('Error fetching gene:', error.message);\n        }\n      }\n    });\n\n    const filteredGeneDetails = computed(() => {\n      if (!gene.value) return [];\n\n      return Object.entries(geneDetailsConfig)\n        .filter(([, fieldConfig]) => fieldConfig.visibility[props.visibilityScope])\n        .map(([key, fieldConfig]) => {\n          const value = gene.value[key];\n          return {\n            label: fieldConfig.label,\n            description: fieldConfig.description || '',\n            formattedValue: formatValue(value, fieldConfig),\n          };\n        });\n    });\n\n    // for now objects and arrays are formatted into a readable string format\n    // TODO: add support for formatting objects and arrays into a table\n    function formatValue(value, fieldConfig) {\n      if (value == null) return 'N/A'; // Handle null and undefined values\n\n      switch (fieldConfig.format) {\n        case 'date':\n          return new Date(value.seconds * 1000).toLocaleDateString();\n        case 'number':\n          return parseFloat(value).toFixed(2);\n        case 'array':\n          return value.join(', ');\n        case 'map':\n          return Object.entries(value).map(([k, v]) => `${k}: ${v}`).join(', ');\n        case 'text':\n          return value;\n        default:\n          return JSON.stringify(value);\n      }\n    }\n\n    return { gene, filteredGeneDetails, helpContent };\n  },\n};\n</script>\n\n<style scoped>\n.label-hover {\n  cursor: help;\n}\n\n.v-simple-table {\n  max-height: 300px;\n  overflow-y: auto;\n}\n</style>\n","import { render } from \"./GeneDetailCard.vue?vue&type=template&id=66758bd8&scoped=true\"\nimport script from \"./GeneDetailCard.vue?vue&type=script&lang=js\"\nexport * from \"./GeneDetailCard.vue?vue&type=script&lang=js\"\n\nimport \"./GeneDetailCard.vue?vue&type=style&index=0&id=66758bd8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-66758bd8\"]])\n\nexport default __exports__","<!-- components/HelpIcon.vue -->\n<template>\n  <v-tooltip bottom>\n    <template v-slot:activator=\"{ attrs }\">\n      <v-icon v-bind=\"attrs\" @click=\"dialog = true\">\n        mdi-help-circle-outline\n      </v-icon>\n    </template>\n    <span>Click for help</span>\n  </v-tooltip>\n  <!-- Listen for the update:modelValue event to sync the dialog state -->\n  <HelpDialog\n    :modelValue=\"dialog\"\n    @update:modelValue=\"value => dialog = value\"\n    :helpContent=\"helpContent\"\n  />\n</template>\n\n<script>\nimport HelpDialog from './HelpDialog.vue';\n\nexport default {\n  components: {\n    HelpDialog,\n  },\n  props: {\n    helpContent: {\n      type: Object,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      dialog: false,\n    };\n  },\n  methods: {\n    openHelpDialog() {\n      console.log(this.helpContent);\n      this.dialog = true;\n    },\n  },\n};\n</script>\n","<!-- components/HelpDialog.vue -->\n<template>\n  <v-dialog v-model=\"dialog\" max-width=\"600px\">\n    <v-card>\n      <v-card-title>{{ helpContent.HelpDialog.title }}</v-card-title>\n      <v-container>\n        <v-row>\n          <v-col v-for=\"section in helpContent.sections\" :key=\"section.header\" cols=\"12\">\n            <v-card outlined>\n              <v-card-title>{{ section.header }}</v-card-title>\n              <v-card-text v-html=\"section.content\"></v-card-text>\n              <v-card-actions v-if=\"section.links\">\n                <v-btn v-for=\"link in section.links\" :key=\"link.title\" :href=\"link.url\" text>\n                  {{ link.title }}\n                </v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n      <v-card-actions>\n        <v-spacer />\n        <v-btn color=\"primary\" @click=\"close\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  name: 'HelpDialog',\n  props: {\n    helpContent: {\n      type: Object,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      dialog: false,\n    };\n  },\n  emits: ['update:modelValue'],\n  methods: {\n    close() {\n      this.$emit('update:modelValue', false);\n    },\n  },\n};\n</script>\n","import { render } from \"./HelpDialog.vue?vue&type=template&id=9a24c2dc\"\nimport script from \"./HelpDialog.vue?vue&type=script&lang=js\"\nexport * from \"./HelpDialog.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./HelpIcon.vue?vue&type=template&id=08972e02\"\nimport script from \"./HelpIcon.vue?vue&type=script&lang=js\"\nexport * from \"./HelpIcon.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["getCurations","async","querySnapshot","getDocs","collection","db","curations","forEach","docSnapshot","exists","Error","id","data","validateCurationData","curationData","config","errors","key","field","Object","entries","value","required","push","label","format","undefined","min","max","createCuration","userId","length","join","checkForExistingCuration","approvedSymbol","approved_symbol","disease","inheritance","docId","doc","setDoc","users","createdAt","Timestamp","fromDate","Date","updatedAt","updateCuration","updatedData","curationRef","docSnap","getDoc","existingData","updatedUsers","updateUsersArray","updateDoc","deleteCuration","deleteDoc","getCurationsByHGNCIdOrSymbol","curationsRef","symbolQuery","query","where","identifier","hgncQuery","curationDataArray","addToCurationDataArray","symbolSnapshot","hgncSnapshot","usersArray","newUsersArray","filter","q","empty","validatePrecurationData","precurationData","getPrecurations","precurations","createPrecuration","validationErrors","getPrecurationByHGNCIdOrSymbol","precurationsRef","updatePrecuration","precurationRef","deletePrecuration","class","_createVNode","_component_v_dialog","$setup","isOpen","$event","persistent","_component_v_card","_createElementVNode","_hoisted_1","_component_v_card_title","title","_toDisplayString","editedItem","hgnc_id","_component_GeneLinkChips","_component_v_btn","icon","onClick","close","_component_v_icon","_component_v_card_text","_component_v_tabs","tab","grow","showPreCurationTab","_createBlock","_component_v_tab","showCurationTab","_component_v_window","style","_component_v_window_item","showGeneDetailCard","_component_GeneDetailCard","visibilityScope","showTitle","onGeneDataLoaded","handleGeneDataLoaded","geneData","_component_PrecurationForm","onPrecurationAccepted","handlePrecurationAccepted","_component_CurationForm","hgncId","precurationDetails","_component_v_card_actions","_component_v_spacer","color","text","_component_MessageSnackbar","snackbarVisible","snackbarTitle","message","snackbarMessage","snackbarColor","_component_HelpIcon","helpContent","$data","_component_v_container","_createElementBlock","_Fragment","_renderList","$options","groupedFields","group","groupName","groupHasVisibleFields","_component_v_row","_component_v_col","cols","index","visibility","curationView","_component_v_switch","_normalizeClass","_component_v_tooltip","activator","location","description","_component_v_text_field","_component_v_select","items","options","decisionPrefilled","decisionManuallyChanged","submitPrecuration","name","props","geneObject","emits","components","HelpIcon","this","initializePrecurationData","existingPrecurationId","workflowConfig","stages","precuration","helpConfig","computed","fields","precurationFields","groups","values","sort","a","b","order","precurationDetailsConfig","map","watch","deep","handler","applyDecisionRules","methods","showSnackbar","decisionRule","decisionRules","trueCount","conditions","reduce","count","condition","threshold","decision","onDecisionChange","newValue","computedDecision","updateCommentField","removeCommentOverride","overrideMessage","comment","includes","replace","trim","some","keys","geneDocId","geneDetails","geneDetailsConfig","detailKey","currentUserId","JSON","parse","localStorage","getItem","uid","currentTime","toISOString","workflowConfigVersionUsed","workflowConfigVersion","workflowConfigNameUsed","workflowConfigName","updateGeneCurationStatus","hasPrecuration","precuratedBy","$emit","error","displaySwitchValue","created","assign","__exports__","addCurationEntity","_component_v_expansion_panels","multiple","_component_v_expansion_panel","_component_v_expansion_panel_text","fieldIndex","rules","getFieldRules","outlined","dense","_component_v_checkbox","step","type","saveCuration","number","isNaN","parseFloat","isFinite","minValue","maxValue","String","initializeCurationData","existingCurationId","curation","curationDetailsConfig","precurationDocId","curationDocId","geneDetailsKeys","getGeneDocIdByGeneIdentifier","hasCuration","curatedBy","getGeneByHGNCIdOrSymbol","_ctx","activeLinks","link","_component_v_chip","goToLink","url","size","defineComponent","default","geneSymbol","omimId","linksToShow","Array","setup","formatId","includePrefix","prefix","startsWith","linkConfig","clingen","formattedId","gencc","omim","search_omim","linkKey","window","open","GeneDetailCard","PrecurationForm","CurationForm","GeneLinkChips","item","Boolean","context","emit","ref","watchEffect","checkExistingCuration","existingCuration","newVal","initializeModal","render","_component_v_data_table","headers","$props","itemsPerPage","totalItems","loading","density","h","header","columns","column","_hoisted_2","formatTimestamp","_component_router_link","to","_renderSlot","$slots","slotName","_component_v_pagination","page","totalPages","_cache","Number","Math","ceil","timestamp","date","seconds","toLocaleDateString","gene","_component_v_table","filteredGeneDetails","innerHTML","formattedValue","_component_v_alert","onMounted","fetchedGene","console","fieldConfig","formatValue","toFixed","k","v","stringify","bottom","_withCtx","attrs","_mergeProps","dialog","_component_HelpDialog","modelValue","HelpDialog","sections","section","content","links","href","openHelpDialog","log"],"sourceRoot":""}