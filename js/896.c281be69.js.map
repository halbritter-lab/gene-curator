{"version":3,"file":"js/896.c281be69.js","mappings":"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","sources":["webpack://gene-curator/./src/stores/curationsStore.js","webpack://gene-curator/./src/components/DataDisplayTable.vue","webpack://gene-curator/./src/components/DataDisplayTable.vue?2290","webpack://gene-curator/./src/views/CurationTable.vue","webpack://gene-curator/./src/views/CurationTable.vue?257f"],"sourcesContent":["// stores/curationsStore.js\nimport { collection, getDocs, getDoc, addDoc, doc, updateDoc, deleteDoc, Timestamp, query, where } from 'firebase/firestore';\nimport { db } from '@/firebase';\n\n\n/**\n * Fetches all curation documents from the Firestore 'curations' collection.\n * @returns {Promise<Object>} A promise that resolves to an object mapping document IDs to curation data.\n */\nexport const getCurations = async () => {\n  const querySnapshot = await getDocs(collection(db, 'curations'));\n  let curations = {};\n\n  querySnapshot.forEach((docSnapshot) => {\n    curations[docSnapshot.id] = docSnapshot.data();\n  });\n\n  return curations;\n};\n\n\n/**\n * Creates a new curation document in the Firestore 'curations' collection with the provided data.\n * @param {Object} curationData - The data to create a new curation document.\n * @returns {Promise<string>} A promise that resolves to the new document's ID.\n */\nexport const createCuration = async (curationData) => {\n  const docRef = await addDoc(collection(db, 'curations'), {\n    ...curationData,\n    createdAt: Timestamp.fromDate(new Date()),\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n\n  return docRef.id;\n};\n\n\n/**\n * Retrieves a specific curation document from Firestore using the document ID.\n * @param {string} docId - The document ID of the curation to retrieve.\n * @returns {Promise<Object>} A promise that resolves to an object containing the curation data, if found.\n * @throws {Error} If the document does not exist.\n */\nexport const getCuration = async (docId) => {\n  const curationRef = doc(db, 'curations', docId);\n  const docSnap = await getDoc(curationRef);\n\n  if (docSnap.exists()) {\n    return { id: docSnap.id, ...docSnap.data() };\n  } else {\n    throw new Error(\"Curation document not found\");\n  }\n};\n\n\n/**\n * Updates a specific curation document in Firestore with the provided data.\n * @param {string} docId - The document ID of the curation to update.\n * @param {Object} updatedData - An object containing the updated data for the curation.\n * @returns {Promise<void>} A promise that resolves once the update is complete.\n */\nexport const updateCuration = async (docId, updatedData) => {\n  const curationRef = doc(db, 'curations', docId);\n  await updateDoc(curationRef, {\n    ...updatedData,\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n};\n\n\n/**\n * Deletes a specific curation document from Firestore using the document ID.\n * @param {string} docId - The document ID of the curation to delete.\n * @returns {Promise<void>} A promise that resolves once the document is deleted.\n * @throws {Error} If the document does not exist or cannot be deleted.\n */\nexport const deleteCuration = async (docId) => {\n  const curationRef = doc(db, 'curations', docId);\n  await deleteDoc(curationRef);\n};\n\n\n/**\n * Retrieves a curation document from Firestore by either the approved symbol or HGNC ID.\n * @param {string} identifier - The approved symbol or HGNC ID to search for.\n * @returns {Promise<Object|null>} A promise that resolves to an object containing the curation data if found, otherwise null.\n */\nexport const getCurationByHGNCIdOrSymbol = async (identifier) => {\n    const curationsRef = collection(db, 'curations');\n    const symbolQuery = query(curationsRef, where(\"approved_symbol\", \"==\", identifier));\n    const hgncQuery = query(curationsRef, where(\"hgnc_id\", \"==\", identifier));\n  \n    const symbolSnapshot = await getDocs(symbolQuery);\n    let curationData = null;\n  \n    symbolSnapshot.forEach((doc) => {\n      if (doc.exists()) {\n        curationData = { id: doc.id, ...doc.data() };\n      }\n    });\n  \n    if (!curationData) {\n      const hgncSnapshot = await getDocs(hgncQuery);\n      hgncSnapshot.forEach((doc) => {\n        if (doc.exists()) {\n          curationData = { id: doc.id, ...doc.data() };\n        }\n      });\n    }\n  \n    return curationData;\n  };","<!-- components/DataDisplayTable.vue -->\n<template>\n  <v-container>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"items\"\n      v-model:items-per-page=\"itemsPerPage\"\n      :server-items-length=\"totalItems\"\n      :loading=\"loading\"\n      class=\"elevation-1\"\n      density=\"compact\"\n    >\n      <template v-for=\"column in config.columns\" v-slot:[`item.${column.name}`]=\"{ item }\" :key=\"column.name\">\n        <!-- Handle text formatting -->\n        <div v-if=\"column.type === 'text'\">\n          {{ item[column.name] }}\n        </div>\n        <!-- Handle date formatting -->\n        <div v-else-if=\"column.type === 'date'\">\n          {{ formatTimestamp(item[column.name]) }}\n        </div>\n        <!-- Handle boolean formatting -->\n        <router-link v-else-if=\"column.type === 'link'\" :to=\"column.to(item)\">\n          {{ item[column.name] }}\n        </router-link>\n        <!-- Handle boolean formatting -->\n        <template v-else-if=\"column.type === 'slot'\">\n          <slot :name=\"column.slotName\" :item=\"item\"></slot>\n        </template>\n      </template>\n    </v-data-table>\n    \n    <!-- Modal slot -->\n    <slot name=\"modal\"></slot>\n\n    <!-- Pagination controls -->\n    <v-pagination\n      v-model=\"page\"\n      :length=\"totalPages\"\n      @update:page=\"$emit('update-page', page)\"\n    ></v-pagination>\n  </v-container>\n</template>\n\n<script>\nimport { ref, computed, watch } from 'vue';\n\n/**\n * A generic data table component for displaying items with configurable columns\n * and pagination.\n */\nexport default {\n  props: {\n    headers: Array, // The headers for the table\n    items: Array, // The items to display in the table\n    config: Object, // Configuration for the columns\n    totalItems: Number, // Total number of items for pagination\n    loading: Boolean, // Loading state\n  },\n  setup(props, { emit }) {\n    const page = ref(1); // Current page number\n    const itemsPerPage = ref(10); // Number of items per page\n\n    // Compute the total number of pages\n    const totalPages = computed(() => Math.ceil(props.totalItems / itemsPerPage.value));\n\n    // Method to format Firestore Timestamp\n    const formatTimestamp = (timestamp) => {\n      if (!timestamp) return '';\n      const date = new Date(timestamp.seconds * 1000);\n      return date.toLocaleDateString(); // Adjust format as needed\n    };\n\n    // Watch for changes in page and itemsPerPage and emit events\n    watch(page, () => {\n      emit('page-changed', page.value);\n    });\n\n    watch(itemsPerPage, () => {\n      emit('items-per-page-changed', itemsPerPage.value);\n    });\n\n    return {\n      page,\n      itemsPerPage,\n      totalPages,\n      formatTimestamp\n    };\n  },\n};\n</script>\n","import { render } from \"./DataDisplayTable.vue?vue&type=template&id=6f301894\"\nimport script from \"./DataDisplayTable.vue?vue&type=script&lang=js\"\nexport * from \"./DataDisplayTable.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--components/CurationTable.vue-->\n<template>\n  <v-container>\n    <h1>Curation Table</h1>\n\n    <!-- Data table component -->\n    <DataDisplayTable\n      :headers=\"headers\"\n      :items=\"paginatedItems\"\n      :config=\"tableConfig\"\n      :total-items=\"totalItems\"\n      :loading=\"loading\"\n      @action=\"handleAction\"\n      @page-changed=\"updatePage\"\n      @items-per-page-changed=\"updateItemsPerPage\"\n    >\n      <template v-slot:action-slot=\"{ item }\">\n        <v-btn color=\"primary\" @click=\"openModal(item)\">Edit</v-btn>\n        <v-btn color=\"error\" @click=\"deleteItem(item)\">Delete</v-btn>\n      </template>\n\n      <template v-slot:modal>\n        <!-- Your modal component here -->\n      </template>\n    </DataDisplayTable>\n  </v-container>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport DataDisplayTable from '@/components/DataDisplayTable.vue';\nimport { getCurations, deleteCuration } from '@/stores/curationsStore';\n\nexport default {\n  name: 'CurationTable',\n  components: {\n    DataDisplayTable\n  },\n  setup() {\n    const rawItems = ref({});\n    const loading = ref(false);\n    const page = ref(1);\n    const itemsPerPage = ref(10);\n\n    const totalItems = computed(() => Object.keys(rawItems.value).length);\n    const paginatedItems = computed(() => {\n      const start = (page.value - 1) * itemsPerPage.value;\n      const end = start + itemsPerPage.value;\n      return Object.values(rawItems.value).slice(start, end);\n    });\n\n    const headers = [\n      { title: 'Approved Symbol', value: 'approved_symbol' },\n      { title: 'Verdict', value: 'verdict' },\n      { title: 'Created', value: 'createdAt' },\n    ];\n\n    const tableConfig = {\n      columns: [\n        {\n          name: 'approved_symbol',\n          type: 'link', // Types can be 'text', 'link', 'action', etc.\n          to: item => `/gene/${item.hgnc_id}` // Function to generate the link\n        },\n        {\n          name: 'createdAt',\n          type: 'date'\n        },\n      ]\n    };\n\n    const updatePage = (newPage) => {\n      page.value = newPage;\n    };\n\n    const updateItemsPerPage = (newItemsPerPage) => {\n      itemsPerPage.value = newItemsPerPage;\n    };\n\n    const handleAction = (action, item) => {\n      console.log(`Action: ${action} for item:`, item);\n      // Implement action handling logic here\n    };\n\n    const deleteItem = async (item) => {\n      // Implement deletion logic here\n      await deleteCuration(item.id);\n      // Refresh the list or handle UI update\n    };\n\n    onMounted(async () => {\n      loading.value = true;\n      rawItems.value = await getCurations();\n      console.log('Curations:', rawItems.value);\n      loading.value = false;\n    });\n\n    return {\n      headers,\n      paginatedItems,\n      tableConfig,\n      totalItems,\n      loading,\n      updatePage,\n      updateItemsPerPage,\n      handleAction,\n      deleteItem\n    };\n  },\n};\n</script>\n\n<style scoped>\n/* Add your CSS styling here */\n</style>\n","import { render } from \"./CurationTable.vue?vue&type=template&id=119114c1&scoped=true\"\nimport script from \"./CurationTable.vue?vue&type=script&lang=js\"\nexport * from \"./CurationTable.vue?vue&type=script&lang=js\"\n\nimport \"./CurationTable.vue?vue&type=style&index=0&id=119114c1&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-119114c1\"]])\n\nexport default __exports__"],"names":["getCurations","async","querySnapshot","getDocs","collection","db","curations","forEach","docSnapshot","id","data","createCuration","docRef","addDoc","curationData","createdAt","Timestamp","fromDate","Date","updatedAt","updateCuration","docId","updatedData","curationRef","doc","updateDoc","deleteCuration","deleteDoc","getCurationByHGNCIdOrSymbol","curationsRef","symbolQuery","query","where","identifier","hgncQuery","symbolSnapshot","exists","hgncSnapshot","_createBlock","_component_v_container","_createVNode","_component_v_data_table","headers","$props","items","$setup","itemsPerPage","$event","totalItems","loading","class","density","config","columns","column","name","item","type","_createElementBlock","_hoisted_1","_toDisplayString","_hoisted_2","formatTimestamp","_component_router_link","to","_renderSlot","_ctx","$slots","slotName","_component_v_pagination","page","length","totalPages","_cache","$emit","props","Array","Object","Number","Boolean","setup","emit","ref","computed","Math","ceil","value","timestamp","date","seconds","toLocaleDateString","watch","__exports__","render","_createElementVNode","_component_DataDisplayTable","paginatedItems","tableConfig","onAction","handleAction","onPageChanged","updatePage","onItemsPerPageChanged","updateItemsPerPage","_withCtx","_component_v_btn","color","onClick","openModal","deleteItem","modal","components","DataDisplayTable","rawItems","keys","start","end","values","slice","title","hgnc_id","newPage","newItemsPerPage","action","console","log","onMounted"],"sourceRoot":""}