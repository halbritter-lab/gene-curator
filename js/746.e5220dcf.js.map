{"version":3,"file":"js/746.e5220dcf.js","mappings":"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","sources":["webpack://gene-curator/./src/stores/curationsStore.js","webpack://gene-curator/./src/stores/precurationsStore.js","webpack://gene-curator/./src/components/CurationModal.vue","webpack://gene-curator/./src/components/PrecurationForm.vue","webpack://gene-curator/./src/components/HelpIcon.vue","webpack://gene-curator/./src/components/HelpDialog.vue","webpack://gene-curator/./src/components/HelpDialog.vue?80db","webpack://gene-curator/./src/components/HelpIcon.vue?3875","webpack://gene-curator/./src/components/PrecurationForm.vue?14fe","webpack://gene-curator/./src/components/CurationForm.vue","webpack://gene-curator/./src/utils/validators.js","webpack://gene-curator/./src/components/CurationForm.vue?096c","webpack://gene-curator/./src/components/GeneLinkChips.vue","webpack://gene-curator/./src/components/GeneLinkChips.vue?8f28","webpack://gene-curator/./src/components/CurationModal.vue?9e6d","webpack://gene-curator/./src/components/DataDisplayTable.vue","webpack://gene-curator/./src/components/DataDisplayTable.vue?2290","webpack://gene-curator/./src/components/GeneDetailCard.vue","webpack://gene-curator/./src/components/GeneDetailCard.vue?712e"],"sourcesContent":["// stores/curationsStore.js\nimport { collection, getDocs, getDoc, addDoc, doc, updateDoc, deleteDoc, Timestamp, query, where } from 'firebase/firestore';\nimport { db } from '@/firebase';\n\n\n/**\n * Fetches all curation documents from the Firestore 'curations' collection.\n * @returns {Promise<Object>} A promise that resolves to an object mapping document IDs to curation data.\n */\nexport const getCurations = async () => {\n  const querySnapshot = await getDocs(collection(db, 'curations'));\n  let curations = {};\n\n  querySnapshot.forEach((docSnapshot) => {\n    if (docSnapshot.exists()) {\n      // Include the document ID in the returned object\n      curations[docSnapshot.id] = { id: docSnapshot.id, ...docSnapshot.data() };\n    } else {\n      throw new Error(\"Curation document not found\");\n    }\n  });\n\n  return curations;\n};\n\n\n/**\n * Checks if the provided curation data is valid according to the provided configuration.\n * @param {Object} curationData - The data to validate.\n * @param {Object} config - The configuration object against which to validate.\n * @returns {Array} An array of error messages, empty if no errors.\n */\nconst validateCurationData = (curationData, config) => {\n  const errors = [];\n\n  for (const [key, field] of Object.entries(config)) {\n    const value = curationData[key];\n    \n    // Check for required fields\n    if (field.required && !value) {\n      errors.push(`The field \"${field.label}\" is required.`);\n    }\n\n    // Check for number fields with min and max values\n    if (field.format === 'number') {\n      if (field.min !== undefined && value < field.min) {\n        errors.push(`The value for \"${field.label}\" should not be less than ${field.min}.`);\n      }\n      if (field.max !== undefined && value > field.max) {\n        errors.push(`The value for \"${field.label}\" should not exceed ${field.max}.`);\n      }\n    }\n  }\n\n  return errors;\n};\n\n\n/**\n * Creates a new curation document in the Firestore 'curations' collection with the provided data.\n * @param {Object} curationData - The data to create a new curation document.\n * @param {Object} config - The configuration object against which to validate.\n * @param {string} userId - The user ID of the user creating the curation.\n * @returns {Promise<string>} A promise that resolves to the new document's ID.\n */\nexport const createCuration = async (curationData, userId, config) => {\n  const errors = validateCurationData(curationData, config);\n  if (errors.length > 0) {\n    throw new Error(`Validation failed: ${errors.join(' ')}`);\n  }\n\n  // Check for existing curation\n  const exists = await checkForExistingCuration({\n    approvedSymbol: curationData.approved_symbol,\n    disease: curationData.disease,\n    inheritance: curationData.inheritance\n  });\n  \n  if (exists) {\n    throw new Error(\"A curation with the same symbol, disease, and inheritance already exists.\");\n  }\n\n  const docRef = await addDoc(collection(db, 'curations'), {\n    ...curationData,\n    users: [userId],\n    createdAt: Timestamp.fromDate(new Date()),\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n\n  return docRef.id;\n};\n\n\n/**\n * Retrieves a specific curation document from Firestore using the document ID.\n * @param {string} docId - The document ID of the curation to retrieve.\n * @returns {Promise<Object>} A promise that resolves to an object containing the curation data, if found.\n * @throws {Error} If the document does not exist.\n */\nexport const getCuration = async (docId) => {\n  const curationRef = doc(db, 'curations', docId);\n  const docSnap = await getDoc(curationRef);\n\n  if (docSnap.exists()) {\n    return { id: docSnap.id, ...docSnap.data() };\n  } else {\n    throw new Error(\"Curation document not found\");\n  }\n};\n\n\n/**\n * Updates a specific curation document in Firestore with the provided data.\n * @param {string} docId - The document ID of the curation to update.\n * @param {Object} updatedData - An object containing the updated data for the curation.\n * @param {string} userId - The user ID of the user performing the update.\n * @param {Object} config - The configuration object against which to validate.\n * @returns {Promise<void>} A promise that resolves once the update is complete.\n */\nexport const updateCuration = async (docId, updatedData, userId, config) => {\n  const errors = validateCurationData(updatedData, config);\n  if (errors.length > 0) {\n    throw new Error(`Validation failed: ${errors.join(' ')}`);\n  }\n\n  const curationRef = doc(db, 'curations', docId);\n  const docSnap = await getDoc(curationRef);\n\n  if (!docSnap.exists()) {\n    throw new Error(\"Curation document not found\");\n  }\n\n  const existingData = docSnap.data();\n  const updatedUsers = updateUsersArray(existingData.users || [], userId);\n\n  await updateDoc(curationRef, {\n    ...updatedData,\n    users: updatedUsers,\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n};\n\n\n/**\n * Deletes a specific curation document from Firestore using the document ID.\n * @param {string} docId - The document ID of the curation to delete.\n * @returns {Promise<void>} A promise that resolves once the document is deleted.\n * @throws {Error} If the document does not exist or cannot be deleted.\n */\nexport const deleteCuration = async (docId) => {\n  const curationRef = doc(db, 'curations', docId);\n  await deleteDoc(curationRef);\n};\n\n\n/**\n * Retrieves a curation document from Firestore by either the approved symbol or HGNC ID.\n * @param {string} identifier - The approved symbol or HGNC ID to search for.\n * @returns {Promise<Object|null>} A promise that resolves to an object containing the curation data if found, otherwise null.\n */\nexport const getCurationByHGNCIdOrSymbol = async (identifier) => {\n    const curationsRef = collection(db, 'curations');\n    const symbolQuery = query(curationsRef, where(\"approved_symbol\", \"==\", identifier));\n    const hgncQuery = query(curationsRef, where(\"hgnc_id\", \"==\", identifier));\n  \n    const symbolSnapshot = await getDocs(symbolQuery);\n    let curationData = null;\n  \n    symbolSnapshot.forEach((doc) => {\n      if (doc.exists()) {\n        curationData = { id: doc.id, ...doc.data() };\n      }\n    });\n  \n    if (!curationData) {\n      const hgncSnapshot = await getDocs(hgncQuery);\n      hgncSnapshot.forEach((doc) => {\n        if (doc.exists()) {\n          curationData = { id: doc.id, ...doc.data() };\n        }\n      });\n    }\n  \n    return curationData;\n  };\n\n  \n  /**\n * Retrieves all curation documents from Firestore by either the approved symbol or HGNC ID.\n * @param {string} identifier - The approved symbol or HGNC ID to search for.\n * @returns {Promise<Array>} A promise that resolves to an array of objects containing the curation data if found, otherwise an empty array.\n */\nexport const getCurationsByHGNCIdOrSymbol = async (identifier) => {\n  const curationsRef = collection(db, 'curations');\n  const symbolQuery = query(curationsRef, where(\"approved_symbol\", \"==\", identifier));\n  const hgncQuery = query(curationsRef, where(\"hgnc_id\", \"==\", identifier));\n\n  let curationDataArray = [];\n\n  const addToCurationDataArray = (docSnapshot) => {\n    if (docSnapshot.exists()) {\n      curationDataArray.push({ id: docSnapshot.id, ...docSnapshot.data() });\n    }\n  };\n\n  const symbolSnapshot = await getDocs(symbolQuery);\n  symbolSnapshot.forEach(addToCurationDataArray);\n\n  if (curationDataArray.length === 0) {\n    const hgncSnapshot = await getDocs(hgncQuery);\n    hgncSnapshot.forEach(addToCurationDataArray);\n  }\n\n  return curationDataArray;\n};\n\n\n/**\n * Updates the users array with the given userId, maintaining order and uniqueness.\n * @param {Array} usersArray - The current array of user IDs.\n * @param {string} userId - The ID of the user to add or move in the array.\n * @returns {Array} The updated array of user IDs.\n */\nconst updateUsersArray = (usersArray, userId) => {\n  const newUsersArray = usersArray.filter(id => id !== userId);\n  newUsersArray.push(userId); // Add the userId at the end\n  return newUsersArray;\n};\n\n\n/**\n * Checks if a curation with the given parameters already exists.\n * @param {Object} params - Parameters to check for existing curation.\n * @returns {Promise<boolean>} - Returns true if curation exists, false otherwise.\n */\nconst checkForExistingCuration = async ({ approvedSymbol, disease, inheritance }) => {\n  const curationsRef = collection(db, 'curations');\n  const q = query(curationsRef, where(\"approved_symbol\", \"==\", approvedSymbol), where(\"disease\", \"==\", disease), where(\"inheritance\", \"==\", inheritance));\n\n  const querySnapshot = await getDocs(q);\n  return !querySnapshot.empty;\n};\n","// stores/precurationsStore.js\nimport { collection, getDocs, getDoc, addDoc, doc, updateDoc, deleteDoc, Timestamp, query, where } from 'firebase/firestore';\nimport { db } from '@/firebase';\n\n\n/**\n * Validates the given precuration data against the precuration details configuration.\n * @param {Object} precurationData - The data to validate.\n * @returns {Array} An array of error messages, empty if no errors.\n */\nconst validatePrecurationData = (precurationData, config) => {\n  const errors = [];\n  for (const [key, field] of Object.entries(config)) {\n    const value = precurationData[key];\n    \n    // Check for required fields\n    if (field.required && (value === undefined || value === '')) {\n      errors.push(`The field \"${field.label}\" is required.`);\n    }\n\n    // Check for number fields with min and max values\n    if (field.format === 'number') {\n      if (field.min !== undefined && value < field.min) {\n        errors.push(`The value for \"${field.label}\" should not be less than ${field.min}.`);\n      }\n      if (field.max !== undefined && value > field.max) {\n        errors.push(`The value for \"${field.label}\" should not exceed ${field.max}.`);\n      }\n    }\n  }\n\n  return errors;\n};\n\n\n/**\n * Fetches all precuration documents from the Firestore collection.\n * @returns {Promise<Object>} An object mapping document IDs to precuration data.\n */\nexport const getPrecurations = async () => {\n  const querySnapshot = await getDocs(collection(db, 'precurations'));\n  let precurations = {};\n\n  querySnapshot.forEach((docSnapshot) => {\n    if (docSnapshot.exists()) {\n      // Include the document ID in the returned object\n      precurations[docSnapshot.id] = { id: docSnapshot.id, ...docSnapshot.data() };\n    } else {\n      throw new Error(\"Precuration document not found\");\n    }\n  });\n\n  return precurations;\n};\n\n\n/**\n * Creates a new precuration document in Firestore with the given data.\n * @param {Object} precurationData - The data for the new precuration.\n * @param {string} userId - The ID of the user creating the precuration.\n * @param {Object} config - The precuration details configuration.\n * @returns {Promise<string>} The ID of the newly created document.\n */\nexport const createPrecuration = async (precurationData, userId, config) => {\n  const validationErrors = validatePrecurationData(precurationData, config);\n  if (validationErrors.length > 0) {\n    throw new Error(`Validation failed: ${validationErrors.join(' ')}`);\n  }\n\n  const docRef = await addDoc(collection(db, 'precurations'), {\n    ...precurationData,\n    users: [userId], // Initialize with the creating user\n    createdAt: Timestamp.fromDate(new Date()),\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n\n  return docRef.id;\n};\n\n\n/**\n * Retrieves a specific precuration document from Firestore by its document ID.\n * @param {string} docId - The document ID of the precuration to retrieve.\n * @returns {Promise<Object>} An object containing the precuration data.\n * @throws {Error} If the document is not found.\n */\nexport const getPrecuration = async (docId) => {\n  const precurationRef = doc(db, 'precurations', docId);\n  const docSnap = await getDoc(precurationRef);\n\n  if (docSnap.exists()) {\n    return { id: docSnap.id, ...docSnap.data() };\n  } else {\n    throw new Error(\"Precuration document not found\");\n  }\n};\n\n\n/**\n * Retrieves a specific precuration document from Firestore by either the approved symbol or HGNC ID.\n * @param {string} identifier - The approved symbol or HGNC ID to search for.\n * @returns {Promise<Object|null>} An object containing the precuration data if found, otherwise null.\n */\nexport const getPrecurationByHGNCIdOrSymbol = async (identifier) => {\n  const precurationsRef = collection(db, 'precurations');\n  const symbolQuery = query(precurationsRef, where(\"approved_symbol\", \"==\", identifier));\n  const hgncQuery = query(precurationsRef, where(\"hgnc_id\", \"==\", identifier));\n\n  const symbolSnapshot = await getDocs(symbolQuery);\n  const hgncSnapshot = await getDocs(hgncQuery);\n\n  let precurationData = null;\n  symbolSnapshot.forEach((doc) => {\n    if (doc.exists()) {\n      precurationData = { id: doc.id, ...doc.data() };\n    }\n  });\n\n  if (!precurationData) {\n    hgncSnapshot.forEach((doc) => {\n      if (doc.exists()) {\n        precurationData = { id: doc.id, ...doc.data() };\n      }\n    });\n  }\n\n  return precurationData;\n};\n\n\n/**\n * Updates a precuration document in Firestore with the given data.\n * @param {string} docId - The document ID of the precuration to update.\n * @param {Object} updatedData - An object containing the updated data.\n * @param {string} userId - The ID of the user updating the precuration.\n * @param {Object} config - The precuration details configuration.\n * @returns {Promise<void>}\n */\nexport const updatePrecuration = async (docId, updatedData, userId, config) => {\n  const validationErrors = validatePrecurationData(updatedData, config);\n  if (validationErrors.length > 0) {\n    throw new Error(`Validation failed: ${validationErrors.join(' ')}`);\n  }\n\n  const precurationRef = doc(db, 'precurations', docId);\n  const docSnap = await getDoc(precurationRef);\n\n  if (!docSnap.exists()) {\n    throw new Error(\"Precuration document not found\");\n  }\n\n  const existingData = docSnap.data();\n  const updatedUsers = updateUsersArray(existingData.users || [], userId);\n\n  await updateDoc(precurationRef, {\n    ...updatedData,\n    users: updatedUsers,\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n};\n\n\n/**\n * Deletes a specific precuration document from Firestore by its document ID.\n * @param {string} docId - The document ID of the precuration to delete.\n * @returns {Promise<void>}\n * @throws {Error} If the document is not found or cannot be deleted.\n */\nexport const deletePrecuration = async (docId) => {\n  const precurationRef = doc(db, 'precurations', docId);\n  await deleteDoc(precurationRef);\n};\n\n\n/**\n * Updates the users array with the given userId, maintaining order and uniqueness.\n * @param {Array} usersArray - The current array of user IDs.\n * @param {string} userId - The ID of the user to add or move in the array.\n * @returns {Array} The updated array of user IDs.\n */\nconst updateUsersArray = (usersArray, userId) => {\n  const newUsersArray = usersArray.filter(id => id !== userId);\n  newUsersArray.push(userId); // Add the userId at the end\n  return newUsersArray;\n};\n","<!-- components/CurationModal.vue -->\n<template>\n  <v-dialog v-model=\"isOpen\" persistent max-width=\"1200px\">\n    <v-card>\n      <div class=\"d-flex justify-space-between align-center\">\n        <v-card-title>\n          {{ title }} - {{ editedItem.approved_symbol }} - HGNC:{{ editedItem.hgnc_id }}\n          <GeneLinkChips\n            :hgnc-id=\"editedItem.hgnc_id\"\n            :gene-symbol=\"editedItem.approved_symbol\"\n            :links-to-show=\"['clingen', 'gencc', 'search_omim']\"\n          />\n        </v-card-title>\n        <v-btn icon @click=\"close\">\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n      </div>\n      <v-card-text>\n        <v-tabs v-model=\"tab\" grow>\n          <v-tab v-if=\"showPreCurationTab\">Pre-Curation</v-tab>\n          <v-tab v-if=\"showCurationTab\">Curation</v-tab>\n        </v-tabs>\n\n         <v-window v-model=\"tab\" style=\"min-height: 300px;\">\n          <v-window-item>\n            <!-- Gene Detail Card Component -->\n            <GeneDetailCard\n               v-if=\"showGeneDetailCard\"\n              :id=\"editedItem.hgnc_id\"\n              visibilityScope=\"curationView\"\n              :showTitle=\"false\"\n              @gene-data-loaded=\"handleGeneDataLoaded\"\n            />\n\n            <!-- Precuration Form Component -->\n            <PrecurationForm\n              v-if=\"geneData\"\n              :gene-object=\"geneData\"\n              @precuration-accepted=\"handlePrecurationAccepted\"\n            />\n          </v-window-item>\n\n          <v-window-item v-if=\"showCurationTab\">\n            <!-- CurationForm Component -->\n            <CurationForm\n              v-if=\"precurationDetails\"\n              :approvedSymbol=\"editedItem.approved_symbol\"\n              :hgncId=\"editedItem.hgnc_id\"\n              :precurationDetails=\"precurationDetails\"\n            />\n          </v-window-item>\n        </v-window>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"blue darken-1\" text @click=\"close\">Cancel</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n\n  <MessageSnackbar\n    v-model=\"snackbarVisible\"\n    :title=\"snackbarTitle\"\n    :message=\"snackbarMessage\"\n    :color=\"snackbarColor\"\n  />\n\n</template>\n\n\n<script>\nimport { ref, watchEffect, watch, computed } from 'vue';\nimport GeneDetailCard from './GeneDetailCard.vue';\nimport PrecurationForm from './PrecurationForm.vue';\nimport CurationForm from './CurationForm.vue'; // Import the CurationForm component\nimport { getPrecurationByHGNCIdOrSymbol } from '@/stores/precurationsStore';\nimport GeneLinkChips from './GeneLinkChips.vue'; // Import the GeneLinkChips component\n\nexport default {\n  components: {\n    GeneDetailCard,\n    PrecurationForm,\n    CurationForm,\n    GeneLinkChips\n  },\n  props: {\n    item: {\n      type: Object,\n      required: true,\n    },\n    open: {\n      type: Boolean,\n      required: true,\n    },\n    context: {\n      type: String,\n      default: 'gene' // Default context, can be 'gene', 'precuration', or 'curation'\n    },\n  },\n  emits: ['close'],\n  setup(props, { emit }) {\n    const isOpen = ref(props.open);\n    const editedItem = ref({ ...props.item });\n    const showGeneDetailCard = ref(true); // Controls the visibility of the gene detail card\n    const showPreCurationTab = ref(true); // Controls the visibility of the precuration tab\n    const showCurationTab = ref(false); // Controls the visibility of the curation tab\n    const tab = ref(0); // Controls the active tab\n\n    const snackbarVisible = ref(false);\n    const snackbarMessage = ref('');\n    const snackbarTitle = ref(''); // Add title state\n    const snackbarColor = ref('success');\n\n    const showSnackbar = (title, message, color = 'success') => {\n      snackbarTitle.value = title; // Set title\n      snackbarMessage.value = message;\n      snackbarColor.value = color;\n      snackbarVisible.value = true;\n    };\n\n    watchEffect(() => {\n      isOpen.value = props.open;\n      editedItem.value = { ...props.item };\n    });\n\n    const precurationDetails = ref(null);\n\n    const handlePrecurationAccepted = (precurationData) => {\n      if (props.context === 'precuration') {\n        close();\n      } else {\n        // Capture the precuration data\n        precurationDetails.value = precurationData;\n        showCurationTab.value = true;\n        tab.value = 1;\n      }\n    };\n\n    const close = () => emit('close');\n\n    const checkExistingCuration = async () => {\n      try {\n        const existingCuration = await getPrecurationByHGNCIdOrSymbol(editedItem.value.hgnc_id || editedItem.value.approved_symbol);\n        if (existingCuration) {\n          showCurationTab.value = true;\n          tab.value = 1; // Open Curation tab if curation exists\n        } else {\n          showCurationTab.value = false;\n          tab.value = 0; // Open Precuration tab if curation does not exist\n        }\n      } catch (error) {\n        showSnackbar(\"Error checking existing curation: \" + error.message, 'error');\n      }\n    };\n\n    // State to store fetched gene data\n    const geneData = ref(null); // State to store fetched gene data\n\n    const handleGeneDataLoaded = (data) => {\n      geneData.value = data; // Store the fetched gene data\n    };\n\n    // Computed property to determine the title of the modal\n    const title = computed(() => {\n      return props.context === 'curation' ? 'Curation' \n        : props.context === 'precuration' ? 'Precuration' \n        : 'Gene Curation';\n    });\n\n    // Watch for changes to the 'open' prop\n    watch(() => props.open, async (newVal) => {\n      if (newVal) { // If the modal is being opened\n        await initializeModal();\n      }\n    });\n\n    // Adjust the initial tab and content based on the context and existing curation\n    const initializeModal = async () => {\n      if (props.context === 'precuration') {\n        showGeneDetailCard.value = false;\n        showPreCurationTab.value = true;\n        showCurationTab.value = false;\n        tab.value = 0;\n      } else if (props.context === 'curation') {\n        showGeneDetailCard.value = false;\n        showPreCurationTab.value = false;\n        await checkExistingCuration(); // Check if there's an existing curation\n        // Set tab based on the existence of curation\n        tab.value = showCurationTab.value ? 1 : 0;\n      } else {\n        // For 'gene' context or other cases\n        await checkExistingCuration();\n      }\n    };\n\n    // Call initializeModal when the modal is opened\n    watch(() => props.open, (newVal) => {\n      if (newVal) {\n        initializeModal();\n      }\n    });\n\n    return {\n      initializeModal,\n      isOpen,\n      editedItem,\n      close,\n      handlePrecurationAccepted,\n      showGeneDetailCard,\n      showPreCurationTab,\n      showCurationTab,\n      tab,\n      showSnackbar,\n      snackbarVisible,\n      snackbarMessage,\n      snackbarTitle,\n      snackbarColor,\n      title,\n      handleGeneDataLoaded,\n      geneData,\n      precurationDetails\n    };\n  },\n};\n</script>\n\n\n<style scoped>\n/* Add styles if needed */\n</style>\n","<!-- components/PrecurationForm.vue -->\n<template>\n  <v-card class=\"elevation-2\">\n    <v-card-title>\n      Precuration\n      <HelpIcon :helpContent=\"helpContent\" />\n    </v-card-title>\n    <v-card-text>\n      <v-container>\n        <!-- Group the fields by the group attribute -->\n        <template v-for=\"(group, groupName) in groupedFields\" :key=\"groupName\">\n          <v-row v-if=\"groupHasVisibleFields(group)\">\n            <v-col cols=\"12\">\n              <h2>{{ groupName }}</h2>\n            </v-col>\n            <!-- Loop over fields within the same group and place them in columns -->\n            <v-col \n              v-for=\"(field, index) in group\" \n              :key=\"index\" \n              :cols=\"12 / group.length\"\n            >\n              <template v-if=\"field.format === 'boolean' && field.visibility.curationView\">\n                <v-switch\n                  v-model=\"precurationData[field.key]\"\n                  :label=\"field.label\"\n                  :false-value=\"false\"\n                  :true-value=\"true\"\n                  :color=\"field.style.curationView === 'switch' ? field.style.color : ''\"\n                  :class=\"{ 'inactive-switch': !precurationData[field.key] && field.style.curationView === 'switch' }\"\n                ></v-switch>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <template v-else-if=\"field.style && field.style.curationView === 'text-field' && field.visibility.curationView\">\n                <v-text-field\n                  v-model=\"precurationData[field.key]\"\n                  :label=\"field.label\"\n                  :class=\"field.style.curationView === 'text-field' ? 'custom-text-field' : ''\"\n                ></v-text-field>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <template v-else-if=\"field.style && field.style.curationView === 'select' && field.visibility.curationView\">\n                <v-select\n                  v-model=\"precurationData[field.key]\"\n                  :items=\"field.options\"\n                  :label=\"field.label\"\n                  :class=\"{\n                    'prefilled-field': decisionPrefilled && field.key === 'decision',\n                    'manually-changed-field': decisionManuallyChanged && field.key === 'decision'\n                  }\"\n                ></v-select>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <!-- Add other field types as needed -->\n            </v-col>\n          </v-row>\n        </template>\n        <v-row>\n          <v-col cols=\"12\" class=\"text-right\">\n            <v-btn color=\"primary\" @click=\"submitPrecuration\">Accept</v-btn>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-card-text>\n  </v-card>\n\n  <!-- message snackbar component -->\n  <MessageSnackbar\n    v-model=\"snackbarVisible\"\n    :title=\"snackbarTitle\"\n    :message=\"snackbarMessage\"\n    :color=\"snackbarColor\"\n  />\n</template>\n\n\n<script>\nimport { geneDetailsConfig, precurationDetailsConfig, workflowConfig, workflowConfigVersion, workflowConfigName } from '@/config/workflows/KidneyGeneticsGeneCuration/workflowConfig';\nimport {\n  getPrecurationByHGNCIdOrSymbol,\n  createPrecuration,\n  updatePrecuration\n} from \"@/stores/precurationsStore\";\nimport { updateGeneCurationStatus } from '@/stores/geneStore';\nimport HelpIcon from './HelpIcon.vue';\n\nexport default {\n  name: 'PrecurationForm',\n  props: {\n    geneObject: Object,\n  },\n  emits: ['precuration-accepted'],\n  components: {\n    HelpIcon,\n  },\n  data() {\n    return {\n      precurationData: this.initializePrecurationData(),\n      existingPrecurationId: null,\n      decisionPrefilled: false,\n      decisionManuallyChanged: false,\n      snackbarVisible: false,\n      snackbarMessage: '',\n      snackbarTitle: '',\n      snackbarColor: 'success',\n      helpContent: workflowConfig.stages.precuration.helpConfig,\n    };\n  },\n  computed: {\n    groupedFields() {\n      const fields = this.precurationFields;\n      const groups = {};\n\n      // Group fields by their 'group.name'\n      fields.forEach(field => {\n        if (!groups[field.group.name]) {\n          groups[field.group.name] = [];\n        }\n        groups[field.group.name].push(field);\n      });\n\n      // Sort groups by 'group.order'\n      Object.values(groups).forEach(group => {\n        group.sort((a, b) => a.group.order - b.group.order);\n      });\n\n      return groups;\n    },\n    precurationFields() {\n      let fields = Object.entries(precurationDetailsConfig)\n        .map(([key, config]) => ({ ...config, key }));\n      return fields;\n    },\n  },\n  watch: {\n    precurationData: {\n      deep: true,\n      handler() {\n        this.applyDecisionRules();\n      }\n    },\n    'precurationData.decision': 'onDecisionChange',\n  },\n  methods: {\n    showSnackbar(title, message, color = 'success') {\n      this.snackbarTitle = title;\n      this.snackbarMessage = message;\n      this.snackbarColor = color;\n      this.snackbarVisible = true;\n    },\n    applyDecisionRules() {\n      const decisionRule = workflowConfig.stages.precuration.decisionRules[0];\n      let trueCount = decisionRule.conditions.reduce((count, condition) => \n        this.precurationData[condition] ? count + 1 : count, 0);\n\n      if (trueCount >= decisionRule.threshold) {\n        // Apply prefilled decision only if the current decision matches the computed decision or is empty\n        if (this.precurationData.decision === decisionRule.decision || !this.precurationData.decision) {\n          this.precurationData.decision = decisionRule.decision;\n          this.decisionPrefilled = true;\n          this.decisionManuallyChanged = false;\n        }\n      } else {\n        // If conditions are not met and the decision was prefilled, reset the decision prefilled status\n        if (this.decisionPrefilled) {\n          this.decisionPrefilled = false;\n        }\n      }\n    },\n    onDecisionChange(newValue) {\n      const decisionRule = workflowConfig.stages.precuration.decisionRules[0];\n      let trueCount = decisionRule.conditions.reduce((count, condition) => \n        this.precurationData[condition] ? count + 1 : count, 0);\n\n      const computedDecision = trueCount >= decisionRule.threshold ? decisionRule.decision : '';\n\n      this.decisionManuallyChanged = newValue !== computedDecision;\n\n      if (this.decisionManuallyChanged) {\n        this.updateCommentField(\"Decision manually overridden.\");\n      } else {\n        this.removeCommentOverride();\n      }\n    },\n    updateCommentField(overrideMessage) {\n      if (!this.precurationData.comment.includes(overrideMessage)) {\n        this.precurationData.comment += (this.precurationData.comment ? \" \" : \"\") + overrideMessage;\n      }\n    },\n    removeCommentOverride() {\n      const overrideMessage = \"Decision manually overridden.\";\n      if (this.precurationData.comment.includes(overrideMessage)) {\n        this.precurationData.comment = this.precurationData.comment.replace(overrideMessage, \"\").trim();\n      }\n    },\n    groupHasVisibleFields(group) {\n      // This will check if there's at least one field in the group that should be visible\n      return group.some(field => field.visibility.curationView);\n    },\n    initializePrecurationData() {\n      const data = {};\n      Object.keys(precurationDetailsConfig).forEach(key => {\n        if (this.geneObject && key in this.geneObject) {\n          data[key] = this.geneObject[key];\n        } else {\n          data[key] = precurationDetailsConfig[key].format === 'boolean' ? false : '';\n        }\n      });\n\n      // Handling geneDetails as a nested object with the gene document ID as key\n      if (this.geneObject && this.geneObject.docId) {\n        const geneDocId = this.geneObject.docId;\n        const geneDetails = {};\n\n        // Populate geneDetails with relevant information from geneObject\n        Object.keys(geneDetailsConfig).forEach(detailKey => {\n          if (detailKey in this.geneObject) {\n            geneDetails[detailKey] = this.geneObject[detailKey];\n          }\n        });\n\n        // Set geneDetails with geneDocId as key\n        data['geneDetails'] = { [geneDocId]: geneDetails };\n      }\n\n      return data;\n    },\n    validatePrecurationData(precurationData) {\n      const errors = [];\n      for (const [key, field] of Object.entries(precurationDetailsConfig)) {\n        if (field.required && (precurationData[key] === undefined || precurationData[key] === '')) {\n          errors.push(`The field \"${field.label}\" is required.`);\n        }\n      }\n      return errors;\n    },\n    async submitPrecuration() {\n      const currentUserId = JSON.parse(localStorage.getItem('user')).uid;\n\n      try {\n        // Validate the precuration data\n        const validationErrors = this.validatePrecurationData(this.precurationData, precurationDetailsConfig);\n        if (validationErrors.length > 0) {\n          throw new Error(`Validation failed: ${validationErrors.join(' ')}`);\n        }\n\n        // Add timestamps for creation or update\n        const currentTime = new Date().toISOString();\n        let docId;\n        if (!this.existingPrecurationId) {\n          // If creating a new precuration\n          this.precurationData.createdAt = currentTime;\n          this.precurationData.workflowConfigVersionUsed = workflowConfigVersion;\n          this.precurationData.workflowConfigNameUsed = workflowConfigName;\n          docId = await createPrecuration(this.precurationData, currentUserId, precurationDetailsConfig);\n          this.showSnackbar('Success', 'New precuration created with ID:' + docId, 'success');\n        } else {\n          // If updating an existing precuration\n          this.precurationData.updatedAt = currentTime;\n          await updatePrecuration(this.existingPrecurationId, this.precurationData, currentUserId, precurationDetailsConfig);\n          docId = this.existingPrecurationId;\n          this.showSnackbar('Success', 'Precuration updated' + this.existingPrecurationId, 'success');\n        }\n\n        // Update gene curation status in the gene record\n        if (this.geneObject && this.geneObject.docId) {\n          await updateGeneCurationStatus(this.geneObject.docId, {\n            hasPrecuration: docId, // Provide the docId of the new or updated precuration\n            precuratedBy: currentUserId // Provide the userId as an array\n          });\n        }\n\n        // Emit an event to indicate successful submission, including the docId\n        this.$emit('precuration-accepted', { docId, ...this.precurationData });\n      } catch (error) {\n        this.showSnackbar('Error', error.message || \"There was an error submitting the precuration\", 'error');\n      }\n    },\n    displaySwitchValue(value) {\n      return value ? 'Yes' : 'No';\n    },\n  },\n  async created() {\n    // Ensure geneObject is available and has the necessary properties\n    if (this.geneObject && (this.geneObject.approved_symbol || this.geneObject.hgnc_id)) {\n      try {\n        // Use geneObject's approved_symbol or hgnc_id for the query\n        const identifier = this.geneObject.approved_symbol || this.geneObject.hgnc_id;\n        const precuration = await getPrecurationByHGNCIdOrSymbol(identifier);\n\n        if (precuration) {\n          this.existingPrecurationId = precuration.id;\n          Object.assign(this.precurationData, precuration);\n        }\n      } catch (error) {\n        this.showSnackbar('Error', 'Error fetching precuration: ' + error.message, 'error');\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Custom styles for text fields */\n.text-center {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n/* Custom styles for text fields */\n.inactive-switch {\n  --v-theme-switch-on-background: var(--v-theme-inactive-color);\n}\n\n/* Style for prefilled fields */\n.prefilled-field {\n  border: 2px solid orange; /* Orange border for prefilled fields */\n  /* Other styles as needed */\n}\n\n/* Style for manually changed fields */\n.manually-changed-field {\n  border: 2px solid purple; /* Purple border for manually changed fields */\n  /* Other styles as needed */\n}\n/* Additional styles can be added here if needed */\n</style>\n","<!-- components/HelpIcon.vue -->\n<template>\n  <v-tooltip bottom>\n    <template v-slot:activator=\"{ attrs }\">\n      <v-icon v-bind=\"attrs\" @click=\"dialog = true\">\n        mdi-help-circle-outline\n      </v-icon>\n    </template>\n    <span>Click for help</span>\n  </v-tooltip>\n  <!-- Listen for the update:modelValue event to sync the dialog state -->\n  <HelpDialog\n    :modelValue=\"dialog\"\n    @update:modelValue=\"value => dialog = value\"\n    :helpContent=\"helpContent\"\n  />\n</template>\n\n<script>\nimport HelpDialog from './HelpDialog.vue';\n\nexport default {\n  components: {\n    HelpDialog,\n  },\n  props: {\n    helpContent: {\n      type: Object,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      dialog: false,\n    };\n  },\n  methods: {\n    openHelpDialog() {\n      console.log(this.helpContent);\n      this.dialog = true;\n    },\n  },\n};\n</script>\n","<!-- components/HelpDialog.vue -->\n<template>\n  <v-dialog v-model=\"dialog\" max-width=\"600px\">\n    <v-card>\n      <v-card-title>{{ helpContent.HelpDialog.title }}</v-card-title>\n      <v-container>\n        <v-row>\n          <v-col v-for=\"section in helpContent.sections\" :key=\"section.header\" cols=\"12\">\n            <v-card outlined>\n              <v-card-title>{{ section.header }}</v-card-title>\n              <v-card-text v-html=\"section.content\"></v-card-text>\n              <v-card-actions v-if=\"section.links\">\n                <v-btn v-for=\"link in section.links\" :key=\"link.title\" :href=\"link.url\" text>\n                  {{ link.title }}\n                </v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n      <v-card-actions>\n        <v-spacer />\n        <v-btn color=\"primary\" @click=\"close\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  name: 'HelpDialog',\n  props: {\n    helpContent: {\n      type: Object,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      dialog: false,\n    };\n  },\n  emits: ['update:modelValue'],\n  methods: {\n    close() {\n      this.$emit('update:modelValue', false);\n    },\n  },\n};\n</script>\n","import { render } from \"./HelpDialog.vue?vue&type=template&id=9a24c2dc\"\nimport script from \"./HelpDialog.vue?vue&type=script&lang=js\"\nexport * from \"./HelpDialog.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./HelpIcon.vue?vue&type=template&id=08972e02\"\nimport script from \"./HelpIcon.vue?vue&type=script&lang=js\"\nexport * from \"./HelpIcon.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./PrecurationForm.vue?vue&type=template&id=697bd6de&scoped=true\"\nimport script from \"./PrecurationForm.vue?vue&type=script&lang=js\"\nexport * from \"./PrecurationForm.vue?vue&type=script&lang=js\"\n\nimport \"./PrecurationForm.vue?vue&type=style&index=0&id=697bd6de&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-697bd6de\"]])\n\nexport default __exports__","<!-- components/CurationForm.vue -->\n<template>\n  <v-card class=\"elevation-2\">\n    <v-card-title>\n      Curation\n      <v-btn icon class=\"add-curation-btn\" @click=\"addCurationEntity\">\n        <v-icon>mdi-plus</v-icon>\n      </v-btn>\n    </v-card-title>\n\n    <!-- Expansion Panels for multiple curation entities -->\n    <v-expansion-panels multiple>\n      <v-expansion-panel v-for=\"(curationData, index) in curationDataArray\" :key=\"`curation-${index}`\" :title=\"`Curation Entity ${ index + 1 }`\">\n          <v-expansion-panel-text>\n            <!-- Dynamic Field Rendering Based on Configuration -->\n            <template v-for=\"(group, groupName) in groupedFields\" :key=\"groupName\">\n              <v-row v-if=\"groupHasVisibleFields(group)\">\n                <v-col cols=\"12\">\n                  <h2>{{ groupName }}</h2>\n                </v-col>\n                <v-col\n                  v-for=\"(field, fieldIndex) in group\"\n                  :key=\"`field-${index}-${fieldIndex}`\"\n                  :cols=\"12 / group.length\"\n                >\n\n                  <!-- Handle Different Field Types -->\n                  <template v-if=\"field.format === 'text' && field.style && field.style.curationView === 'text-field'\">\n                    <v-text-field\n                      v-model=\"curationData[field.key]\"\n                      :rules=\"getFieldRules(field)\"\n                      :label=\"field.label\"\n                      outlined\n                      dense\n                    ></v-text-field>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <template v-else-if=\"field.format === 'boolean'\">\n                    <v-checkbox\n                      v-model=\"curationData[field.key]\"\n                      :rules=\"getFieldRules(field)\"\n                      :label=\"field.label\"\n                    ></v-checkbox>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <template v-else-if=\"field.format === 'number'\">\n                    <v-text-field\n                      v-model=\"curationData[field.key]\"\n                      :rules=\"getFieldRules(field)\"\n                      :label=\"field.label\"\n                      :min=\"field.min\"\n                      :max=\"field.max\"\n                      :step=\"field.step || 1\"\n                      type=\"number\"\n                      outlined\n                      dense\n                    ></v-text-field>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <template v-else-if=\"field.format === 'array' && field.style && field.style.curationView === 'select'\">\n                    <v-select\n                      v-model=\"curationData[field.key]\"\n                      :rules=\"getFieldRules(field)\"\n                      :items=\"field.options\"\n                      :label=\"field.label\"\n                      multiple\n                      outlined\n                      dense\n                    ></v-select>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <template v-else-if=\"field.format === 'text' && field.style && field.style.curationView === 'select'\">\n                    <v-select\n                      v-model=\"curationData[field.key]\"\n                      :items=\"field.options\"\n                      item-value=\"value\"\n                      item-text=\"title\"\n                      :label=\"field.label\"\n                      outlined\n                      dense\n                    ></v-select>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"top\"\n                    >\n                      {{ field.description }}\n                    </v-tooltip>\n                  </template>\n                  <!-- Add other field types as needed -->\n                </v-col>\n              </v-row>\n            </template>\n          </v-expansion-panel-text>\n      </v-expansion-panel>\n    </v-expansion-panels>\n\n    <v-card-actions>\n      <v-spacer></v-spacer>\n      <v-btn color=\"primary\" @click=\"saveCuration\">Save All</v-btn>\n    </v-card-actions>\n  </v-card>\n\n  <!-- message snackbar component -->\n  <MessageSnackbar\n    v-model=\"snackbarVisible\"\n    :title=\"snackbarTitle\"\n    :message=\"snackbarMessage\"\n    :color=\"snackbarColor\"\n  />\n</template>\n\n\n<script>\nimport { curationDetailsConfig } from '@/config/workflows/KidneyGeneticsGeneCuration/curationDetailsConfig';\nimport { workflowConfigVersion, workflowConfigName } from '@/config/workflows/KidneyGeneticsGeneCuration/workflowConfig';\nimport {\n  createCuration,\n  updateCuration,\n  getCurationsByHGNCIdOrSymbol\n} from \"@/stores/curationsStore\";\nimport { required, number, min, max } from '@/utils/validators';\nimport { updateGeneCurationStatus, getGeneByHGNCIdOrSymbol } from '@/stores/geneStore';\n\nexport default {\n  name: 'CurationForm',\n  props: {\n    approvedSymbol: String,\n    hgncId: String,\n    precurationDetails: Object,\n  },\n  data() {\n    return {\n      curationDataArray: [this.initializeCurationData()],\n      existingCurationId: null,\n      snackbarVisible: false,\n      snackbarMessage: '',\n      snackbarTitle: '',\n      snackbarColor: 'success',\n    };\n  },\n  async created() {\n    if (this.hgncId || this.approvedSymbol) {\n      try {\n        const curations = await getCurationsByHGNCIdOrSymbol(this.hgncId || this.approvedSymbol);\n        if (curations.length > 0) {\n          this.curationDataArray = curations.map(curation => Object.assign(this.initializeCurationData(), curation));\n        } else {\n          this.curationDataArray = [this.initializeCurationData()];\n        }\n      } catch (error) {\n        this.showSnackbar('Error', `Error fetching curations: ${error.message}`, 'error');\n      }\n    } else {\n      this.curationDataArray = [this.initializeCurationData()];\n    }\n  },\n  computed: {\n    groupedFields() {\n      const fields = Object.entries(curationDetailsConfig)\n        .map(([key, config]) => ({ ...config, key }));\n      \n      const groups = {};\n      fields.forEach(field => {\n        if (!groups[field.group.name]) {\n          groups[field.group.name] = [];\n        }\n        groups[field.group.name].push(field);\n      });\n\n      Object.values(groups).forEach(group => {\n        group.sort((a, b) => a.group.order - b.group.order);\n      });\n\n      return groups;\n    },\n  },\n  methods: {\n    getFieldRules(field) {\n      const rules = [];\n      if (field.required) {\n        rules.push(required);\n      }\n      if (field.format === 'number') {\n        rules.push(number);\n        if (field.min !== undefined) {\n          rules.push(min(field.min));\n        }\n        if (field.max !== undefined) {\n          rules.push(max(field.max));\n        }\n      }\n      return rules;\n    }\n    ,\n    showSnackbar(title, message, color = 'success') {\n      this.snackbarTitle = title;\n      this.snackbarMessage = message;\n      this.snackbarColor = color;\n      this.snackbarVisible = true;\n    },\n    groupHasVisibleFields(group) {\n      // This will check if there's at least one field in the group that should be visible\n      return group.some(field => field.visibility.curationView);\n    },\n    addCurationEntity() {\n      this.curationDataArray.push(this.initializeCurationData());\n    },\n    initializeCurationData() {\n      const data = {};\n      Object.keys(curationDetailsConfig).forEach(key => {\n        const field = curationDetailsConfig[key];\n        if (field.format === 'boolean') {\n          data[key] = false;\n        } else if (field.format === 'number') {\n          data[key] = field.min || 0; // Use min value if defined, otherwise default to 0\n        } else if (field.format === 'array' && field.style && field.style.curationView === 'select') {\n          data[key] = [];\n        } else if (field.format === 'text' && field.style && field.style.curationView === 'select') {\n          data[key] = null;\n        } else {\n          data[key] = '';\n        }\n\n        // Prefill approved_symbol and hgnc_id if provided as props\n        if (key === 'approved_symbol' && this.approvedSymbol) {\n          data[key] = this.approvedSymbol;\n        }\n        if (key === 'hgnc_id' && this.hgncId) {\n          data[key] = this.hgncId;\n        }\n      });\n\n      // Add precuration data as nested object using docId as key\n      if (this.precurationDetails && this.precurationDetails.docId) {\n        const precurationDocId = this.precurationDetails.docId;\n        // Creating a nested object with docId as key\n        data['precurationDetails'] = { [precurationDocId]: this.precurationDetails };\n      }\n\n      return data;\n    },\n    validateCurationData(curationData) {\n      const errors = [];\n      for (const [key, field] of Object.entries(curationDetailsConfig)) {\n        if (field.required && !curationData[key]) {\n          errors.push(`The field \"${field.label}\" is required.`);\n        }\n      }\n      return errors;\n    },\n    async saveCuration() {\n      const currentUserId = JSON.parse(localStorage.getItem('user')).uid; // Retrieve the current user's ID\n\n      try {\n        for (const curationData of this.curationDataArray) {\n          // Include the workflow configuration version and name in the curation record\n          curationData.workflowConfigVersionUsed = workflowConfigVersion;\n          curationData.workflowConfigNameUsed = workflowConfigName;\n\n          let curationDocId = curationData.id; // Get the curation doc ID if it already exists\n          let geneDocId; // Declare a variable to store gene document ID\n\n          // If precurationDetails exist, retrieve the geneDocId from the nested geneDetails object\n          if (this.precurationDetails && this.precurationDetails.geneDetails) {\n            const geneDetailsKeys = Object.keys(this.precurationDetails.geneDetails);\n            if (geneDetailsKeys.length > 0) {\n              // Assuming geneDetails is an object with a single key that is the geneDocId\n              geneDocId = geneDetailsKeys[0];\n            }\n          }\n\n          // If geneDocId is still not determined, fetch it from the store\n          if (!geneDocId) {\n            // This function should be created to get the gene document ID based on the gene identifier (approvedSymbol or hgncId)\n            geneDocId = await this.getGeneDocIdByGeneIdentifier(this.approvedSymbol || this.hgncId);\n          }\n\n          // Update or create the curation document\n          if (curationDocId) {\n            // Update existing curation\n            await updateCuration(curationDocId, curationData, currentUserId, curationDetailsConfig);\n            this.showSnackbar('Success', `Curation updated: ${curationDocId}`, 'success');\n          } else {\n            // Create new curation\n            curationDocId = await createCuration(curationData, currentUserId, curationDetailsConfig);\n            this.showSnackbar('Success', `New curation created with ID: ${curationDocId}`, 'success');\n            curationData.id = curationDocId; // Update the ID in the curation data array\n          }\n\n          // Update the gene curation status\n          if (geneDocId) {\n            await updateGeneCurationStatus(geneDocId, {\n              hasCuration: curationDocId,\n              curatedBy: currentUserId\n            });\n          }\n        }\n      } catch (error) {\n        this.showSnackbar('Error', `Error saving curation: ${error.message}`, 'error');\n      }\n    },\n    // Helper function to fetch the gene document ID from the store\n    async getGeneDocIdByGeneIdentifier(identifier) {\n      const geneData = await getGeneByHGNCIdOrSymbol(identifier);\n      return geneData ? geneData.docId : null;\n    },\n  },\n};\n</script>\n\n\n<style scoped>\nh2 {\n  font-size: 1.5em;\n  margin-bottom: 0.5em;\n}\n.add-curation-btn {\n  margin-left: auto; /* pushes the button to the right */\n}\n</style>\n","// utils/validators.js\n\nexport const required = value => !!value || 'This field is required';\n\nexport function email(message = \"This email is not valid\") {\n  return (v) =>\n    /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(v) || message;\n}\n\nexport const number = value => !isNaN(parseFloat(value)) && isFinite(value) || 'Must be a number';\n\nexport const min = minValue => value => parseFloat(value) >= minValue || `Minimum value is ${minValue}`;\n\nexport const max = maxValue => value => parseFloat(value) <= maxValue || `Maximum value is ${maxValue}`;\n","import { render } from \"./CurationForm.vue?vue&type=template&id=04967674&scoped=true\"\nimport script from \"./CurationForm.vue?vue&type=script&lang=js\"\nexport * from \"./CurationForm.vue?vue&type=script&lang=js\"\n\nimport \"./CurationForm.vue?vue&type=style&index=0&id=04967674&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-04967674\"]])\n\nexport default __exports__","<!-- components/GeneLinkChips.vue -->\n<template>\n  <div class=\"gene-links\">\n    <v-chip\n        v-for=\"link in activeLinks\"\n        :key=\"link.name\"\n        @click=\"goToLink(link.url)\"\n        size=\"small\"\n    >\n      {{ link.name }}\n    </v-chip>\n  </div>\n</template>\n\n\n<script>\nimport { computed, defineComponent } from 'vue';\n\n/**\n * A component that displays clickable link chips based on provided gene identifiers.\n */\nexport default defineComponent({\n  name: 'GeneLinkChips',\n  props: {\n    hgncId: {\n      type: String,\n      default: null\n    },\n    geneSymbol: {\n      type: String,\n      default: null\n    },\n    omimId: {\n      type: String,\n      default: null\n    },\n    linksToShow: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    /**\n     * Formats the provided ID with or without its prefix (HGNC: or OMIM:).\n     * @param {String} id - The ID to be formatted.\n     * @param {String} type - The type of ID (HGNC or OMIM).\n     * @param {Boolean} includePrefix - Whether to include the prefix in the ID.\n     * @returns {String|null} The formatted ID or null if the ID is not provided.\n     */\n    const formatId = (id, type, includePrefix) => {\n      if (!id) return null;\n      const prefix = type === 'HGNC' ? 'HGNC:' : type === 'OMIM' ? 'OMIM:' : '';\n      if (includePrefix && !id.startsWith(prefix)) {\n        return `${prefix}${id}`;\n      } else if (!includePrefix && id.startsWith(prefix)) {\n        return id.replace(prefix, '');\n      }\n      return id;\n    };\n\n    /**\n     * Configuration for generating URL links based on provided IDs.\n     */\n    const linkConfig = {\n      clingen: () => {\n        const formattedId = formatId(props.hgncId, 'HGNC', true);\n        return formattedId ? `https://search.clinicalgenome.org/kb/genes/${formattedId}` : null;\n      },\n      gencc: () => {\n        const formattedId = formatId(props.hgncId, 'HGNC', true);\n        return formattedId ? `https://search.thegencc.org/genes/${formattedId}` : null;\n      },\n      omim: () => {\n        const formattedId = formatId(props.omimId, 'OMIM', false);\n        return formattedId ? `https://www.omim.org/entry/${formattedId}` : null;\n      },\n      search_omim: () => props.geneSymbol ? `https://www.omim.org/search?index=entry&start=1&limit=10&sort=score+desc%2C+prefix_sort+desc&search=${props.geneSymbol}` : null\n    };\n\n    /**\n     * Computed property to generate an array of active links based on `linksToShow` prop.\n     */\n    const activeLinks = computed(() => {\n      return props.linksToShow.map(linkKey => {\n        const url = linkConfig[linkKey] ? linkConfig[linkKey]() : null;\n        return {\n          name: linkKey,\n          url: url\n        };\n      }).filter(link => link.url);\n    });\n\n    /**\n     * Opens the provided URL in a new browser tab.\n     * @param {String} url - The URL to be opened.\n     */\n    const goToLink = (url) => {\n      if (url) window.open(url, '_blank');\n    };\n\n    return {\n      activeLinks,\n      goToLink\n    };\n  }\n});\n</script>\n\n\n<style scoped>\n/**\n * Styles for the gene link chips.\n * Each chip behaves like a hyperlink, with a pointer cursor and color change on hover.\n */\n.gene-links .v-chip {\n  cursor: pointer; /* Cursor like a link */\n  transition: background-color 0.3s ease; /* Smooth transition for background color */\n}\n\n.gene-links .v-chip:hover {\n  background-color: #1976D2; /* Change color on hover */\n  color: white; /* Change text color for better visibility */\n}\n</style>\n","import { render } from \"./GeneLinkChips.vue?vue&type=template&id=7939178d&scoped=true\"\nimport script from \"./GeneLinkChips.vue?vue&type=script&lang=js\"\nexport * from \"./GeneLinkChips.vue?vue&type=script&lang=js\"\n\nimport \"./GeneLinkChips.vue?vue&type=style&index=0&id=7939178d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7939178d\"]])\n\nexport default __exports__","import { render } from \"./CurationModal.vue?vue&type=template&id=6a0fdd7e&scoped=true\"\nimport script from \"./CurationModal.vue?vue&type=script&lang=js\"\nexport * from \"./CurationModal.vue?vue&type=script&lang=js\"\n\nimport \"./CurationModal.vue?vue&type=style&index=0&id=6a0fdd7e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6a0fdd7e\"]])\n\nexport default __exports__","<!-- components/DataDisplayTable.vue -->\n<template>\n  <v-container>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"items\"\n      v-model:items-per-page=\"itemsPerPage\"\n      :server-items-length=\"totalItems\"\n      :loading=\"loading\"\n      class=\"elevation-1\"\n      density=\"compact\"\n    >\n      <!-- Header slot -->\n      <template v-for=\"h in headers\" v-slot:[`header.${h.value}`]=\"{ header }\" :key=\"h.value\">\n            <span>{{h.title}}</span>\n            <v-tooltip\n              v-bind:header=\"header\"\n              v-if=\"h.description\"\n              activator=\"parent\"\n              location=\"top\"\n            >\n              {{ h.description }}\n            </v-tooltip>\n      </template>\n\n      <!-- Default slot for items -->\n      <template v-for=\"column in config.columns\" v-slot:[`item.${column.name}`]=\"{ item }\" :key=\"column.name\">\n        <!-- Handle text formatting -->\n        <div v-if=\"column.type === 'text'\">\n          {{ item[column.name] }}\n        </div>\n        <!-- Handle date formatting -->\n        <div v-else-if=\"column.type === 'date'\">\n          {{ formatTimestamp(item[column.name]) }}\n        </div>\n        <!-- Handle link formatting -->\n        <router-link v-else-if=\"column.type === 'link'\" :to=\"column.to(item)\">\n          {{ item[column.name] }}\n        </router-link>\n        <!-- Handle boolean formatting -->\n        <template v-else-if=\"column.type === 'slot'\">\n          <slot :name=\"column.slotName\" :item=\"item\"></slot>\n        </template>\n      </template>\n    </v-data-table>\n    \n    <!-- Modal slot -->\n    <slot name=\"modal\"></slot>\n\n    <!-- Pagination controls -->\n    <v-pagination\n      v-model=\"page\"\n      :length=\"totalPages\"\n      @update:page=\"$emit('update-page', page)\"\n    ></v-pagination>\n  </v-container>\n</template>\n\n<script>\nimport { ref, computed, watch } from 'vue';\n\n/**\n * A generic data table component for displaying items with configurable columns\n * and pagination.\n */\nexport default {\n  props: {\n    headers: Array, // The headers for the table\n    items: Array, // The items to display in the table\n    config: Object, // Configuration for the columns\n    totalItems: Number, // Total number of items for pagination\n    loading: Boolean, // Loading state\n  },\n  setup(props, { emit }) {\n    const page = ref(1); // Current page number\n    const itemsPerPage = ref(10); // Number of items per page\n\n    // Compute the total number of pages\n    const totalPages = computed(() => Math.ceil(props.totalItems / itemsPerPage.value));\n\n    // Method to format Firestore Timestamp\n    const formatTimestamp = (timestamp) => {\n      if (!timestamp) return '';\n      const date = new Date(timestamp.seconds * 1000);\n      return date.toLocaleDateString(); // Adjust format as needed\n    };\n\n    // Watch for changes in page and itemsPerPage and emit events\n    watch(page, () => {\n      emit('page-changed', page.value);\n    });\n\n    watch(itemsPerPage, () => {\n      emit('items-per-page-changed', itemsPerPage.value);\n    });\n\n    return {\n      page,\n      itemsPerPage,\n      totalPages,\n      formatTimestamp\n    };\n  },\n};\n</script>\n","import { render } from \"./DataDisplayTable.vue?vue&type=template&id=0c13b056\"\nimport script from \"./DataDisplayTable.vue?vue&type=script&lang=js\"\nexport * from \"./DataDisplayTable.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- components/GeneDetailCard.vue -->\n<template>\n  <v-container>\n    <v-card v-if=\"gene\" class=\"mx-auto my-4\" max-width=\"800\">\n      <v-card-title v-if=\"showTitle\" class=\"headline\">{{ gene.approved_symbol }}</v-card-title>\n      <v-card-text>\n        <v-table density=\"compact\">\n          <tbody>\n            <template v-for=\"(value, key) in filteredGeneDetails\" :key=\"key\">\n              <tr>\n                <td>\n                  <strong>\n                    <span class=\"label-hover\" :title=\"value.description\">{{ value.label }}</span>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"start\"\n                    >\n                      {{ value.description }}\n                    </v-tooltip>\n                  </strong>\n                </td>\n                <td v-html=\"value.formattedValue\"></td>\n              </tr>\n            </template>\n          </tbody>\n        </v-table>\n      </v-card-text>\n    </v-card>\n    <v-alert v-else type=\"error\">\n      Gene not found or failed to load.\n    </v-alert>\n  </v-container>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport { getGeneByHGNCIdOrSymbol } from '@/stores/geneStore';\nimport { geneDetailsConfig } from '@/config/workflows/KidneyGeneticsGeneCuration/workflowConfig';\n\nexport default {\n  props: {\n    id: String,\n    visibilityScope: {\n      type: String,\n      default: 'standardView', // or 'curationView'\n    },\n    showTitle: { // New prop for showing the card title\n      type: Boolean,\n      default: true,\n    },\n  },\n  setup(props, { emit }) {\n    const gene = ref(null);\n\n    onMounted(async () => {\n      if (props.id) {\n        try {\n          const fetchedGene = await getGeneByHGNCIdOrSymbol(props.id);\n          gene.value = fetchedGene;\n          emit('gene-data-loaded', fetchedGene); // Emit an event with the gene data\n        } catch (error) {\n          console.error('Error fetching gene:', error.message);\n        }\n      }\n    });\n\n    const filteredGeneDetails = computed(() => {\n      if (!gene.value) return [];\n\n      return Object.entries(geneDetailsConfig)\n        .filter(([, fieldConfig]) => fieldConfig.visibility[props.visibilityScope])\n        .map(([key, fieldConfig]) => {\n          const value = gene.value[key];\n          return {\n            label: fieldConfig.label,\n            description: fieldConfig.description || '',\n            formattedValue: formatValue(value, fieldConfig),\n          };\n        });\n    });\n\n    // for now objects and arrays are formatted into a readable string format\n    // TODO: add support for formatting objects and arrays into a table\n    function formatValue(value, fieldConfig) {\n      if (value == null) return 'N/A'; // Handle null and undefined values\n\n      switch (fieldConfig.format) {\n        case 'date':\n          return new Date(value.seconds * 1000).toLocaleDateString();\n        case 'number':\n          return parseFloat(value).toFixed(2);\n        case 'array':\n          return value.join(', ');\n        case 'map':\n          return Object.entries(value).map(([k, v]) => `${k}: ${v}`).join(', ');\n        case 'text':\n          return value;\n        default:\n          return JSON.stringify(value);\n      }\n    }\n\n    return { gene, filteredGeneDetails };\n  },\n};\n</script>\n\n<style scoped>\n.label-hover {\n  cursor: help;\n}\n\n.v-simple-table {\n  max-height: 300px;\n  overflow-y: auto;\n}\n</style>\n","import { render } from \"./GeneDetailCard.vue?vue&type=template&id=7c36e5a8&scoped=true\"\nimport script from \"./GeneDetailCard.vue?vue&type=script&lang=js\"\nexport * from \"./GeneDetailCard.vue?vue&type=script&lang=js\"\n\nimport \"./GeneDetailCard.vue?vue&type=style&index=0&id=7c36e5a8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7c36e5a8\"]])\n\nexport default __exports__"],"names":["getCurations","async","querySnapshot","getDocs","collection","db","curations","forEach","docSnapshot","exists","Error","id","data","validateCurationData","curationData","config","errors","key","field","Object","entries","value","required","push","label","format","undefined","min","max","createCuration","userId","length","join","checkForExistingCuration","approvedSymbol","approved_symbol","disease","inheritance","docRef","addDoc","users","createdAt","Timestamp","fromDate","Date","updatedAt","updateCuration","docId","updatedData","curationRef","doc","docSnap","getDoc","existingData","updatedUsers","updateUsersArray","updateDoc","deleteCuration","deleteDoc","getCurationsByHGNCIdOrSymbol","curationsRef","symbolQuery","query","where","identifier","hgncQuery","curationDataArray","addToCurationDataArray","symbolSnapshot","hgncSnapshot","usersArray","newUsersArray","filter","q","empty","validatePrecurationData","precurationData","getPrecurations","precurations","createPrecuration","validationErrors","getPrecurationByHGNCIdOrSymbol","precurationsRef","updatePrecuration","precurationRef","deletePrecuration","class","_createVNode","_component_v_dialog","$setup","isOpen","$event","persistent","_component_v_card","_createElementVNode","_hoisted_1","_component_v_card_title","title","_toDisplayString","editedItem","hgnc_id","_component_GeneLinkChips","_component_v_btn","icon","onClick","close","_component_v_icon","_component_v_card_text","_component_v_tabs","tab","grow","showPreCurationTab","_createBlock","_component_v_tab","showCurationTab","_component_v_window","style","_component_v_window_item","showGeneDetailCard","_component_GeneDetailCard","visibilityScope","showTitle","onGeneDataLoaded","handleGeneDataLoaded","geneData","_component_PrecurationForm","onPrecurationAccepted","handlePrecurationAccepted","precurationDetails","_component_CurationForm","hgncId","_component_v_card_actions","_component_v_spacer","color","text","_component_MessageSnackbar","snackbarVisible","snackbarTitle","message","snackbarMessage","snackbarColor","_component_HelpIcon","helpContent","$data","_component_v_container","_createElementBlock","_Fragment","_renderList","$options","groupedFields","group","groupName","groupHasVisibleFields","_component_v_row","_component_v_col","cols","index","visibility","curationView","_component_v_switch","_normalizeClass","_component_v_tooltip","activator","location","description","_component_v_text_field","_component_v_select","items","options","decisionPrefilled","decisionManuallyChanged","submitPrecuration","bottom","_withCtx","attrs","_mergeProps","_cache","dialog","_component_HelpDialog","modelValue","$props","HelpDialog","sections","section","header","outlined","innerHTML","content","links","link","href","url","name","props","type","emits","methods","this","$emit","__exports__","components","openHelpDialog","console","log","geneObject","HelpIcon","initializePrecurationData","existingPrecurationId","workflowConfig","stages","precuration","helpConfig","computed","fields","precurationFields","groups","values","sort","a","b","order","precurationDetailsConfig","map","watch","deep","handler","applyDecisionRules","showSnackbar","decisionRule","decisionRules","trueCount","conditions","reduce","count","condition","threshold","decision","onDecisionChange","newValue","computedDecision","updateCommentField","removeCommentOverride","overrideMessage","comment","includes","replace","trim","some","keys","geneDocId","geneDetails","geneDetailsConfig","detailKey","currentUserId","JSON","parse","localStorage","getItem","uid","currentTime","toISOString","workflowConfigVersionUsed","workflowConfigVersion","workflowConfigNameUsed","workflowConfigName","updateGeneCurationStatus","hasPrecuration","precuratedBy","error","displaySwitchValue","created","assign","addCurationEntity","_component_v_expansion_panels","multiple","_component_v_expansion_panel","_component_v_expansion_panel_text","fieldIndex","rules","getFieldRules","dense","_component_v_checkbox","step","saveCuration","number","isNaN","parseFloat","isFinite","minValue","maxValue","String","initializeCurationData","existingCurationId","curation","curationDetailsConfig","precurationDocId","curationDocId","geneDetailsKeys","getGeneDocIdByGeneIdentifier","hasCuration","curatedBy","getGeneByHGNCIdOrSymbol","_ctx","activeLinks","_component_v_chip","goToLink","size","defineComponent","default","geneSymbol","omimId","linksToShow","Array","setup","formatId","includePrefix","prefix","startsWith","linkConfig","clingen","formattedId","gencc","omim","search_omim","linkKey","window","open","GeneDetailCard","PrecurationForm","CurationForm","GeneLinkChips","item","Boolean","context","emit","ref","watchEffect","checkExistingCuration","existingCuration","newVal","initializeModal","render","_component_v_data_table","headers","itemsPerPage","totalItems","loading","density","h","columns","column","_hoisted_2","formatTimestamp","_component_router_link","to","_renderSlot","$slots","slotName","_component_v_pagination","page","totalPages","Number","Math","ceil","timestamp","date","seconds","toLocaleDateString","gene","_component_v_table","filteredGeneDetails","formattedValue","_component_v_alert","onMounted","fetchedGene","fieldConfig","formatValue","toFixed","k","v","stringify"],"sourceRoot":""}