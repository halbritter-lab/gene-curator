{"version":3,"file":"js/334.d4823e6d.js","mappings":"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","sources":["webpack://gene-curator/./src/stores/precurationsStore.js","webpack://gene-curator/./src/components/DataDisplayTable.vue","webpack://gene-curator/./src/components/DataDisplayTable.vue?2290","webpack://gene-curator/./src/views/PreCurationTable.vue","webpack://gene-curator/./src/views/PreCurationTable.vue?160e"],"sourcesContent":["// stores/precurationsStore.js\nimport { collection, getDocs, getDoc, addDoc, doc, updateDoc, deleteDoc, Timestamp, query, where } from 'firebase/firestore';\nimport { db } from '@/firebase';\n\n\n/**\n * Fetches all precuration documents from the Firestore collection.\n * @returns {Promise<Object>} An object mapping document IDs to precuration data.\n */\nexport const getPrecurations = async () => {\n  const querySnapshot = await getDocs(collection(db, 'precurations'));\n  let precurations = {};\n\n  querySnapshot.forEach((docSnapshot) => {\n    precurations[docSnapshot.id] = docSnapshot.data();\n  });\n\n  return precurations;\n};\n\n\n/**\n * Creates a new precuration document in Firestore with the given data.\n * @param {Object} precurationData - The data for the new precuration.\n * @returns {Promise<string>} The ID of the newly created document.\n */\nexport const createPrecuration = async (precurationData) => {\n  const docRef = await addDoc(collection(db, 'precurations'), {\n    ...precurationData,\n    createdAt: Timestamp.fromDate(new Date()),\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n\n  return docRef.id;\n};\n\n\n/**\n * Retrieves a specific precuration document from Firestore by its document ID.\n * @param {string} docId - The document ID of the precuration to retrieve.\n * @returns {Promise<Object>} An object containing the precuration data.\n * @throws {Error} If the document is not found.\n */\nexport const getPrecuration = async (docId) => {\n  const precurationRef = doc(db, 'precurations', docId);\n  const docSnap = await getDoc(precurationRef);\n\n  if (docSnap.exists()) {\n    return { id: docSnap.id, ...docSnap.data() };\n  } else {\n    throw new Error(\"Precuration document not found\");\n  }\n};\n\n\n/**\n * Retrieves a specific precuration document from Firestore by either the approved symbol or HGNC ID.\n * @param {string} identifier - The approved symbol or HGNC ID to search for.\n * @returns {Promise<Object|null>} An object containing the precuration data if found, otherwise null.\n */\nexport const getPrecurationByHGNCIdOrSymbol = async (identifier) => {\n  const precurationsRef = collection(db, 'precurations');\n  const symbolQuery = query(precurationsRef, where(\"approved_symbol\", \"==\", identifier));\n  const hgncQuery = query(precurationsRef, where(\"hgnc_id\", \"==\", identifier));\n\n  const symbolSnapshot = await getDocs(symbolQuery);\n  const hgncSnapshot = await getDocs(hgncQuery);\n\n  let precurationData = null;\n  symbolSnapshot.forEach((doc) => {\n    if (doc.exists()) {\n      precurationData = { id: doc.id, ...doc.data() };\n    }\n  });\n\n  if (!precurationData) {\n    hgncSnapshot.forEach((doc) => {\n      if (doc.exists()) {\n        precurationData = { id: doc.id, ...doc.data() };\n      }\n    });\n  }\n\n  return precurationData;\n};\n\n\n/**\n * Updates a precuration document in Firestore with the given data.\n * @param {string} docId - The document ID of the precuration to update.\n * @param {Object} updatedData - An object containing the updated data.\n * @returns {Promise<void>}\n */\nexport const updatePrecuration = async (docId, updatedData) => {\n  const precurationRef = doc(db, 'precurations', docId);\n  await updateDoc(precurationRef, {\n    ...updatedData,\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n};\n\n\n/**\n * Deletes a specific precuration document from Firestore by its document ID.\n * @param {string} docId - The document ID of the precuration to delete.\n * @returns {Promise<void>}\n * @throws {Error} If the document is not found or cannot be deleted.\n */\nexport const deletePrecuration = async (docId) => {\n  const precurationRef = doc(db, 'precurations', docId);\n  await deleteDoc(precurationRef);\n};\n","<!-- components/DataDisplayTable.vue -->\n<template>\n  <v-container>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"items\"\n      v-model:items-per-page=\"itemsPerPage\"\n      :server-items-length=\"totalItems\"\n      :loading=\"loading\"\n      class=\"elevation-1\"\n      density=\"compact\"\n    >\n      <!-- Header slot -->\n      <template v-for=\"h in headers\" v-slot:[`header.${h.value}`]=\"{ header }\" :key=\"h.value\">\n            <span>{{h.title}}</span>\n            <v-tooltip\n              v-bind:header=\"header\"\n              v-if=\"h.description\"\n              activator=\"parent\"\n              location=\"top\"\n            >\n              {{ h.description }}\n            </v-tooltip>\n      </template>\n\n      <!-- Default slot for items -->\n      <template v-for=\"column in config.columns\" v-slot:[`item.${column.name}`]=\"{ item }\" :key=\"column.name\">\n        <!-- Handle text formatting -->\n        <div v-if=\"column.type === 'text'\">\n          {{ item[column.name] }}\n        </div>\n        <!-- Handle date formatting -->\n        <div v-else-if=\"column.type === 'date'\">\n          {{ formatTimestamp(item[column.name]) }}\n        </div>\n        <!-- Handle boolean formatting -->\n        <router-link v-else-if=\"column.type === 'link'\" :to=\"column.to(item)\">\n          {{ item[column.name] }}\n        </router-link>\n        <!-- Handle boolean formatting -->\n        <template v-else-if=\"column.type === 'slot'\">\n          <slot :name=\"column.slotName\" :item=\"item\"></slot>\n        </template>\n      </template>\n    </v-data-table>\n    \n    <!-- Modal slot -->\n    <slot name=\"modal\"></slot>\n\n    <!-- Pagination controls -->\n    <v-pagination\n      v-model=\"page\"\n      :length=\"totalPages\"\n      @update:page=\"$emit('update-page', page)\"\n    ></v-pagination>\n  </v-container>\n</template>\n\n<script>\nimport { ref, computed, watch } from 'vue';\n\n/**\n * A generic data table component for displaying items with configurable columns\n * and pagination.\n */\nexport default {\n  props: {\n    headers: Array, // The headers for the table\n    items: Array, // The items to display in the table\n    config: Object, // Configuration for the columns\n    totalItems: Number, // Total number of items for pagination\n    loading: Boolean, // Loading state\n  },\n  setup(props, { emit }) {\n    const page = ref(1); // Current page number\n    const itemsPerPage = ref(10); // Number of items per page\n\n    // Compute the total number of pages\n    const totalPages = computed(() => Math.ceil(props.totalItems / itemsPerPage.value));\n\n    // Method to format Firestore Timestamp\n    const formatTimestamp = (timestamp) => {\n      if (!timestamp) return '';\n      const date = new Date(timestamp.seconds * 1000);\n      return date.toLocaleDateString(); // Adjust format as needed\n    };\n\n    // Watch for changes in page and itemsPerPage and emit events\n    watch(page, () => {\n      emit('page-changed', page.value);\n    });\n\n    watch(itemsPerPage, () => {\n      emit('items-per-page-changed', itemsPerPage.value);\n    });\n\n    return {\n      page,\n      itemsPerPage,\n      totalPages,\n      formatTimestamp\n    };\n  },\n};\n</script>\n","import { render } from \"./DataDisplayTable.vue?vue&type=template&id=7f99aeb9\"\nimport script from \"./DataDisplayTable.vue?vue&type=script&lang=js\"\nexport * from \"./DataDisplayTable.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--components/PreCurationTable.vue-->\n<template>\n  <v-container>\n    <h1>Pre-Curation Table</h1>\n\n    <!-- Data table component -->\n    <DataDisplayTable\n      :headers=\"headers\"\n      :items=\"paginatedItems\"\n      :config=\"tableConfig\"\n      :total-items=\"totalItems\"\n      :loading=\"loading\"\n      @action=\"handleAction\"\n      @page-changed=\"updatePage\"\n      @items-per-page-changed=\"updateItemsPerPage\"\n    >\n      <template v-slot:action-slot=\"{ item }\">\n        <v-btn color=\"primary\" @click=\"openModal(item)\">Edit</v-btn>\n        <v-btn color=\"error\" @click=\"deleteItem(item)\">Delete</v-btn>\n      </template>\n\n      <template v-slot:modal>\n        <!-- Your modal component here -->\n      </template>\n    </DataDisplayTable>\n  </v-container>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport DataDisplayTable from '@/components/DataDisplayTable.vue';\nimport { getPrecurations, deletePrecuration } from '@/stores/precurationsStore';\n\nexport default {\n  name: 'PreCurationTable',\n  components: {\n    DataDisplayTable\n  },\n  setup() {\n    const rawItems = ref({});\n    const loading = ref(false);\n    const page = ref(1);\n    const itemsPerPage = ref(10);\n\n    const totalItems = computed(() => Object.keys(rawItems.value).length);\n    const paginatedItems = computed(() => {\n      const start = (page.value - 1) * itemsPerPage.value;\n      const end = start + itemsPerPage.value;\n      return Object.values(rawItems.value).slice(start, end);\n    });\n\n    const headers = [\n      { title: 'Approved Symbol', value: 'approved_symbol' },\n      { title: 'Decision', value: 'decision' },\n      { title: 'Created', value: 'createdAt' },\n    ];\n\n    const tableConfig = {\n      columns: [\n        {\n          name: 'approved_symbol',\n          type: 'link', // Types can be 'text', 'link', 'action', etc.\n          to: item => `/gene/${item.hgnc_id}` // Function to generate the link\n        },\n        {\n          name: 'createdAt',\n          type: 'date'\n        },\n      ]\n    };\n\n    const updatePage = (newPage) => {\n      page.value = newPage;\n    };\n\n    const updateItemsPerPage = (newItemsPerPage) => {\n      itemsPerPage.value = newItemsPerPage;\n    };\n\n    const handleAction = (action, item) => {\n      console.log(`Action: ${action} for item:`, item);\n      // Implement action handling logic here\n    };\n\n    const deleteItem = async (item) => {\n      // Implement deletion logic here\n      await deletePrecuration(item.id);\n      // Refresh the list or handle UI update\n    };\n\n    onMounted(async () => {\n      loading.value = true;\n      rawItems.value = await getPrecurations();\n      console.log('Precurations:', rawItems.value);\n      loading.value = false;\n    });\n\n    return {\n      headers,\n      paginatedItems,\n      tableConfig,\n      totalItems,\n      loading,\n      updatePage,\n      updateItemsPerPage,\n      handleAction,\n      deleteItem\n    };\n  },\n};\n</script>\n\n<style scoped>\n/* Add your CSS styling here */\n</style>\n","import { render } from \"./PreCurationTable.vue?vue&type=template&id=4da754e0&scoped=true\"\nimport script from \"./PreCurationTable.vue?vue&type=script&lang=js\"\nexport * from \"./PreCurationTable.vue?vue&type=script&lang=js\"\n\nimport \"./PreCurationTable.vue?vue&type=style&index=0&id=4da754e0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4da754e0\"]])\n\nexport default __exports__"],"names":["getPrecurations","async","querySnapshot","getDocs","collection","db","precurations","forEach","docSnapshot","id","data","createPrecuration","docRef","addDoc","precurationData","createdAt","Timestamp","fromDate","Date","updatedAt","getPrecurationByHGNCIdOrSymbol","precurationsRef","symbolQuery","query","where","identifier","hgncQuery","symbolSnapshot","hgncSnapshot","doc","exists","updatePrecuration","docId","updatedData","precurationRef","updateDoc","deletePrecuration","deleteDoc","_createBlock","_component_v_container","_createVNode","_component_v_data_table","headers","$props","items","$setup","itemsPerPage","$event","totalItems","loading","class","density","h","value","header","_createElementVNode","_toDisplayString","title","description","_component_v_tooltip","activator","location","config","columns","column","name","item","type","_createElementBlock","_hoisted_1","_hoisted_2","formatTimestamp","_component_router_link","to","_renderSlot","_ctx","$slots","slotName","_component_v_pagination","page","length","totalPages","_cache","$emit","props","Array","Object","Number","Boolean","setup","emit","ref","computed","Math","ceil","timestamp","date","seconds","toLocaleDateString","watch","__exports__","render","_component_DataDisplayTable","paginatedItems","tableConfig","onAction","handleAction","onPageChanged","updatePage","onItemsPerPageChanged","updateItemsPerPage","_withCtx","_component_v_btn","color","onClick","openModal","deleteItem","modal","components","DataDisplayTable","rawItems","keys","start","end","values","slice","hgnc_id","newPage","newItemsPerPage","action","console","log","onMounted"],"sourceRoot":""}