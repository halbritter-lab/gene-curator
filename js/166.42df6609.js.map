{"version":3,"file":"js/166.42df6609.js","mappings":"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","sources":["webpack://gene-curator/./src/stores/curationsStore.js","webpack://gene-curator/./src/stores/precurationsStore.js","webpack://gene-curator/./src/components/CurationModal.vue","webpack://gene-curator/./src/components/PrecurationForm.vue","webpack://gene-curator/./src/components/PrecurationForm.vue?14fe","webpack://gene-curator/./src/components/CurationForm.vue","webpack://gene-curator/./src/components/CurationForm.vue?096c","webpack://gene-curator/./src/components/CurationModal.vue?9e6d","webpack://gene-curator/./src/components/DataDisplayTable.vue","webpack://gene-curator/./src/components/DataDisplayTable.vue?2290","webpack://gene-curator/./src/components/GeneDetailCard.vue","webpack://gene-curator/./src/components/GeneDetailCard.vue?712e"],"sourcesContent":["// stores/curationsStore.js\nimport { collection, getDocs, getDoc, addDoc, doc, updateDoc, deleteDoc, Timestamp, query, where } from 'firebase/firestore';\nimport { db } from '@/firebase';\n\n\n/**\n * Fetches all curation documents from the Firestore 'curations' collection.\n * @returns {Promise<Object>} A promise that resolves to an object mapping document IDs to curation data.\n */\nexport const getCurations = async () => {\n  const querySnapshot = await getDocs(collection(db, 'curations'));\n  let curations = {};\n\n  querySnapshot.forEach((docSnapshot) => {\n    if (docSnapshot.exists()) {\n      // Include the document ID in the returned object\n      curations[docSnapshot.id] = { id: docSnapshot.id, ...docSnapshot.data() };\n    } else {\n      throw new Error(\"Curation document not found\");\n    }\n  });\n\n  return curations;\n};\n\n\n/**\n * Creates a new curation document in the Firestore 'curations' collection with the provided data.\n * @param {Object} curationData - The data to create a new curation document.\n * @returns {Promise<string>} A promise that resolves to the new document's ID.\n */\nexport const createCuration = async (curationData) => {\n  const docRef = await addDoc(collection(db, 'curations'), {\n    ...curationData,\n    createdAt: Timestamp.fromDate(new Date()),\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n\n  return docRef.id;\n};\n\n\n/**\n * Retrieves a specific curation document from Firestore using the document ID.\n * @param {string} docId - The document ID of the curation to retrieve.\n * @returns {Promise<Object>} A promise that resolves to an object containing the curation data, if found.\n * @throws {Error} If the document does not exist.\n */\nexport const getCuration = async (docId) => {\n  const curationRef = doc(db, 'curations', docId);\n  const docSnap = await getDoc(curationRef);\n\n  if (docSnap.exists()) {\n    return { id: docSnap.id, ...docSnap.data() };\n  } else {\n    throw new Error(\"Curation document not found\");\n  }\n};\n\n\n/**\n * Updates a specific curation document in Firestore with the provided data.\n * @param {string} docId - The document ID of the curation to update.\n * @param {Object} updatedData - An object containing the updated data for the curation.\n * @returns {Promise<void>} A promise that resolves once the update is complete.\n */\nexport const updateCuration = async (docId, updatedData) => {\n  const curationRef = doc(db, 'curations', docId);\n  await updateDoc(curationRef, {\n    ...updatedData,\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n};\n\n\n/**\n * Deletes a specific curation document from Firestore using the document ID.\n * @param {string} docId - The document ID of the curation to delete.\n * @returns {Promise<void>} A promise that resolves once the document is deleted.\n * @throws {Error} If the document does not exist or cannot be deleted.\n */\nexport const deleteCuration = async (docId) => {\n  const curationRef = doc(db, 'curations', docId);\n  await deleteDoc(curationRef);\n};\n\n\n/**\n * Retrieves a curation document from Firestore by either the approved symbol or HGNC ID.\n * @param {string} identifier - The approved symbol or HGNC ID to search for.\n * @returns {Promise<Object|null>} A promise that resolves to an object containing the curation data if found, otherwise null.\n */\nexport const getCurationByHGNCIdOrSymbol = async (identifier) => {\n    const curationsRef = collection(db, 'curations');\n    const symbolQuery = query(curationsRef, where(\"approved_symbol\", \"==\", identifier));\n    const hgncQuery = query(curationsRef, where(\"hgnc_id\", \"==\", identifier));\n  \n    const symbolSnapshot = await getDocs(symbolQuery);\n    let curationData = null;\n  \n    symbolSnapshot.forEach((doc) => {\n      if (doc.exists()) {\n        curationData = { id: doc.id, ...doc.data() };\n      }\n    });\n  \n    if (!curationData) {\n      const hgncSnapshot = await getDocs(hgncQuery);\n      hgncSnapshot.forEach((doc) => {\n        if (doc.exists()) {\n          curationData = { id: doc.id, ...doc.data() };\n        }\n      });\n    }\n  \n    return curationData;\n  };","// stores/precurationsStore.js\nimport { collection, getDocs, getDoc, addDoc, doc, updateDoc, deleteDoc, Timestamp, query, where } from 'firebase/firestore';\nimport { db } from '@/firebase';\n\n\n/**\n * Fetches all precuration documents from the Firestore collection.\n * @returns {Promise<Object>} An object mapping document IDs to precuration data.\n */\nexport const getPrecurations = async () => {\n  const querySnapshot = await getDocs(collection(db, 'precurations'));\n  let precurations = {};\n\n  querySnapshot.forEach((docSnapshot) => {\n    if (docSnapshot.exists()) {\n      // Include the document ID in the returned object\n      precurations[docSnapshot.id] = { id: docSnapshot.id, ...docSnapshot.data() };\n    } else {\n      throw new Error(\"Precuration document not found\");\n    }\n  });\n\n  return precurations;\n};\n\n\n/**\n * Creates a new precuration document in Firestore with the given data.\n * @param {Object} precurationData - The data for the new precuration.\n * @returns {Promise<string>} The ID of the newly created document.\n */\nexport const createPrecuration = async (precurationData) => {\n  const docRef = await addDoc(collection(db, 'precurations'), {\n    ...precurationData,\n    createdAt: Timestamp.fromDate(new Date()),\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n\n  return docRef.id;\n};\n\n\n/**\n * Retrieves a specific precuration document from Firestore by its document ID.\n * @param {string} docId - The document ID of the precuration to retrieve.\n * @returns {Promise<Object>} An object containing the precuration data.\n * @throws {Error} If the document is not found.\n */\nexport const getPrecuration = async (docId) => {\n  const precurationRef = doc(db, 'precurations', docId);\n  const docSnap = await getDoc(precurationRef);\n\n  if (docSnap.exists()) {\n    return { id: docSnap.id, ...docSnap.data() };\n  } else {\n    throw new Error(\"Precuration document not found\");\n  }\n};\n\n\n/**\n * Retrieves a specific precuration document from Firestore by either the approved symbol or HGNC ID.\n * @param {string} identifier - The approved symbol or HGNC ID to search for.\n * @returns {Promise<Object|null>} An object containing the precuration data if found, otherwise null.\n */\nexport const getPrecurationByHGNCIdOrSymbol = async (identifier) => {\n  const precurationsRef = collection(db, 'precurations');\n  const symbolQuery = query(precurationsRef, where(\"approved_symbol\", \"==\", identifier));\n  const hgncQuery = query(precurationsRef, where(\"hgnc_id\", \"==\", identifier));\n\n  const symbolSnapshot = await getDocs(symbolQuery);\n  const hgncSnapshot = await getDocs(hgncQuery);\n\n  let precurationData = null;\n  symbolSnapshot.forEach((doc) => {\n    if (doc.exists()) {\n      precurationData = { id: doc.id, ...doc.data() };\n    }\n  });\n\n  if (!precurationData) {\n    hgncSnapshot.forEach((doc) => {\n      if (doc.exists()) {\n        precurationData = { id: doc.id, ...doc.data() };\n      }\n    });\n  }\n\n  return precurationData;\n};\n\n\n/**\n * Updates a precuration document in Firestore with the given data.\n * @param {string} docId - The document ID of the precuration to update.\n * @param {Object} updatedData - An object containing the updated data.\n * @returns {Promise<void>}\n */\nexport const updatePrecuration = async (docId, updatedData) => {\n  if (!docId) {\n    throw new Error(\"Document ID is undefined or invalid\");\n  }\n  const precurationRef = doc(db, 'precurations', docId);\n  await updateDoc(precurationRef, {\n    ...updatedData,\n    updatedAt: Timestamp.fromDate(new Date()),\n  });\n};\n\n\n/**\n * Deletes a specific precuration document from Firestore by its document ID.\n * @param {string} docId - The document ID of the precuration to delete.\n * @returns {Promise<void>}\n * @throws {Error} If the document is not found or cannot be deleted.\n */\nexport const deletePrecuration = async (docId) => {\n  const precurationRef = doc(db, 'precurations', docId);\n  await deleteDoc(precurationRef);\n};\n","<!-- components/CurationModal.vue -->\n<template>\n  <v-dialog v-model=\"isOpen\" persistent max-width=\"1200px\">\n    <v-card>\n      <div class=\"d-flex justify-space-between align-center\">\n        <v-card-title>\n          {{ title }} - {{ editedItem.approved_symbol }} - HGNC:{{ editedItem.hgnc_id }}\n        </v-card-title>\n        <v-btn icon @click=\"close\">\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n      </div>\n      <v-card-text>\n        <v-tabs v-model=\"tab\" grow>\n          <v-tab v-if=\"showPreCurationTab\">Pre-Curation</v-tab>\n          <v-tab v-if=\"showCurationTab\">Curation</v-tab>\n        </v-tabs>\n\n         <v-window v-model=\"tab\" style=\"min-height: 300px;\">\n          <v-window-item>\n            <!-- Gene Detail Card Component -->\n            <GeneDetailCard\n               v-if=\"showGeneDetailCard\"\n              :id=\"editedItem.hgnc_id\"\n              visibilityScope=\"curationView\"\n              :showTitle=\"false\"\n            />\n\n            <!-- Precuration Form Component -->\n            <PrecurationForm\n              :approvedSymbol=\"editedItem.approved_symbol\"\n              :hgncId=\"editedItem.hgnc_id\"\n              @precuration-accepted=\"handlePrecurationAccepted\"\n            />\n          </v-window-item>\n\n          <v-window-item v-if=\"showCurationTab\">\n            <!-- CurationForm Component -->\n            <CurationForm\n              :approvedSymbol=\"editedItem.approved_symbol\"\n              :hgncId=\"editedItem.hgnc_id\"\n            />\n          </v-window-item>\n        </v-window>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"blue darken-1\" text @click=\"close\">Cancel</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n\n<v-snackbar\n  v-model=\"snackbarVisible\"\n  :color=\"snackbarColor\"\n  :timeout=\"6000\"\n>\n  {{ snackbarMessage }}\n</v-snackbar>\n\n</template>\n\n\n<script>\nimport { ref, watchEffect, watch, computed } from 'vue';\nimport GeneDetailCard from './GeneDetailCard.vue';\nimport PrecurationForm from './PrecurationForm.vue';\nimport CurationForm from './CurationForm.vue'; // Import the CurationForm component\nimport { getPrecurationByHGNCIdOrSymbol } from '@/stores/precurationsStore';\n\nexport default {\n  components: {\n    GeneDetailCard,\n    PrecurationForm,\n    CurationForm\n  },\n  props: {\n    item: {\n      type: Object,\n      required: true,\n    },\n    open: {\n      type: Boolean,\n      required: true,\n    },\n    context: {\n      type: String,\n      default: 'gene' // Default context, can be 'gene', 'precuration', or 'curation'\n    },\n  },\n  emits: ['close'],\n  setup(props, { emit }) {\n    const isOpen = ref(props.open);\n    const editedItem = ref({ ...props.item });\n    const showGeneDetailCard = ref(true); // Controls the visibility of the gene detail card\n    const showPreCurationTab = ref(true); // Controls the visibility of the precuration tab\n    const showCurationTab = ref(false); // Controls the visibility of the curation tab\n    const tab = ref(0); // Controls the active tab\n\n    const snackbarVisible = ref(false);\n    const snackbarMessage = ref('');\n    const snackbarColor = ref('success'); // Default color\n\n    const showSnackbar = (message, color = 'success') => {\n      snackbarMessage.value = message;\n      snackbarColor.value = color;\n      snackbarVisible.value = true;\n    };\n\n    watchEffect(() => {\n      isOpen.value = props.open;\n      editedItem.value = { ...props.item };\n    });\n\n    const handlePrecurationAccepted = () => {\n      if (props.context === 'precuration') {\n        // If the context is 'precuration', just close the modal\n        close();\n      } else {\n        // Otherwise, switch to the curation tab\n        showCurationTab.value = true;\n        tab.value = 1;\n      }\n    };\n\n    const close = () => emit('close');\n\n    const checkExistingCuration = async () => {\n      try {\n        const existingCuration = await getPrecurationByHGNCIdOrSymbol(editedItem.value.hgnc_id || editedItem.value.approved_symbol);\n        if (existingCuration) {\n          showCurationTab.value = true;\n          tab.value = 1; // Open Curation tab if curation exists\n        } else {\n          showCurationTab.value = false;\n          tab.value = 0; // Open Precuration tab if curation does not exist\n        }\n      } catch (error) {\n        showSnackbar(\"Error checking existing curation: \" + error.message, 'error');\n      }\n    };\n\n    // Computed property to determine the title of the modal\n    const title = computed(() => {\n      return props.context === 'curation' ? 'Curation' \n        : props.context === 'precuration' ? 'Precuration' \n        : 'Gene Curation';\n    });\n\n    // Watch for changes to the 'open' prop\n    watch(() => props.open, async (newVal) => {\n      if (newVal) { // If the modal is being opened\n        await initializeModal();\n      }\n    });\n\n    // Adjust the initial tab and content based on the context and existing curation\n    const initializeModal = async () => {\n      if (props.context === 'precuration') {\n        showGeneDetailCard.value = false;\n        showPreCurationTab.value = true;\n        showCurationTab.value = false;\n        tab.value = 0;\n      } else if (props.context === 'curation') {\n        showGeneDetailCard.value = false;\n        showPreCurationTab.value = false;\n        await checkExistingCuration(); // Check if there's an existing curation\n        // Set tab based on the existence of curation\n        tab.value = showCurationTab.value ? 1 : 0;\n      } else {\n        // For 'gene' context or other cases\n        await checkExistingCuration();\n      }\n    };\n\n    // Call initializeModal when the modal is opened\n    watch(() => props.open, (newVal) => {\n      if (newVal) {\n        initializeModal();\n      }\n    });\n\n    return {\n      initializeModal,\n      isOpen,\n      editedItem,\n      close,\n      handlePrecurationAccepted,\n      showGeneDetailCard,\n      showPreCurationTab,\n      showCurationTab,\n      tab,\n      snackbarVisible,\n      snackbarMessage,\n      snackbarColor,\n      showSnackbar,\n      title\n    };\n  },\n};\n</script>\n\n\n<style scoped>\n/* Add styles if needed */\n</style>\n","<!-- components/PrecurationForm.vue -->\n<template>\n  <v-card class=\"elevation-2\">\n    <v-card-title>Precuration</v-card-title>\n    <v-card-text>\n      <v-container>\n        <!-- Group the fields by the group attribute -->\n        <template v-for=\"(group, groupName) in groupedFields\" :key=\"groupName\">\n          <v-row v-if=\"groupHasVisibleFields(group)\">\n            <v-col cols=\"12\">\n              <h2>{{ groupName }}</h2>\n            </v-col>\n            <!-- Loop over fields within the same group and place them in columns -->\n            <v-col \n              v-for=\"(field, index) in group\" \n              :key=\"index\" \n              :cols=\"12 / group.length\"\n            >\n              <template v-if=\"field.format === 'boolean' && field.visibility.curationView\">\n                <v-switch\n                  v-model=\"precurationData[field.key]\"\n                  :label=\"field.label\"\n                  :false-value=\"false\"\n                  :true-value=\"true\"\n                  :color=\"field.style.curationView === 'switch' ? field.style.color : ''\"\n                  :class=\"{ 'inactive-switch': !precurationData[field.key] && field.style.curationView === 'switch' }\"\n                ></v-switch>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <template v-else-if=\"field.style && field.style.curationView === 'text-field' && field.visibility.curationView\">\n                <v-text-field\n                  v-model=\"precurationData[field.key]\"\n                  :label=\"field.label\"\n                  :class=\"field.style.curationView === 'text-field' ? 'custom-text-field' : ''\"\n                ></v-text-field>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <template v-else-if=\"field.style && field.style.curationView === 'select' && field.visibility.curationView\">\n                <v-select\n                  v-model=\"precurationData[field.key]\"\n                  :items=\"field.options\"\n                  :label=\"field.label\"\n                ></v-select>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <!-- Add other field types as needed -->\n            </v-col>\n          </v-row>\n        </template>\n        <v-row>\n          <v-col cols=\"12\" class=\"text-right\">\n            <v-btn color=\"primary\" @click=\"submitPrecuration\">Accept</v-btn>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-card-text>\n  </v-card>\n</template>\n\n\n<script>\nimport { precurationDetailsConfig } from '@/config/workflows/KidneyGeneticsGeneCuration/precurationDetailsConfig';\nimport {\n  getPrecurationByHGNCIdOrSymbol,\n  createPrecuration,\n  updatePrecuration\n} from \"@/stores/precurationsStore\";\n\nexport default {\n  name: 'PrecurationForm',\n  props: {\n    approvedSymbol: String,\n    hgncId: String,\n  },\n  data() {\n    return {\n      precurationData: this.initializePrecurationData(),\n      existingPrecurationId: null,\n    };\n  },\n  computed: {\n    groupedFields() {\n      const fields = this.precurationFields;\n      const groups = {};\n\n      // Group fields by their 'group.name'\n      fields.forEach(field => {\n        if (!groups[field.group.name]) {\n          groups[field.group.name] = [];\n        }\n        groups[field.group.name].push(field);\n      });\n\n      // Sort groups by 'group.order'\n      Object.values(groups).forEach(group => {\n        group.sort((a, b) => a.group.order - b.group.order);\n      });\n\n      return groups;\n    },\n    precurationFields() {\n      let fields = Object.entries(precurationDetailsConfig)\n        .map(([key, config]) => ({ ...config, key }));\n      return fields;\n    },\n  },\n  methods: {\n    groupHasVisibleFields(group) {\n      // This will check if there's at least one field in the group that should be visible\n      return group.some(field => field.visibility.curationView);\n    },\n    initializePrecurationData() {\n      const data = {};\n      Object.keys(precurationDetailsConfig).forEach(key => {\n        data[key] = ''; // Initialize with default value\n      });\n      return data;\n    },\n    async submitPrecuration() {\n      const currentTime = new Date().toISOString();\n      this.precurationData.updatedAt = currentTime;\n\n      if (!this.existingPrecurationId) {\n        this.precurationData.createdAt = currentTime;\n        const newId = await createPrecuration(this.precurationData);\n        // TODO: remove this log and handle the newId\n        console.log('New precuration created with ID:', newId);\n      } else {\n        await updatePrecuration(this.existingPrecurationId, this.precurationData);\n        console.log('Precuration updated:', this.existingPrecurationId);\n      }\n\n      this.$emit('precuration-accepted', this.precurationData);\n    },\n    displaySwitchValue(value) {\n      return value ? 'Yes' : 'No';\n    },\n  },\n  async created() {\n    try {\n      const precuration = await getPrecurationByHGNCIdOrSymbol(this.approvedSymbol || this.hgncId);\n      if (precuration) {\n        this.existingPrecurationId = precuration.id;\n        Object.assign(this.precurationData, precuration);\n      }\n    } catch (error) {\n      console.error('Error fetching precuration:', error.message);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.text-center {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.inactive-switch {\n  --v-theme-switch-on-background: var(--v-theme-inactive-color);\n}\n/* Additional styles can be added here if needed */\n</style>\n","import { render } from \"./PrecurationForm.vue?vue&type=template&id=e2171f3e&scoped=true\"\nimport script from \"./PrecurationForm.vue?vue&type=script&lang=js\"\nexport * from \"./PrecurationForm.vue?vue&type=script&lang=js\"\n\nimport \"./PrecurationForm.vue?vue&type=style&index=0&id=e2171f3e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e2171f3e\"]])\n\nexport default __exports__","<!-- components/CurationForm.vue -->\n<template>\n  <v-card class=\"elevation-2\">\n    <v-card-title>Curation</v-card-title>\n    <v-card-text>\n      <v-container>\n        <!-- Dynamic Field Rendering Based on Configuration -->\n        <template v-for=\"(group, groupName) in groupedFields\" :key=\"groupName\">\n          <v-row v-if=\"groupHasVisibleFields(group)\">\n            <v-col cols=\"12\">\n              <h2>{{ groupName }}</h2>\n            </v-col>\n            <v-col \n              v-for=\"(field, index) in group\" \n              :key=\"index\" \n              :cols=\"12 / group.length\"\n            >\n              <!-- Handle Different Field Types -->\n              <template v-if=\"field.format === 'text' && field.style && field.style.curationView === 'text-field'\">\n                <v-text-field\n                  v-model=\"curationData[field.key]\"\n                  :label=\"field.label\"\n                  outlined\n                  dense\n                ></v-text-field>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <template v-else-if=\"field.format === 'boolean'\">\n                <v-checkbox\n                  v-model=\"curationData[field.key]\"\n                  :label=\"field.label\"\n                ></v-checkbox>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <template v-else-if=\"field.format === 'number'\">\n                <v-text-field\n                  v-model=\"curationData[field.key]\"\n                  :label=\"field.label\"\n                  :min=\"field.min\"\n                  :max=\"field.max\"\n                  type=\"number\"\n                  outlined\n                  dense\n                ></v-text-field>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <template v-else-if=\"field.format === 'array' && field.style && field.style.curationView === 'select'\">\n                <v-select\n                  v-model=\"curationData[field.key]\"\n                  :items=\"field.options\"\n                  :label=\"field.label\"\n                  multiple\n                  outlined\n                  dense\n                ></v-select>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <template v-else-if=\"field.format === 'text' && field.style && field.style.curationView === 'select'\">\n                <v-select\n                  v-model=\"curationData[field.key]\"\n                  :items=\"field.options\"\n                  :label=\"field.label\"\n                  outlined\n                  dense\n                ></v-select>\n                <v-tooltip\n                  activator=\"parent\"\n                  location=\"top\"\n                >\n                  {{ field.description }}\n                </v-tooltip>\n              </template>\n              <!-- Add other field types as needed -->\n            </v-col>\n          </v-row>\n        </template>\n      </v-container>\n    </v-card-text>\n    <v-card-actions>\n      <v-spacer></v-spacer>\n      <v-btn color=\"primary\" @click=\"saveCuration\">Save</v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n\n<script>\nimport { curationDetailsConfig } from '@/config/workflows/KidneyGeneticsGeneCuration/curationDetailsConfig';\nimport {\n  createCuration,\n  updateCuration,\n  getCurationByHGNCIdOrSymbol\n} from \"@/stores/curationsStore\";\n\nexport default {\n  name: 'CurationForm',\n  props: {\n    approvedSymbol: String,\n    hgncId: String,\n  },\n  data() {\n    return {\n      curationData: this.initializeCurationData(),\n      existingCurationId: null,\n    };\n  },\n  async created() {\n    if (this.hgncId || this.approvedSymbol) {\n      try {\n        const curation = await getCurationByHGNCIdOrSymbol(this.hgncId || this.approvedSymbol);\n        if (curation) {\n          this.existingCurationId = curation.id;\n          Object.assign(this.curationData, curation);\n        }\n      } catch (error) {\n        console.error('Error fetching curation:', error.message);\n      }\n    }\n  },\n  computed: {\n    groupedFields() {\n      const fields = Object.entries(curationDetailsConfig)\n        .map(([key, config]) => ({ ...config, key }));\n      \n      const groups = {};\n      fields.forEach(field => {\n        if (!groups[field.group.name]) {\n          groups[field.group.name] = [];\n        }\n        groups[field.group.name].push(field);\n      });\n\n      Object.values(groups).forEach(group => {\n        group.sort((a, b) => a.group.order - b.group.order);\n      });\n\n      return groups;\n    },\n  },\n  methods: {\n    groupHasVisibleFields(group) {\n      // This will check if there's at least one field in the group that should be visible\n      return group.some(field => field.visibility.curationView);\n    },\n    initializeCurationData() {\n      const data = {};\n      Object.keys(curationDetailsConfig).forEach(key => {\n        const field = curationDetailsConfig[key];\n        if (field.format === 'boolean') {\n          data[key] = false;\n        } else if (field.format === 'number') {\n          data[key] = field.min || 0; // Use min value if defined, otherwise default to 0\n        } else if (field.format === 'array' && field.style && field.style.curationView === 'select') {\n          data[key] = [];\n        } else if (field.format === 'text' && field.style && field.style.curationView === 'select') {\n          data[key] = null;\n        } else {\n          data[key] = '';\n        }\n      });\n      return data;\n    },\n    async saveCuration() {\n      try {\n        if (this.existingCurationId) {\n          // Update the existing curation\n          await updateCuration(this.existingCurationId, this.curationData);\n          console.log('Curation updated:', this.existingCurationId);\n        } else {\n          // Create a new curation\n          const newId = await createCuration(this.curationData);\n          console.log('New curation created with ID:', newId);\n        }\n      } catch (error) {\n        console.error('Error saving curation:', error.message);\n      }\n    },\n  },\n};\n</script>\n\n\n<style scoped>\nh2 {\n  font-size: 1.5em;\n  margin-bottom: 0.5em;\n}\n</style>\n","import { render } from \"./CurationForm.vue?vue&type=template&id=fb1ec15a&scoped=true\"\nimport script from \"./CurationForm.vue?vue&type=script&lang=js\"\nexport * from \"./CurationForm.vue?vue&type=script&lang=js\"\n\nimport \"./CurationForm.vue?vue&type=style&index=0&id=fb1ec15a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb1ec15a\"]])\n\nexport default __exports__","import { render } from \"./CurationModal.vue?vue&type=template&id=f05fa8b2&scoped=true\"\nimport script from \"./CurationModal.vue?vue&type=script&lang=js\"\nexport * from \"./CurationModal.vue?vue&type=script&lang=js\"\n\nimport \"./CurationModal.vue?vue&type=style&index=0&id=f05fa8b2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f05fa8b2\"]])\n\nexport default __exports__","<!-- components/DataDisplayTable.vue -->\n<template>\n  <v-container>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"items\"\n      v-model:items-per-page=\"itemsPerPage\"\n      :server-items-length=\"totalItems\"\n      :loading=\"loading\"\n      class=\"elevation-1\"\n      density=\"compact\"\n    >\n      <!-- Header slot -->\n      <template v-for=\"h in headers\" v-slot:[`header.${h.value}`]=\"{ header }\" :key=\"h.value\">\n            <span>{{h.title}}</span>\n            <v-tooltip\n              v-bind:header=\"header\"\n              v-if=\"h.description\"\n              activator=\"parent\"\n              location=\"top\"\n            >\n              {{ h.description }}\n            </v-tooltip>\n      </template>\n\n      <!-- Default slot for items -->\n      <template v-for=\"column in config.columns\" v-slot:[`item.${column.name}`]=\"{ item }\" :key=\"column.name\">\n        <!-- Handle text formatting -->\n        <div v-if=\"column.type === 'text'\">\n          {{ item[column.name] }}\n        </div>\n        <!-- Handle date formatting -->\n        <div v-else-if=\"column.type === 'date'\">\n          {{ formatTimestamp(item[column.name]) }}\n        </div>\n        <!-- Handle boolean formatting -->\n        <router-link v-else-if=\"column.type === 'link'\" :to=\"column.to(item)\">\n          {{ item[column.name] }}\n        </router-link>\n        <!-- Handle boolean formatting -->\n        <template v-else-if=\"column.type === 'slot'\">\n          <slot :name=\"column.slotName\" :item=\"item\"></slot>\n        </template>\n      </template>\n    </v-data-table>\n    \n    <!-- Modal slot -->\n    <slot name=\"modal\"></slot>\n\n    <!-- Pagination controls -->\n    <v-pagination\n      v-model=\"page\"\n      :length=\"totalPages\"\n      @update:page=\"$emit('update-page', page)\"\n    ></v-pagination>\n  </v-container>\n</template>\n\n<script>\nimport { ref, computed, watch } from 'vue';\n\n/**\n * A generic data table component for displaying items with configurable columns\n * and pagination.\n */\nexport default {\n  props: {\n    headers: Array, // The headers for the table\n    items: Array, // The items to display in the table\n    config: Object, // Configuration for the columns\n    totalItems: Number, // Total number of items for pagination\n    loading: Boolean, // Loading state\n  },\n  setup(props, { emit }) {\n    const page = ref(1); // Current page number\n    const itemsPerPage = ref(10); // Number of items per page\n\n    // Compute the total number of pages\n    const totalPages = computed(() => Math.ceil(props.totalItems / itemsPerPage.value));\n\n    // Method to format Firestore Timestamp\n    const formatTimestamp = (timestamp) => {\n      if (!timestamp) return '';\n      const date = new Date(timestamp.seconds * 1000);\n      return date.toLocaleDateString(); // Adjust format as needed\n    };\n\n    // Watch for changes in page and itemsPerPage and emit events\n    watch(page, () => {\n      emit('page-changed', page.value);\n    });\n\n    watch(itemsPerPage, () => {\n      emit('items-per-page-changed', itemsPerPage.value);\n    });\n\n    return {\n      page,\n      itemsPerPage,\n      totalPages,\n      formatTimestamp\n    };\n  },\n};\n</script>\n","import { render } from \"./DataDisplayTable.vue?vue&type=template&id=7f99aeb9\"\nimport script from \"./DataDisplayTable.vue?vue&type=script&lang=js\"\nexport * from \"./DataDisplayTable.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- components/GeneDetailCard.vue -->\n<template>\n  <v-container>\n    <v-card v-if=\"gene\" class=\"mx-auto my-4\" max-width=\"800\">\n      <v-card-title v-if=\"showTitle\" class=\"headline\">{{ gene.approved_symbol }}</v-card-title>\n      <v-card-text>\n        <v-table dense>\n          <tbody>\n            <template v-for=\"(value, key) in filteredGeneDetails\" :key=\"key\">\n              <tr>\n                <td>\n                  <strong>\n                    <span class=\"label-hover\" :title=\"value.description\">{{ value.label }}</span>\n                    <v-tooltip\n                      activator=\"parent\"\n                      location=\"start\"\n                    >\n                      {{ value.description }}\n                    </v-tooltip>\n                  </strong>\n                </td>\n                <td v-html=\"value.formattedValue\"></td>\n              </tr>\n            </template>\n          </tbody>\n        </v-table>\n      </v-card-text>\n    </v-card>\n    <v-alert v-else type=\"error\">\n      Gene not found or failed to load.\n    </v-alert>\n  </v-container>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport { getGeneByHGNCIdOrSymbol } from '@/stores/geneStore';\nimport { geneDetailsConfig } from '@/config/workflows/KidneyGeneticsGeneCuration/workflowConfig';\n\nexport default {\n  props: {\n    id: String,\n    visibilityScope: {\n      type: String,\n      default: 'standardView', // or 'curationView'\n    },\n    showTitle: { // New prop for showing the card title\n      type: Boolean,\n      default: true,\n    },\n  },\n  setup(props) {\n    const gene = ref(null);\n\n    onMounted(async () => {\n      if (props.id) {\n        gene.value = await getGeneByHGNCIdOrSymbol(props.id).catch(error => {\n          console.error(error.message);\n        });\n      }\n    });\n\n    const filteredGeneDetails = computed(() => {\n      if (!gene.value) return [];\n\n      return Object.entries(geneDetailsConfig)\n        .filter(([, fieldConfig]) => fieldConfig.visibility[props.visibilityScope])\n        .map(([key, fieldConfig]) => {\n          const value = gene.value[key];\n          return {\n            label: fieldConfig.label,\n            description: fieldConfig.description || '',\n            formattedValue: formatValue(value, fieldConfig),\n          };\n        });\n    });\n\n    // for now objects and arrays are formatted into a readable string format\n    // TODO: add support for formatting objects and arrays into a table\n    function formatValue(value, fieldConfig) {\n      if (value == null) return 'N/A'; // Handle null and undefined values\n\n      switch (fieldConfig.format) {\n        case 'date':\n          return new Date(value.seconds * 1000).toLocaleDateString();\n        case 'number':\n          return parseFloat(value).toFixed(2);\n        case 'array':\n          return value.join(', ');\n        case 'map':\n          return Object.entries(value).map(([k, v]) => `${k}: ${v}`).join(', ');\n        case 'text':\n          return value;\n        default:\n          return JSON.stringify(value);\n      }\n    }\n\n    return { gene, filteredGeneDetails };\n  },\n};\n</script>\n\n<style scoped>\n.label-hover {\n  cursor: help;\n}\n\n.v-simple-table {\n  max-height: 300px;\n  overflow-y: auto;\n}\n</style>\n","import { render } from \"./GeneDetailCard.vue?vue&type=template&id=ea7ae29e&scoped=true\"\nimport script from \"./GeneDetailCard.vue?vue&type=script&lang=js\"\nexport * from \"./GeneDetailCard.vue?vue&type=script&lang=js\"\n\nimport \"./GeneDetailCard.vue?vue&type=style&index=0&id=ea7ae29e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ea7ae29e\"]])\n\nexport default __exports__"],"names":["getCurations","async","querySnapshot","getDocs","collection","db","curations","forEach","docSnapshot","exists","Error","id","data","createCuration","docRef","addDoc","curationData","createdAt","Timestamp","fromDate","Date","updatedAt","updateCuration","docId","updatedData","curationRef","doc","updateDoc","deleteCuration","deleteDoc","getCurationByHGNCIdOrSymbol","curationsRef","symbolQuery","query","where","identifier","hgncQuery","symbolSnapshot","hgncSnapshot","getPrecurations","precurations","createPrecuration","precurationData","getPrecurationByHGNCIdOrSymbol","precurationsRef","updatePrecuration","precurationRef","deletePrecuration","class","_createVNode","_component_v_dialog","$setup","isOpen","$event","persistent","_component_v_card","_createElementVNode","_hoisted_1","_component_v_card_title","title","_toDisplayString","editedItem","approved_symbol","hgnc_id","_component_v_btn","icon","onClick","close","_component_v_icon","_component_v_card_text","_component_v_tabs","tab","grow","showPreCurationTab","_createBlock","_component_v_tab","key","showCurationTab","_component_v_window","style","_component_v_window_item","showGeneDetailCard","_component_GeneDetailCard","visibilityScope","showTitle","_component_PrecurationForm","approvedSymbol","hgncId","onPrecurationAccepted","handlePrecurationAccepted","_component_CurationForm","_component_v_card_actions","_component_v_spacer","color","text","_component_v_snackbar","snackbarVisible","snackbarColor","timeout","snackbarMessage","_component_v_container","_createElementBlock","_Fragment","_renderList","$options","groupedFields","group","groupName","groupHasVisibleFields","_component_v_row","_component_v_col","cols","field","index","length","format","visibility","curationView","_component_v_switch","$data","label","_normalizeClass","_component_v_tooltip","activator","location","description","_component_v_text_field","_component_v_select","items","options","submitPrecuration","name","props","String","this","initializePrecurationData","existingPrecurationId","computed","fields","precurationFields","groups","push","Object","values","sort","a","b","order","entries","precurationDetailsConfig","map","config","methods","some","keys","currentTime","toISOString","console","log","newId","$emit","displaySwitchValue","value","created","precuration","assign","error","message","__exports__","outlined","dense","_component_v_checkbox","min","max","type","multiple","saveCuration","initializeCurationData","existingCurationId","curation","curationDetailsConfig","components","GeneDetailCard","PrecurationForm","CurationForm","item","required","open","Boolean","context","default","emits","setup","emit","ref","showSnackbar","watchEffect","checkExistingCuration","existingCuration","watch","newVal","initializeModal","render","_component_v_data_table","headers","$props","itemsPerPage","totalItems","loading","density","h","header","columns","column","_hoisted_2","formatTimestamp","_component_router_link","to","_renderSlot","_ctx","$slots","slotName","_component_v_pagination","page","totalPages","_cache","Array","Number","Math","ceil","timestamp","date","seconds","toLocaleDateString","gene","_component_v_table","filteredGeneDetails","innerHTML","formattedValue","_component_v_alert","onMounted","getGeneByHGNCIdOrSymbol","catch","geneDetailsConfig","filter","fieldConfig","formatValue","parseFloat","toFixed","join","k","v","JSON","stringify"],"sourceRoot":""}