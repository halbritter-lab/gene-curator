rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // genes collection
    // Allow public read access, but only curators and admins can write
    match /genes/{document} {
      allow read: if true
      allow create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "curator"
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "curator"
      allow create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin"
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin"
    }
    // precurations collection
    // Allow public read access, but only curators and admins can write
    match /precurations/{document} {
      allow read: if true
      allow create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "curator"
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "curator"
      allow create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin"
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin"
    }
    // curations collection
    // Allow public read access, but only curators and admins can write
    match /curations/{document} {
      allow read: if true
      allow create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "curator"
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "curator"
      allow create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin"
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin"
    }
    // users collection
    // Allow public read access, but only curators and admins can write
    match /users/{document} {
      allow read, create: if true
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin"
    }
  }
}